// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new asset API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for asset API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAssetsCode(params *DeleteAssetsCodeParams) (*DeleteAssetsCodeNoContent, error)

	GetAssets(params *GetAssetsParams) (*GetAssetsOK, error)

	GetAssetsCode(params *GetAssetsCodeParams) (*GetAssetsCodeOK, error)

	PatchAssetCode(params *PatchAssetCodeParams) (*PatchAssetCodeCreated, *PatchAssetCodeNoContent, error)

	PatchAssets(params *PatchAssetsParams) (*PatchAssetsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAssetsCode deletes an asset

  This endpoint allows you to delete a given asset. This endpoint is case sensitive on the asset family code.
*/
func (a *Client) DeleteAssetsCode(params *DeleteAssetsCodeParams) (*DeleteAssetsCodeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAssetsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delete_assets__code_",
		Method:             "DELETE",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAssetsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAssetsCodeNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delete_assets__code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAssets gets the list of the assets of a given asset family

  This endpoint allows you to get a list of assets of a given asset family. Assets are paginated. This endpoint is case sensitive on the asset family code.
*/
func (a *Client) GetAssets(params *GetAssetsParams) (*GetAssetsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_assets",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/assets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_assets: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAssetsCode gets an asset of a given asset family

  This endpoint allows you to get the information about a given asset for a given asset family. This endpoint is case sensitive on the asset family code.
*/
func (a *Client) GetAssetsCode(params *GetAssetsCodeParams) (*GetAssetsCodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_assets__code_",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetsCodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_assets__code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAssetCode updates create an asset

  This endpoint allows you to update a given asset of a given asset family. Learn more about the <a href="/documentation/update.html#patch-asset-attribute-values">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.
*/
func (a *Client) PatchAssetCode(params *PatchAssetCodeParams) (*PatchAssetCodeCreated, *PatchAssetCodeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAssetCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_asset__code_",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAssetCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PatchAssetCodeCreated:
		return value, nil, nil
	case *PatchAssetCodeNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for asset: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAssets updates create several assets

  This endpoint allows you to update and/or create several assets of one given asset family at once. Learn more about the <a href="/documentation/update.html#patch-asset-attribute-values">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.
*/
func (a *Client) PatchAssets(params *PatchAssetsParams) (*PatchAssetsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAssetsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_assets",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/assets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAssetsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAssetsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patch_assets: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

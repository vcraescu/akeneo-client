// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAssetsReader is a Reader for the GetAssets structure.
type GetAssetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAssetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAssetsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAssetsOK creates a GetAssetsOK with default headers values
func NewGetAssetsOK() *GetAssetsOK {
	return &GetAssetsOK{}
}

/*GetAssetsOK handles this case with default header values.

Return the assets of the given asset family paginated
*/
type GetAssetsOK struct {
	Payload *GetAssetsOKBody
}

func (o *GetAssetsOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{asset_family_code}/assets][%d] getAssetsOK  %+v", 200, o.Payload)
}

func (o *GetAssetsOK) GetPayload() *GetAssetsOKBody {
	return o.Payload
}

func (o *GetAssetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetsUnauthorized creates a GetAssetsUnauthorized with default headers values
func NewGetAssetsUnauthorized() *GetAssetsUnauthorized {
	return &GetAssetsUnauthorized{}
}

/*GetAssetsUnauthorized handles this case with default header values.

Authentication required
*/
type GetAssetsUnauthorized struct {
	Payload *GetAssetsUnauthorizedBody
}

func (o *GetAssetsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{asset_family_code}/assets][%d] getAssetsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAssetsUnauthorized) GetPayload() *GetAssetsUnauthorizedBody {
	return o.Payload
}

func (o *GetAssetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetsNotAcceptable creates a GetAssetsNotAcceptable with default headers values
func NewGetAssetsNotAcceptable() *GetAssetsNotAcceptable {
	return &GetAssetsNotAcceptable{}
}

/*GetAssetsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetAssetsNotAcceptable struct {
	Payload *GetAssetsNotAcceptableBody
}

func (o *GetAssetsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{asset_family_code}/assets][%d] getAssetsNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetAssetsNotAcceptable) GetPayload() *GetAssetsNotAcceptableBody {
	return o.Payload
}

func (o *GetAssetsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetsNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAssetsNotAcceptableBody get assets not acceptable body
swagger:model GetAssetsNotAcceptableBody
*/
type GetAssetsNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get assets not acceptable body
func (o *GetAssetsNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetAssetsNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBody Asset
swagger:model GetAssetsOKBody
*/
type GetAssetsOKBody struct {

	// links
	Links *GetAssetsOKBodyGetAssetsOKBodyAO0Links `json:"_links,omitempty"`

	// embedded
	Embedded *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAssetsOKBody) UnmarshalJSON(raw []byte) error {
	// GetAssetsOKBodyAO0
	var dataGetAssetsOKBodyAO0 struct {
		Links *GetAssetsOKBodyGetAssetsOKBodyAO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAssetsOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetAssetsOKBodyAO0.Links

	// GetAssetsOKBodyAO1
	var dataGetAssetsOKBodyAO1 struct {
		Embedded *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAssetsOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataGetAssetsOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAssetsOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetAssetsOKBodyAO0 struct {
		Links *GetAssetsOKBodyGetAssetsOKBodyAO0Links `json:"_links,omitempty"`
	}

	dataGetAssetsOKBodyAO0.Links = o.Links

	jsonDataGetAssetsOKBodyAO0, errGetAssetsOKBodyAO0 := swag.WriteJSON(dataGetAssetsOKBodyAO0)
	if errGetAssetsOKBodyAO0 != nil {
		return nil, errGetAssetsOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetAssetsOKBodyAO0)
	var dataGetAssetsOKBodyAO1 struct {
		Embedded *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataGetAssetsOKBodyAO1.Embedded = o.Embedded

	jsonDataGetAssetsOKBodyAO1, errGetAssetsOKBodyAO1 := swag.WriteJSON(dataGetAssetsOKBodyAO1)
	if errGetAssetsOKBodyAO1 != nil {
		return nil, errGetAssetsOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetAssetsOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get assets o k body
func (o *GetAssetsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetsOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetsOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetsOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO0Links get assets o k body get assets o k body a o0 links
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO0Links
*/
type GetAssetsOKBodyGetAssetsOKBodyAO0Links struct {

	// first
	First *GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext `json:"next,omitempty"`

	// self
	Self *GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o0 links
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetsOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetsOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetsOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst get assets o k body get assets o k body a o0 links first
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst
*/
type GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o0 links first
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext get assets o k body get assets o k body a o0 links next
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext
*/
type GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o0 links next
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf get assets o k body get assets o k body a o0 links self
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf
*/
type GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o0 links self
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1Embedded get assets o k body get assets o k body a o1 embedded
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1Embedded
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1Embedded struct {

	// items
	Items []*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0 `json:"_items"`
}

// Validate validates this get assets o k body get assets o k body a o1 embedded
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAssetsOK" + "." + "_embedded" + "." + "_items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0 get assets o k body get assets o k body a o1 embedded items items0
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// Code of the asset
	// Required: true
	Code *string `json:"code"`

	// values
	Values *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		Code *string `json:"code"`

		Values *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.Code = dataAO1.Code

	o.Values = dataAO1.Values

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		Code *string `json:"code"`

		Values *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
	}

	dataAO1.Code = o.Code

	dataAO1.Values = o.Values

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get assets o k body get assets o k body a o1 embedded items items0
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links get assets o k body get assets o k body a o1 embedded items items0 a o0 links
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o1 embedded items items0 a o0 links
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf get assets o k body get assets o k body a o1 embedded items items0 a o0 links self
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o1 embedded items items0 a o0 links self
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values struct {

	// attribute code
	AttributeCode []*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this get assets o k body get assets o k body a o1 embedded items items0 a o1 values
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1Values
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 get assets o k body get assets o k body a o1 embedded items items0 a o1 values attribute code items0
swagger:model GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0
*/
type GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 struct {

	// Channel code of the asset attribute value
	Channel string `json:"channel,omitempty"`

	// Asset attribute value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the asset attribute value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this get assets o k body get assets o k body a o1 embedded items items0 a o1 values attribute code items0
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetsOKBodyGetAssetsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetsUnauthorizedBody get assets unauthorized body
swagger:model GetAssetsUnauthorizedBody
*/
type GetAssetsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get assets unauthorized body
func (o *GetAssetsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAssetsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchAssetCodeReader is a Reader for the PatchAssetCode structure.
type PatchAssetCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAssetCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchAssetCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchAssetCodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAssetCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchAssetCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchAssetCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchAssetCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAssetCodeCreated creates a PatchAssetCodeCreated with default headers values
func NewPatchAssetCodeCreated() *PatchAssetCodeCreated {
	return &PatchAssetCodeCreated{}
}

/*PatchAssetCodeCreated handles this case with default header values.

Created
*/
type PatchAssetCodeCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PatchAssetCodeCreated) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeCreated ", 201)
}

func (o *PatchAssetCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchAssetCodeNoContent creates a PatchAssetCodeNoContent with default headers values
func NewPatchAssetCodeNoContent() *PatchAssetCodeNoContent {
	return &PatchAssetCodeNoContent{}
}

/*PatchAssetCodeNoContent handles this case with default header values.

No content to return
*/
type PatchAssetCodeNoContent struct {
	/*URI of the updated resource
	 */
	Location string
}

func (o *PatchAssetCodeNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeNoContent ", 204)
}

func (o *PatchAssetCodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchAssetCodeBadRequest creates a PatchAssetCodeBadRequest with default headers values
func NewPatchAssetCodeBadRequest() *PatchAssetCodeBadRequest {
	return &PatchAssetCodeBadRequest{}
}

/*PatchAssetCodeBadRequest handles this case with default header values.

Bad request
*/
type PatchAssetCodeBadRequest struct {
	Payload *PatchAssetCodeBadRequestBody
}

func (o *PatchAssetCodeBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAssetCodeBadRequest) GetPayload() *PatchAssetCodeBadRequestBody {
	return o.Payload
}

func (o *PatchAssetCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCodeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCodeUnauthorized creates a PatchAssetCodeUnauthorized with default headers values
func NewPatchAssetCodeUnauthorized() *PatchAssetCodeUnauthorized {
	return &PatchAssetCodeUnauthorized{}
}

/*PatchAssetCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PatchAssetCodeUnauthorized struct {
	Payload *PatchAssetCodeUnauthorizedBody
}

func (o *PatchAssetCodeUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchAssetCodeUnauthorized) GetPayload() *PatchAssetCodeUnauthorizedBody {
	return o.Payload
}

func (o *PatchAssetCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCodeUnsupportedMediaType creates a PatchAssetCodeUnsupportedMediaType with default headers values
func NewPatchAssetCodeUnsupportedMediaType() *PatchAssetCodeUnsupportedMediaType {
	return &PatchAssetCodeUnsupportedMediaType{}
}

/*PatchAssetCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchAssetCodeUnsupportedMediaType struct {
	Payload *PatchAssetCodeUnsupportedMediaTypeBody
}

func (o *PatchAssetCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchAssetCodeUnsupportedMediaType) GetPayload() *PatchAssetCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchAssetCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCodeUnprocessableEntity creates a PatchAssetCodeUnprocessableEntity with default headers values
func NewPatchAssetCodeUnprocessableEntity() *PatchAssetCodeUnprocessableEntity {
	return &PatchAssetCodeUnprocessableEntity{}
}

/*PatchAssetCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PatchAssetCodeUnprocessableEntity struct {
	Payload *PatchAssetCodeUnprocessableEntityBody
}

func (o *PatchAssetCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets/{code}][%d] patchAssetCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchAssetCodeUnprocessableEntity) GetPayload() *PatchAssetCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PatchAssetCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchAssetCodeBadRequestBody patch asset code bad request body
swagger:model PatchAssetCodeBadRequestBody
*/
type PatchAssetCodeBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset code bad request body
func (o *PatchAssetCodeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeBody patch asset code body
swagger:model PatchAssetCodeBody
*/
type PatchAssetCodeBody struct {

	// Code of the asset
	// Required: true
	Code *string `json:"code"`

	// values
	Values *PatchAssetCodeParamsBodyValues `json:"values,omitempty"`
}

// Validate validates this patch asset code body
func (o *PatchAssetCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchAssetCodeBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchAssetCodeBody) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeParamsBodyValues Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.
swagger:model PatchAssetCodeParamsBodyValues
*/
type PatchAssetCodeParamsBodyValues struct {

	// attribute code
	AttributeCode []*PatchAssetCodeParamsBodyValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this patch asset code params body values
func (o *PatchAssetCodeParamsBodyValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchAssetCodeParamsBodyValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeParamsBodyValues) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeParamsBodyValues) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeParamsBodyValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeParamsBodyValuesAttributeCodeItems0 patch asset code params body values attribute code items0
swagger:model PatchAssetCodeParamsBodyValuesAttributeCodeItems0
*/
type PatchAssetCodeParamsBodyValuesAttributeCodeItems0 struct {

	// Channel code of the asset attribute value
	Channel string `json:"channel,omitempty"`

	// Asset attribute value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the asset attribute value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this patch asset code params body values attribute code items0
func (o *PatchAssetCodeParamsBodyValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeParamsBodyValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeParamsBodyValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeParamsBodyValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeUnauthorizedBody patch asset code unauthorized body
swagger:model PatchAssetCodeUnauthorizedBody
*/
type PatchAssetCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset code unauthorized body
func (o *PatchAssetCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeUnprocessableEntityBody patch asset code unprocessable entity body
swagger:model PatchAssetCodeUnprocessableEntityBody
*/
type PatchAssetCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset code unprocessable entity body
func (o *PatchAssetCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCodeUnsupportedMediaTypeBody patch asset code unsupported media type body
swagger:model PatchAssetCodeUnsupportedMediaTypeBody
*/
type PatchAssetCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset code unsupported media type body
func (o *PatchAssetCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

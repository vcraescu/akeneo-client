// Code generated by go-swagger; DO NOT EDIT.

package asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchAssetsReader is a Reader for the PatchAssets structure.
type PatchAssetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAssetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAssetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAssetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchAssetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchAssetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchAssetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAssetsOK creates a PatchAssetsOK with default headers values
func NewPatchAssetsOK() *PatchAssetsOK {
	return &PatchAssetsOK{}
}

/*PatchAssetsOK handles this case with default header values.

OK
*/
type PatchAssetsOK struct {
	Payload []*PatchAssetsOKBodyItems0
}

func (o *PatchAssetsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets][%d] patchAssetsOK  %+v", 200, o.Payload)
}

func (o *PatchAssetsOK) GetPayload() []*PatchAssetsOKBodyItems0 {
	return o.Payload
}

func (o *PatchAssetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetsBadRequest creates a PatchAssetsBadRequest with default headers values
func NewPatchAssetsBadRequest() *PatchAssetsBadRequest {
	return &PatchAssetsBadRequest{}
}

/*PatchAssetsBadRequest handles this case with default header values.

Bad request
*/
type PatchAssetsBadRequest struct {
	Payload *PatchAssetsBadRequestBody
}

func (o *PatchAssetsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets][%d] patchAssetsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAssetsBadRequest) GetPayload() *PatchAssetsBadRequestBody {
	return o.Payload
}

func (o *PatchAssetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetsUnauthorized creates a PatchAssetsUnauthorized with default headers values
func NewPatchAssetsUnauthorized() *PatchAssetsUnauthorized {
	return &PatchAssetsUnauthorized{}
}

/*PatchAssetsUnauthorized handles this case with default header values.

Authentication required
*/
type PatchAssetsUnauthorized struct {
	Payload *PatchAssetsUnauthorizedBody
}

func (o *PatchAssetsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets][%d] patchAssetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchAssetsUnauthorized) GetPayload() *PatchAssetsUnauthorizedBody {
	return o.Payload
}

func (o *PatchAssetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetsRequestEntityTooLarge creates a PatchAssetsRequestEntityTooLarge with default headers values
func NewPatchAssetsRequestEntityTooLarge() *PatchAssetsRequestEntityTooLarge {
	return &PatchAssetsRequestEntityTooLarge{}
}

/*PatchAssetsRequestEntityTooLarge handles this case with default header values.

Request Entity Too Large
*/
type PatchAssetsRequestEntityTooLarge struct {
	Payload *PatchAssetsRequestEntityTooLargeBody
}

func (o *PatchAssetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets][%d] patchAssetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchAssetsRequestEntityTooLarge) GetPayload() *PatchAssetsRequestEntityTooLargeBody {
	return o.Payload
}

func (o *PatchAssetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetsRequestEntityTooLargeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetsUnsupportedMediaType creates a PatchAssetsUnsupportedMediaType with default headers values
func NewPatchAssetsUnsupportedMediaType() *PatchAssetsUnsupportedMediaType {
	return &PatchAssetsUnsupportedMediaType{}
}

/*PatchAssetsUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchAssetsUnsupportedMediaType struct {
	Payload *PatchAssetsUnsupportedMediaTypeBody
}

func (o *PatchAssetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-families/{asset_family_code}/assets][%d] patchAssetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchAssetsUnsupportedMediaType) GetPayload() *PatchAssetsUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchAssetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetsUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchAssetsBadRequestBody patch assets bad request body
swagger:model PatchAssetsBadRequestBody
*/
type PatchAssetsBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch assets bad request body
func (o *PatchAssetsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsOKBodyItems0 patch assets o k body items0
swagger:model PatchAssetsOKBodyItems0
*/
type PatchAssetsOKBodyItems0 struct {

	// Resource code
	Code string `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`

	// HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this patch assets o k body items0
func (o *PatchAssetsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchAssetsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsParamsBodyItems0 patch assets params body items0
swagger:model PatchAssetsParamsBodyItems0
*/
type PatchAssetsParamsBodyItems0 struct {

	// Code of the asset
	// Required: true
	Code *string `json:"code"`

	// values
	Values *PatchAssetsParamsBodyItems0Values `json:"values,omitempty"`
}

// Validate validates this patch assets params body items0
func (o *PatchAssetsParamsBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchAssetsParamsBodyItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchAssetsParamsBodyItems0) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchAssetsParamsBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsParamsBodyItems0Values Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.
swagger:model PatchAssetsParamsBodyItems0Values
*/
type PatchAssetsParamsBodyItems0Values struct {

	// attribute code
	AttributeCode []*PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this patch assets params body items0 values
func (o *PatchAssetsParamsBodyItems0Values) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchAssetsParamsBodyItems0Values) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0Values) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0Values) UnmarshalBinary(b []byte) error {
	var res PatchAssetsParamsBodyItems0Values
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0 patch assets params body items0 values attribute code items0
swagger:model PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0
*/
type PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0 struct {

	// Channel code of the asset attribute value
	Channel string `json:"channel,omitempty"`

	// Asset attribute value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the asset attribute value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this patch assets params body items0 values attribute code items0
func (o *PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res PatchAssetsParamsBodyItems0ValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsRequestEntityTooLargeBody patch assets request entity too large body
swagger:model PatchAssetsRequestEntityTooLargeBody
*/
type PatchAssetsRequestEntityTooLargeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch assets request entity too large body
func (o *PatchAssetsRequestEntityTooLargeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsRequestEntityTooLargeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsRequestEntityTooLargeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetsRequestEntityTooLargeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsUnauthorizedBody patch assets unauthorized body
swagger:model PatchAssetsUnauthorizedBody
*/
type PatchAssetsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch assets unauthorized body
func (o *PatchAssetsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetsUnsupportedMediaTypeBody patch assets unsupported media type body
swagger:model PatchAssetsUnsupportedMediaTypeBody
*/
type PatchAssetsUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch assets unsupported media type body
func (o *PatchAssetsUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetsUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetsUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetsUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

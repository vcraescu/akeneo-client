// Code generated by go-swagger; DO NOT EDIT.

package asset_attribute_option

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new asset attribute option API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for asset attribute option API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetAssetAttributesAttributeCodeOptionsCode(params *GetAssetAttributesAttributeCodeOptionsCodeParams) (*GetAssetAttributesAttributeCodeOptionsCodeOK, error)

	GetAssetFamilyAttributesAttributeCodeOptions(params *GetAssetFamilyAttributesAttributeCodeOptionsParams) (*GetAssetFamilyAttributesAttributeCodeOptionsOK, error)

	PatchAssetAttributesAttributeCodeOptionsCode(params *PatchAssetAttributesAttributeCodeOptionsCodeParams) (*PatchAssetAttributesAttributeCodeOptionsCodeCreated, *PatchAssetAttributesAttributeCodeOptionsCodeNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAssetAttributesAttributeCodeOptionsCode gets an attribute option for a given attribute of a given asset family

  This endpoint allows you to get the information about a given asset attribute option.
*/
func (a *Client) GetAssetAttributesAttributeCodeOptionsCode(params *GetAssetAttributesAttributeCodeOptionsCodeParams) (*GetAssetAttributesAttributeCodeOptionsCodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetAttributesAttributeCodeOptionsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_asset_attributes__attribute_code__options__code_",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetAttributesAttributeCodeOptionsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetAttributesAttributeCodeOptionsCodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_asset_attributes__attribute_code__options__code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAssetFamilyAttributesAttributeCodeOptions gets a list of attribute options of a given attribute for a given asset family

  This endpoint allows you to get a list of attribute options for a given asset family.
*/
func (a *Client) GetAssetFamilyAttributesAttributeCodeOptions(params *GetAssetFamilyAttributesAttributeCodeOptionsParams) (*GetAssetFamilyAttributesAttributeCodeOptionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetFamilyAttributesAttributeCodeOptionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_asset_family_attributes__attribute_code__options",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetFamilyAttributesAttributeCodeOptionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetFamilyAttributesAttributeCodeOptionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_asset_family_attributes__attribute_code__options: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAssetAttributesAttributeCodeOptionsCode updates create an asset attribute option for a given asset family

  This endpoint allows you to update a given option for a given attribute and a given asset family. Learn more about the <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given asset family, it creates it.
*/
func (a *Client) PatchAssetAttributesAttributeCodeOptionsCode(params *PatchAssetAttributesAttributeCodeOptionsCodeParams) (*PatchAssetAttributesAttributeCodeOptionsCodeCreated, *PatchAssetAttributesAttributeCodeOptionsCodeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAssetAttributesAttributeCodeOptionsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_asset_attributes__attribute_code__options__code_",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAssetAttributesAttributeCodeOptionsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PatchAssetAttributesAttributeCodeOptionsCodeCreated:
		return value, nil, nil
	case *PatchAssetAttributesAttributeCodeOptionsCodeNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for asset_attribute_option: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

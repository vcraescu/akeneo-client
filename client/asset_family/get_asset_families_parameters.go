// Code generated by go-swagger; DO NOT EDIT.

package asset_family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAssetFamiliesParams creates a new GetAssetFamiliesParams object
// with the default values initialized.
func NewGetAssetFamiliesParams() *GetAssetFamiliesParams {
	var (
		searchAfterDefault = string("cursor to the first page")
	)
	return &GetAssetFamiliesParams{
		SearchAfter: &searchAfterDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAssetFamiliesParamsWithTimeout creates a new GetAssetFamiliesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAssetFamiliesParamsWithTimeout(timeout time.Duration) *GetAssetFamiliesParams {
	var (
		searchAfterDefault = string("cursor to the first page")
	)
	return &GetAssetFamiliesParams{
		SearchAfter: &searchAfterDefault,

		timeout: timeout,
	}
}

// NewGetAssetFamiliesParamsWithContext creates a new GetAssetFamiliesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAssetFamiliesParamsWithContext(ctx context.Context) *GetAssetFamiliesParams {
	var (
		searchAfterDefault = string("cursor to the first page")
	)
	return &GetAssetFamiliesParams{
		SearchAfter: &searchAfterDefault,

		Context: ctx,
	}
}

// NewGetAssetFamiliesParamsWithHTTPClient creates a new GetAssetFamiliesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAssetFamiliesParamsWithHTTPClient(client *http.Client) *GetAssetFamiliesParams {
	var (
		searchAfterDefault = string("cursor to the first page")
	)
	return &GetAssetFamiliesParams{
		SearchAfter: &searchAfterDefault,
		HTTPClient:  client,
	}
}

/*GetAssetFamiliesParams contains all the parameters to send to the API endpoint
for the get asset families operation typically these are written to a http.Request
*/
type GetAssetFamiliesParams struct {

	/*SearchAfter
	  Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href="/documentation/pagination.html">Pagination</a> section

	*/
	SearchAfter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get asset families params
func (o *GetAssetFamiliesParams) WithTimeout(timeout time.Duration) *GetAssetFamiliesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get asset families params
func (o *GetAssetFamiliesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get asset families params
func (o *GetAssetFamiliesParams) WithContext(ctx context.Context) *GetAssetFamiliesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get asset families params
func (o *GetAssetFamiliesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get asset families params
func (o *GetAssetFamiliesParams) WithHTTPClient(client *http.Client) *GetAssetFamiliesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get asset families params
func (o *GetAssetFamiliesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSearchAfter adds the searchAfter to the get asset families params
func (o *GetAssetFamiliesParams) WithSearchAfter(searchAfter *string) *GetAssetFamiliesParams {
	o.SetSearchAfter(searchAfter)
	return o
}

// SetSearchAfter adds the searchAfter to the get asset families params
func (o *GetAssetFamiliesParams) SetSearchAfter(searchAfter *string) {
	o.SearchAfter = searchAfter
}

// WriteToRequest writes these params to a swagger request
func (o *GetAssetFamiliesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SearchAfter != nil {

		// query param search_after
		var qrSearchAfter string
		if o.SearchAfter != nil {
			qrSearchAfter = *o.SearchAfter
		}
		qSearchAfter := qrSearchAfter
		if qSearchAfter != "" {
			if err := r.SetQueryParam("search_after", qSearchAfter); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

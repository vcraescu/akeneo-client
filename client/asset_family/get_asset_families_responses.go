// Code generated by go-swagger; DO NOT EDIT.

package asset_family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAssetFamiliesReader is a Reader for the GetAssetFamilies structure.
type GetAssetFamiliesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssetFamiliesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssetFamiliesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAssetFamiliesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAssetFamiliesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAssetFamiliesOK creates a GetAssetFamiliesOK with default headers values
func NewGetAssetFamiliesOK() *GetAssetFamiliesOK {
	return &GetAssetFamiliesOK{}
}

/*GetAssetFamiliesOK handles this case with default header values.

Return asset families paginated
*/
type GetAssetFamiliesOK struct {
	Payload *GetAssetFamiliesOKBody
}

func (o *GetAssetFamiliesOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families][%d] getAssetFamiliesOK  %+v", 200, o.Payload)
}

func (o *GetAssetFamiliesOK) GetPayload() *GetAssetFamiliesOKBody {
	return o.Payload
}

func (o *GetAssetFamiliesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamiliesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetFamiliesUnauthorized creates a GetAssetFamiliesUnauthorized with default headers values
func NewGetAssetFamiliesUnauthorized() *GetAssetFamiliesUnauthorized {
	return &GetAssetFamiliesUnauthorized{}
}

/*GetAssetFamiliesUnauthorized handles this case with default header values.

Authentication required
*/
type GetAssetFamiliesUnauthorized struct {
	Payload *GetAssetFamiliesUnauthorizedBody
}

func (o *GetAssetFamiliesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families][%d] getAssetFamiliesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAssetFamiliesUnauthorized) GetPayload() *GetAssetFamiliesUnauthorizedBody {
	return o.Payload
}

func (o *GetAssetFamiliesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamiliesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetFamiliesNotAcceptable creates a GetAssetFamiliesNotAcceptable with default headers values
func NewGetAssetFamiliesNotAcceptable() *GetAssetFamiliesNotAcceptable {
	return &GetAssetFamiliesNotAcceptable{}
}

/*GetAssetFamiliesNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetAssetFamiliesNotAcceptable struct {
	Payload *GetAssetFamiliesNotAcceptableBody
}

func (o *GetAssetFamiliesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families][%d] getAssetFamiliesNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetAssetFamiliesNotAcceptable) GetPayload() *GetAssetFamiliesNotAcceptableBody {
	return o.Payload
}

func (o *GetAssetFamiliesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamiliesNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAssetFamiliesNotAcceptableBody get asset families not acceptable body
swagger:model GetAssetFamiliesNotAcceptableBody
*/
type GetAssetFamiliesNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get asset families not acceptable body
func (o *GetAssetFamiliesNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBody Asset families
swagger:model GetAssetFamiliesOKBody
*/
type GetAssetFamiliesOKBody struct {

	// links
	Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links `json:"_links,omitempty"`

	// embedded
	Embedded *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAssetFamiliesOKBody) UnmarshalJSON(raw []byte) error {
	// GetAssetFamiliesOKBodyAO0
	var dataGetAssetFamiliesOKBodyAO0 struct {
		Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAssetFamiliesOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetAssetFamiliesOKBodyAO0.Links

	// GetAssetFamiliesOKBodyAO1
	var dataGetAssetFamiliesOKBodyAO1 struct {
		Embedded *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAssetFamiliesOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataGetAssetFamiliesOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAssetFamiliesOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetAssetFamiliesOKBodyAO0 struct {
		Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links `json:"_links,omitempty"`
	}

	dataGetAssetFamiliesOKBodyAO0.Links = o.Links

	jsonDataGetAssetFamiliesOKBodyAO0, errGetAssetFamiliesOKBodyAO0 := swag.WriteJSON(dataGetAssetFamiliesOKBodyAO0)
	if errGetAssetFamiliesOKBodyAO0 != nil {
		return nil, errGetAssetFamiliesOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetAssetFamiliesOKBodyAO0)
	var dataGetAssetFamiliesOKBodyAO1 struct {
		Embedded *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataGetAssetFamiliesOKBodyAO1.Embedded = o.Embedded

	jsonDataGetAssetFamiliesOKBodyAO1, errGetAssetFamiliesOKBodyAO1 := swag.WriteJSON(dataGetAssetFamiliesOKBodyAO1)
	if errGetAssetFamiliesOKBodyAO1 != nil {
		return nil, errGetAssetFamiliesOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetAssetFamiliesOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get asset families o k body
func (o *GetAssetFamiliesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamiliesOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamiliesOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links get asset families o k body get asset families o k body a o0 links
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links struct {

	// first
	First *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext `json:"next,omitempty"`

	// self
	Self *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o0 links
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamiliesOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamiliesOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamiliesOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst get asset families o k body get asset families o k body a o0 links first
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o0 links first
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext get asset families o k body get asset families o k body a o0 links next
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o0 links next
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf get asset families o k body get asset families o k body a o0 links self
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o0 links self
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded get asset families o k body get asset families o k body a o1 embedded
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded struct {

	// items
	Items []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0 `json:"_items"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAssetFamiliesOK" + "." + "_embedded" + "." + "_items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0 get asset families o k body get asset families o k body a o1 embedded items items0
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// Attribute code that is used as the main media of the asset family.
	AttributeAsMainMedia *string `json:"attribute_as_main_media,omitempty"`

	// Asset family code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

	// naming convention
	NamingConvention *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention `json:"naming_convention,omitempty"`

	// The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.
	ProductLinkRules []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0 `json:"product_link_rules"`

	// The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.
	Transformations []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0 `json:"transformations"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		AttributeAsMainMedia *string `json:"attribute_as_main_media,omitempty"`

		Code *string `json:"code"`

		Labels *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		NamingConvention *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention `json:"naming_convention,omitempty"`

		ProductLinkRules []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0 `json:"product_link_rules"`

		Transformations []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0 `json:"transformations"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.AttributeAsMainMedia = dataAO1.AttributeAsMainMedia

	o.Code = dataAO1.Code

	o.Labels = dataAO1.Labels

	o.NamingConvention = dataAO1.NamingConvention

	o.ProductLinkRules = dataAO1.ProductLinkRules

	o.Transformations = dataAO1.Transformations

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		AttributeAsMainMedia *string `json:"attribute_as_main_media,omitempty"`

		Code *string `json:"code"`

		Labels *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		NamingConvention *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention `json:"naming_convention,omitempty"`

		ProductLinkRules []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0 `json:"product_link_rules"`

		Transformations []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0 `json:"transformations"`
	}

	dataAO1.AttributeAsMainMedia = o.AttributeAsMainMedia

	dataAO1.Code = o.Code

	dataAO1.Labels = o.Labels

	dataAO1.NamingConvention = o.NamingConvention

	dataAO1.ProductLinkRules = o.ProductLinkRules

	dataAO1.Transformations = o.Transformations

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNamingConvention(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductLinkRules(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTransformations(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateNamingConvention(formats strfmt.Registry) error {

	if swag.IsZero(o.NamingConvention) { // not required
		return nil
	}

	if o.NamingConvention != nil {
		if err := o.NamingConvention.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("naming_convention")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateProductLinkRules(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductLinkRules) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductLinkRules); i++ {
		if swag.IsZero(o.ProductLinkRules[i]) { // not required
			continue
		}

		if o.ProductLinkRules[i] != nil {
			if err := o.ProductLinkRules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("product_link_rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) validateTransformations(formats strfmt.Registry) error {

	if swag.IsZero(o.Transformations) { // not required
		return nil
	}

	for i := 0; i < len(o.Transformations); i++ {
		if swag.IsZero(o.Transformations[i]) { // not required
			continue
		}

		if o.Transformations[i] != nil {
			if err := o.Transformations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("transformations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links get asset families o k body get asset families o k body a o1 embedded items items0 a o0 links
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 a o0 links
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf get asset families o k body get asset families o k body a o1 embedded items items0 a o0 links self
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 a o0 links self
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels Asset family labels for each locale
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels struct {

	// Asset family label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 a o1 labels
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention struct {

	// Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.
	AbortAssetCreationOnError bool `json:"abort_asset_creation_on_error,omitempty"`

	// The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>.
	Pattern string `json:"pattern,omitempty"`

	// The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>.
	Source interface{} `json:"source,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 a o1 naming convention
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0AO1NamingConvention
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0 get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0 struct {

	// The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.
	AssignAssetsTo []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0 `json:"assign_assets_to"`

	// The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.
	ProductSelections []*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0 `json:"product_selections"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssignAssetsTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductSelections(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0) validateAssignAssetsTo(formats strfmt.Registry) error {

	if swag.IsZero(o.AssignAssetsTo) { // not required
		return nil
	}

	for i := 0; i < len(o.AssignAssetsTo); i++ {
		if swag.IsZero(o.AssignAssetsTo[i]) { // not required
			continue
		}

		if o.AssignAssetsTo[i] != nil {
			if err := o.AssignAssetsTo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("assign_assets_to" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0) validateProductSelections(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductSelections) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductSelections); i++ {
		if swag.IsZero(o.ProductSelections[i]) { // not required
			continue
		}

		if o.ProductSelections[i] != nil {
			if err := o.ProductSelections[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("product_selections" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0 get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0 assign assets to items0
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0 struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	Channel string `json:"channel,omitempty"`

	// locale
	Locale string `json:"locale,omitempty"`

	// mode
	// Required: true
	Mode *string `json:"mode"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0 assign assets to items0
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0) validateMode(formats strfmt.Registry) error {

	if err := validate.Required("mode", "body", o.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0AssignAssetsToItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0 get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0 product selections items0
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0 struct {

	// channel
	Channel string `json:"channel,omitempty"`

	// field
	// Required: true
	Field *string `json:"field"`

	// locale
	Locale string `json:"locale,omitempty"`

	// operator
	// Required: true
	Operator *string `json:"operator"`

	// value
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 product link rules items0 product selections items0
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateField(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) validateField(formats strfmt.Registry) error {

	if err := validate.Required("field", "body", o.Field); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) validateOperator(formats strfmt.Registry) error {

	if err := validate.Required("operator", "body", o.Operator); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0ProductLinkRulesItems0ProductSelectionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0 get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0 struct {

	// The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
	FilenamePrefix string `json:"filename_prefix,omitempty"`

	// The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
	FilenameSuffix string `json:"filename_suffix,omitempty"`

	// The name of the transformation
	// Required: true
	Label *string `json:"label"`

	// operations
	// Required: true
	Operations *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations `json:"operations"`

	// source
	// Required: true
	Source *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source `json:"source"`

	// target
	// Required: true
	Target *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target `json:"target"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) validateLabel(formats strfmt.Registry) error {

	if err := validate.Required("label", "body", o.Label); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) validateOperations(formats strfmt.Registry) error {

	if err := validate.Required("operations", "body", o.Operations); err != nil {
		return err
	}

	if o.Operations != nil {
		if err := o.Operations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("operations")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("source", "body", o.Source); err != nil {
		return err
	}

	if o.Source != nil {
		if err := o.Source.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("source")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", o.Target); err != nil {
		return err
	}

	if o.Target != nil {
		if err := o.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations struct {

	// parameters
	Parameters *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters `json:"parameters,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0 operations
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations) validateParameters(formats strfmt.Registry) error {

	if swag.IsZero(o.Parameters) { // not required
		return nil
	}

	if o.Parameters != nil {
		if err := o.Parameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("operations" + "." + "parameters")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Operations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0 operations parameters
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters struct {

	// colorspace
	Colorspace string `json:"colorspace,omitempty"`

	// height
	Height int64 `json:"height,omitempty"`

	// quality
	Quality int64 `json:"quality,omitempty"`

	// ratio
	Ratio int64 `json:"ratio,omitempty"`

	// resolution unit
	ResolutionUnit string `json:"resolution-unit,omitempty"`

	// resolution x
	Resolutionx int64 `json:"resolution-x,omitempty"`

	// resolution y
	Resolutiony int64 `json:"resolution-y,omitempty"`

	// width
	Width int64 `json:"width,omitempty"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0 operations parameters
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0OperationsParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>.
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	// Required: true
	Channel *string `json:"channel"`

	// locale
	// Required: true
	Locale *string `json:"locale"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0 source
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) validateChannel(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"channel", "body", o.Channel); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) validateLocale(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"locale", "body", o.Locale); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Source
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>.
swagger:model GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target
*/
type GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	// Required: true
	Channel *string `json:"channel"`

	// locale
	// Required: true
	Locale *string `json:"locale"`
}

// Validate validates this get asset families o k body get asset families o k body a o1 embedded items items0 transformations items0 target
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) validateChannel(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"channel", "body", o.Channel); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) validateLocale(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"locale", "body", o.Locale); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesOKBodyGetAssetFamiliesOKBodyAO1EmbeddedItemsItems0TransformationsItems0Target
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamiliesUnauthorizedBody get asset families unauthorized body
swagger:model GetAssetFamiliesUnauthorizedBody
*/
type GetAssetFamiliesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get asset families unauthorized body
func (o *GetAssetFamiliesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamiliesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamiliesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamiliesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

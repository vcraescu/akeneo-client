// Code generated by go-swagger; DO NOT EDIT.

package asset_family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAssetFamilyCodeReader is a Reader for the GetAssetFamilyCode structure.
type GetAssetFamilyCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssetFamilyCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssetFamilyCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAssetFamilyCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAssetFamilyCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAssetFamilyCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAssetFamilyCodeOK creates a GetAssetFamilyCodeOK with default headers values
func NewGetAssetFamilyCodeOK() *GetAssetFamilyCodeOK {
	return &GetAssetFamilyCodeOK{}
}

/*GetAssetFamilyCodeOK handles this case with default header values.

OK
*/
type GetAssetFamilyCodeOK struct {
	Payload *GetAssetFamilyCodeOKBody
}

func (o *GetAssetFamilyCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{code}][%d] getAssetFamilyCodeOK  %+v", 200, o.Payload)
}

func (o *GetAssetFamilyCodeOK) GetPayload() *GetAssetFamilyCodeOKBody {
	return o.Payload
}

func (o *GetAssetFamilyCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamilyCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetFamilyCodeUnauthorized creates a GetAssetFamilyCodeUnauthorized with default headers values
func NewGetAssetFamilyCodeUnauthorized() *GetAssetFamilyCodeUnauthorized {
	return &GetAssetFamilyCodeUnauthorized{}
}

/*GetAssetFamilyCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetAssetFamilyCodeUnauthorized struct {
	Payload *GetAssetFamilyCodeUnauthorizedBody
}

func (o *GetAssetFamilyCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{code}][%d] getAssetFamilyCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAssetFamilyCodeUnauthorized) GetPayload() *GetAssetFamilyCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetAssetFamilyCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamilyCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetFamilyCodeNotFound creates a GetAssetFamilyCodeNotFound with default headers values
func NewGetAssetFamilyCodeNotFound() *GetAssetFamilyCodeNotFound {
	return &GetAssetFamilyCodeNotFound{}
}

/*GetAssetFamilyCodeNotFound handles this case with default header values.

Resource not found
*/
type GetAssetFamilyCodeNotFound struct {
	Payload *GetAssetFamilyCodeNotFoundBody
}

func (o *GetAssetFamilyCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{code}][%d] getAssetFamilyCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetAssetFamilyCodeNotFound) GetPayload() *GetAssetFamilyCodeNotFoundBody {
	return o.Payload
}

func (o *GetAssetFamilyCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamilyCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssetFamilyCodeNotAcceptable creates a GetAssetFamilyCodeNotAcceptable with default headers values
func NewGetAssetFamilyCodeNotAcceptable() *GetAssetFamilyCodeNotAcceptable {
	return &GetAssetFamilyCodeNotAcceptable{}
}

/*GetAssetFamilyCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetAssetFamilyCodeNotAcceptable struct {
	Payload *GetAssetFamilyCodeNotAcceptableBody
}

func (o *GetAssetFamilyCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/asset-families/{code}][%d] getAssetFamilyCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetAssetFamilyCodeNotAcceptable) GetPayload() *GetAssetFamilyCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetAssetFamilyCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAssetFamilyCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAssetFamilyCodeNotAcceptableBody get asset family code not acceptable body
swagger:model GetAssetFamilyCodeNotAcceptableBody
*/
type GetAssetFamilyCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get asset family code not acceptable body
func (o *GetAssetFamilyCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeNotFoundBody get asset family code not found body
swagger:model GetAssetFamilyCodeNotFoundBody
*/
type GetAssetFamilyCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get asset family code not found body
func (o *GetAssetFamilyCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBody get asset family code o k body
swagger:model GetAssetFamilyCodeOKBody
*/
type GetAssetFamilyCodeOKBody struct {

	// Attribute code that is used as the main media of the asset family.
	AttributeAsMainMedia *string `json:"attribute_as_main_media,omitempty"`

	// Asset family code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *GetAssetFamilyCodeOKBodyLabels `json:"labels,omitempty"`

	// naming convention
	NamingConvention *GetAssetFamilyCodeOKBodyNamingConvention `json:"naming_convention,omitempty"`

	// The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.
	ProductLinkRules []*GetAssetFamilyCodeOKBodyProductLinkRulesItems0 `json:"product_link_rules"`

	// The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.
	Transformations []*GetAssetFamilyCodeOKBodyTransformationsItems0 `json:"transformations"`
}

// Validate validates this get asset family code o k body
func (o *GetAssetFamilyCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNamingConvention(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductLinkRules(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTransformations(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getAssetFamilyCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamilyCodeOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBody) validateNamingConvention(formats strfmt.Registry) error {

	if swag.IsZero(o.NamingConvention) { // not required
		return nil
	}

	if o.NamingConvention != nil {
		if err := o.NamingConvention.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAssetFamilyCodeOK" + "." + "naming_convention")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBody) validateProductLinkRules(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductLinkRules) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductLinkRules); i++ {
		if swag.IsZero(o.ProductLinkRules[i]) { // not required
			continue
		}

		if o.ProductLinkRules[i] != nil {
			if err := o.ProductLinkRules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAssetFamilyCodeOK" + "." + "product_link_rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAssetFamilyCodeOKBody) validateTransformations(formats strfmt.Registry) error {

	if swag.IsZero(o.Transformations) { // not required
		return nil
	}

	for i := 0; i < len(o.Transformations); i++ {
		if swag.IsZero(o.Transformations[i]) { // not required
			continue
		}

		if o.Transformations[i] != nil {
			if err := o.Transformations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAssetFamilyCodeOK" + "." + "transformations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyLabels Asset family labels for each locale
swagger:model GetAssetFamilyCodeOKBodyLabels
*/
type GetAssetFamilyCodeOKBodyLabels struct {

	// Asset family label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get asset family code o k body labels
func (o *GetAssetFamilyCodeOKBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyLabels) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyNamingConvention The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.
swagger:model GetAssetFamilyCodeOKBodyNamingConvention
*/
type GetAssetFamilyCodeOKBodyNamingConvention struct {

	// Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.
	AbortAssetCreationOnError bool `json:"abort_asset_creation_on_error,omitempty"`

	// The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>.
	Pattern string `json:"pattern,omitempty"`

	// The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>.
	Source interface{} `json:"source,omitempty"`
}

// Validate validates this get asset family code o k body naming convention
func (o *GetAssetFamilyCodeOKBodyNamingConvention) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyNamingConvention) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyNamingConvention) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyNamingConvention
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyProductLinkRulesItems0 get asset family code o k body product link rules items0
swagger:model GetAssetFamilyCodeOKBodyProductLinkRulesItems0
*/
type GetAssetFamilyCodeOKBodyProductLinkRulesItems0 struct {

	// The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.
	AssignAssetsTo []*GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0 `json:"assign_assets_to"`

	// The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.
	ProductSelections []*GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0 `json:"product_selections"`
}

// Validate validates this get asset family code o k body product link rules items0
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssignAssetsTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProductSelections(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0) validateAssignAssetsTo(formats strfmt.Registry) error {

	if swag.IsZero(o.AssignAssetsTo) { // not required
		return nil
	}

	for i := 0; i < len(o.AssignAssetsTo); i++ {
		if swag.IsZero(o.AssignAssetsTo[i]) { // not required
			continue
		}

		if o.AssignAssetsTo[i] != nil {
			if err := o.AssignAssetsTo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("assign_assets_to" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0) validateProductSelections(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductSelections) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductSelections); i++ {
		if swag.IsZero(o.ProductSelections[i]) { // not required
			continue
		}

		if o.ProductSelections[i] != nil {
			if err := o.ProductSelections[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("product_selections" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyProductLinkRulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0 get asset family code o k body product link rules items0 assign assets to items0
swagger:model GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0
*/
type GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0 struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	Channel string `json:"channel,omitempty"`

	// locale
	Locale string `json:"locale,omitempty"`

	// mode
	// Required: true
	Mode *string `json:"mode"`
}

// Validate validates this get asset family code o k body product link rules items0 assign assets to items0
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0) validateMode(formats strfmt.Registry) error {

	if err := validate.Required("mode", "body", o.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyProductLinkRulesItems0AssignAssetsToItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0 get asset family code o k body product link rules items0 product selections items0
swagger:model GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0
*/
type GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0 struct {

	// channel
	Channel string `json:"channel,omitempty"`

	// field
	// Required: true
	Field *string `json:"field"`

	// locale
	Locale string `json:"locale,omitempty"`

	// operator
	// Required: true
	Operator *string `json:"operator"`

	// value
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get asset family code o k body product link rules items0 product selections items0
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateField(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) validateField(formats strfmt.Registry) error {

	if err := validate.Required("field", "body", o.Field); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) validateOperator(formats strfmt.Registry) error {

	if err := validate.Required("operator", "body", o.Operator); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyProductLinkRulesItems0ProductSelectionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyTransformationsItems0 get asset family code o k body transformations items0
swagger:model GetAssetFamilyCodeOKBodyTransformationsItems0
*/
type GetAssetFamilyCodeOKBodyTransformationsItems0 struct {

	// The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
	FilenamePrefix string `json:"filename_prefix,omitempty"`

	// The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>.
	FilenameSuffix string `json:"filename_suffix,omitempty"`

	// The name of the transformation
	// Required: true
	Label *string `json:"label"`

	// operations
	// Required: true
	Operations *GetAssetFamilyCodeOKBodyTransformationsItems0Operations `json:"operations"`

	// source
	// Required: true
	Source *GetAssetFamilyCodeOKBodyTransformationsItems0Source `json:"source"`

	// target
	// Required: true
	Target *GetAssetFamilyCodeOKBodyTransformationsItems0Target `json:"target"`
}

// Validate validates this get asset family code o k body transformations items0
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) validateLabel(formats strfmt.Registry) error {

	if err := validate.Required("label", "body", o.Label); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) validateOperations(formats strfmt.Registry) error {

	if err := validate.Required("operations", "body", o.Operations); err != nil {
		return err
	}

	if o.Operations != nil {
		if err := o.Operations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("operations")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("source", "body", o.Source); err != nil {
		return err
	}

	if o.Source != nil {
		if err := o.Source.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("source")
			}
			return err
		}
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", o.Target); err != nil {
		return err
	}

	if o.Target != nil {
		if err := o.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyTransformationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyTransformationsItems0Operations The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.
swagger:model GetAssetFamilyCodeOKBodyTransformationsItems0Operations
*/
type GetAssetFamilyCodeOKBodyTransformationsItems0Operations struct {

	// parameters
	Parameters *GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters `json:"parameters,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this get asset family code o k body transformations items0 operations
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Operations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Operations) validateParameters(formats strfmt.Registry) error {

	if swag.IsZero(o.Parameters) { // not required
		return nil
	}

	if o.Parameters != nil {
		if err := o.Parameters.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("operations" + "." + "parameters")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Operations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Operations) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyTransformationsItems0Operations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters get asset family code o k body transformations items0 operations parameters
swagger:model GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters
*/
type GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters struct {

	// colorspace
	Colorspace string `json:"colorspace,omitempty"`

	// height
	Height int64 `json:"height,omitempty"`

	// quality
	Quality int64 `json:"quality,omitempty"`

	// ratio
	Ratio int64 `json:"ratio,omitempty"`

	// resolution unit
	ResolutionUnit string `json:"resolution-unit,omitempty"`

	// resolution x
	Resolutionx int64 `json:"resolution-x,omitempty"`

	// resolution y
	Resolutiony int64 `json:"resolution-y,omitempty"`

	// width
	Width int64 `json:"width,omitempty"`
}

// Validate validates this get asset family code o k body transformations items0 operations parameters
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyTransformationsItems0OperationsParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyTransformationsItems0Source The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>.
swagger:model GetAssetFamilyCodeOKBodyTransformationsItems0Source
*/
type GetAssetFamilyCodeOKBodyTransformationsItems0Source struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	// Required: true
	Channel *string `json:"channel"`

	// locale
	// Required: true
	Locale *string `json:"locale"`
}

// Validate validates this get asset family code o k body transformations items0 source
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) validateChannel(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"channel", "body", o.Channel); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) validateLocale(formats strfmt.Registry) error {

	if err := validate.Required("source"+"."+"locale", "body", o.Locale); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Source) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyTransformationsItems0Source
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeOKBodyTransformationsItems0Target The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>.
swagger:model GetAssetFamilyCodeOKBodyTransformationsItems0Target
*/
type GetAssetFamilyCodeOKBodyTransformationsItems0Target struct {

	// attribute
	// Required: true
	Attribute *string `json:"attribute"`

	// channel
	// Required: true
	Channel *string `json:"channel"`

	// locale
	// Required: true
	Locale *string `json:"locale"`
}

// Validate validates this get asset family code o k body transformations items0 target
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"attribute", "body", o.Attribute); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) validateChannel(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"channel", "body", o.Channel); err != nil {
		return err
	}

	return nil
}

func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) validateLocale(formats strfmt.Registry) error {

	if err := validate.Required("target"+"."+"locale", "body", o.Locale); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeOKBodyTransformationsItems0Target) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeOKBodyTransformationsItems0Target
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAssetFamilyCodeUnauthorizedBody get asset family code unauthorized body
swagger:model GetAssetFamilyCodeUnauthorizedBody
*/
type GetAssetFamilyCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get asset family code unauthorized body
func (o *GetAssetFamilyCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAssetFamilyCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAssetFamilyCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAssetFamilyCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

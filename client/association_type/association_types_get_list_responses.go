// Code generated by go-swagger; DO NOT EDIT.

package association_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AssociationTypesGetListReader is a Reader for the AssociationTypesGetList structure.
type AssociationTypesGetListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssociationTypesGetListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssociationTypesGetListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAssociationTypesGetListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAssociationTypesGetListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAssociationTypesGetListNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAssociationTypesGetListOK creates a AssociationTypesGetListOK with default headers values
func NewAssociationTypesGetListOK() *AssociationTypesGetListOK {
	return &AssociationTypesGetListOK{}
}

/*AssociationTypesGetListOK handles this case with default header values.

Return association types paginated
*/
type AssociationTypesGetListOK struct {
	Payload *AssociationTypesGetListOKBody
}

func (o *AssociationTypesGetListOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/association-types][%d] associationTypesGetListOK  %+v", 200, o.Payload)
}

func (o *AssociationTypesGetListOK) GetPayload() *AssociationTypesGetListOKBody {
	return o.Payload
}

func (o *AssociationTypesGetListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AssociationTypesGetListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociationTypesGetListUnauthorized creates a AssociationTypesGetListUnauthorized with default headers values
func NewAssociationTypesGetListUnauthorized() *AssociationTypesGetListUnauthorized {
	return &AssociationTypesGetListUnauthorized{}
}

/*AssociationTypesGetListUnauthorized handles this case with default header values.

Authentication required
*/
type AssociationTypesGetListUnauthorized struct {
	Payload *AssociationTypesGetListUnauthorizedBody
}

func (o *AssociationTypesGetListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/association-types][%d] associationTypesGetListUnauthorized  %+v", 401, o.Payload)
}

func (o *AssociationTypesGetListUnauthorized) GetPayload() *AssociationTypesGetListUnauthorizedBody {
	return o.Payload
}

func (o *AssociationTypesGetListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AssociationTypesGetListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociationTypesGetListForbidden creates a AssociationTypesGetListForbidden with default headers values
func NewAssociationTypesGetListForbidden() *AssociationTypesGetListForbidden {
	return &AssociationTypesGetListForbidden{}
}

/*AssociationTypesGetListForbidden handles this case with default header values.

Access forbidden
*/
type AssociationTypesGetListForbidden struct {
	Payload *AssociationTypesGetListForbiddenBody
}

func (o *AssociationTypesGetListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/association-types][%d] associationTypesGetListForbidden  %+v", 403, o.Payload)
}

func (o *AssociationTypesGetListForbidden) GetPayload() *AssociationTypesGetListForbiddenBody {
	return o.Payload
}

func (o *AssociationTypesGetListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AssociationTypesGetListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociationTypesGetListNotAcceptable creates a AssociationTypesGetListNotAcceptable with default headers values
func NewAssociationTypesGetListNotAcceptable() *AssociationTypesGetListNotAcceptable {
	return &AssociationTypesGetListNotAcceptable{}
}

/*AssociationTypesGetListNotAcceptable handles this case with default header values.

Not Acceptable
*/
type AssociationTypesGetListNotAcceptable struct {
	Payload *AssociationTypesGetListNotAcceptableBody
}

func (o *AssociationTypesGetListNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/association-types][%d] associationTypesGetListNotAcceptable  %+v", 406, o.Payload)
}

func (o *AssociationTypesGetListNotAcceptable) GetPayload() *AssociationTypesGetListNotAcceptableBody {
	return o.Payload
}

func (o *AssociationTypesGetListNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AssociationTypesGetListNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AssociationTypesGetListForbiddenBody association types get list forbidden body
swagger:model AssociationTypesGetListForbiddenBody
*/
type AssociationTypesGetListForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this association types get list forbidden body
func (o *AssociationTypesGetListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListNotAcceptableBody association types get list not acceptable body
swagger:model AssociationTypesGetListNotAcceptableBody
*/
type AssociationTypesGetListNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this association types get list not acceptable body
func (o *AssociationTypesGetListNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBody Association types
swagger:model AssociationTypesGetListOKBody
*/
type AssociationTypesGetListOKBody struct {

	// links
	Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links `json:"_links,omitempty"`

	// Current page number
	CurrentPage int64 `json:"current_page,omitempty"`

	// embedded
	Embedded *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *AssociationTypesGetListOKBody) UnmarshalJSON(raw []byte) error {
	// AssociationTypesGetListOKBodyAO0
	var dataAssociationTypesGetListOKBodyAO0 struct {
		Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAssociationTypesGetListOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataAssociationTypesGetListOKBodyAO0.Links

	o.CurrentPage = dataAssociationTypesGetListOKBodyAO0.CurrentPage

	// AssociationTypesGetListOKBodyAO1
	var dataAssociationTypesGetListOKBodyAO1 struct {
		Embedded *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAssociationTypesGetListOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataAssociationTypesGetListOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o AssociationTypesGetListOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAssociationTypesGetListOKBodyAO0 struct {
		Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}

	dataAssociationTypesGetListOKBodyAO0.Links = o.Links

	dataAssociationTypesGetListOKBodyAO0.CurrentPage = o.CurrentPage

	jsonDataAssociationTypesGetListOKBodyAO0, errAssociationTypesGetListOKBodyAO0 := swag.WriteJSON(dataAssociationTypesGetListOKBodyAO0)
	if errAssociationTypesGetListOKBodyAO0 != nil {
		return nil, errAssociationTypesGetListOKBodyAO0
	}
	_parts = append(_parts, jsonDataAssociationTypesGetListOKBodyAO0)
	var dataAssociationTypesGetListOKBodyAO1 struct {
		Embedded *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataAssociationTypesGetListOKBodyAO1.Embedded = o.Embedded

	jsonDataAssociationTypesGetListOKBodyAO1, errAssociationTypesGetListOKBodyAO1 := swag.WriteJSON(dataAssociationTypesGetListOKBodyAO1)
	if errAssociationTypesGetListOKBodyAO1 != nil {
		return nil, errAssociationTypesGetListOKBodyAO1
	}
	_parts = append(_parts, jsonDataAssociationTypesGetListOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this association types get list o k body
func (o *AssociationTypesGetListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AssociationTypesGetListOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *AssociationTypesGetListOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBody) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links association types get list o k body association types get list o k body a o0 links
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links struct {

	// first
	First *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext `json:"next,omitempty"`

	// previous
	Previous *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious `json:"previous,omitempty"`

	// self
	Self *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o0 links
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrevious(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) validatePrevious(formats strfmt.Registry) error {

	if swag.IsZero(o.Previous) { // not required
		return nil
	}

	if o.Previous != nil {
		if err := o.Previous.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_links" + "." + "previous")
			}
			return err
		}
	}

	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associationTypesGetListOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst association types get list o k body association types get list o k body a o0 links first
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o0 links first
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext association types get list o k body association types get list o k body a o0 links next
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o0 links next
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious association types get list o k body association types get list o k body a o0 links previous
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious struct {

	// URI of the previous page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o0 links previous
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksPrevious
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf association types get list o k body association types get list o k body a o0 links self
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o0 links self
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded association types get list o k body association types get list o k body a o1 embedded
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded struct {

	// items
	Items []*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0 `json:"items"`
}

// Validate validates this association types get list o k body association types get list o k body a o1 embedded
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("associationTypesGetListOK" + "." + "_embedded" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0 association types get list o k body association types get list o k body a o1 embedded items items0
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// Association type code
	// Required: true
	Code *string `json:"code"`

	// When true, the association is a quantified association
	IsQuantified *bool `json:"is_quantified,omitempty"`

	// When true, the association is a two-way association
	IsTwoWay *bool `json:"is_two_way,omitempty"`

	// labels
	Labels *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		Code *string `json:"code"`

		IsQuantified *bool `json:"is_quantified,omitempty"`

		IsTwoWay *bool `json:"is_two_way,omitempty"`

		Labels *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.Code = dataAO1.Code

	o.IsQuantified = dataAO1.IsQuantified

	o.IsTwoWay = dataAO1.IsTwoWay

	o.Labels = dataAO1.Labels

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		Code *string `json:"code"`

		IsQuantified *bool `json:"is_quantified,omitempty"`

		IsTwoWay *bool `json:"is_two_way,omitempty"`

		Labels *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`
	}

	dataAO1.Code = o.Code

	dataAO1.IsQuantified = o.IsQuantified

	dataAO1.IsTwoWay = o.IsTwoWay

	dataAO1.Labels = o.Labels

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this association types get list o k body association types get list o k body a o1 embedded items items0
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links association types get list o k body association types get list o k body a o1 embedded items items0 a o0 links
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o1 embedded items items0 a o0 links
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf association types get list o k body association types get list o k body a o1 embedded items items0 a o0 links self
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o1 embedded items items0 a o0 links self
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels Association type labels for each locale
swagger:model AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels
*/
type AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels struct {

	// Association type label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this association types get list o k body association types get list o k body a o1 embedded items items0 a o1 labels
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListOKBodyAssociationTypesGetListOKBodyAO1EmbeddedItemsItems0AO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AssociationTypesGetListUnauthorizedBody association types get list unauthorized body
swagger:model AssociationTypesGetListUnauthorizedBody
*/
type AssociationTypesGetListUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this association types get list unauthorized body
func (o *AssociationTypesGetListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssociationTypesGetListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssociationTypesGetListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AssociationTypesGetListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

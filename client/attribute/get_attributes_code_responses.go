// Code generated by go-swagger; DO NOT EDIT.

package attribute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAttributesCodeReader is a Reader for the GetAttributesCode structure.
type GetAttributesCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAttributesCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAttributesCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAttributesCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAttributesCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAttributesCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAttributesCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAttributesCodeOK creates a GetAttributesCodeOK with default headers values
func NewGetAttributesCodeOK() *GetAttributesCodeOK {
	return &GetAttributesCodeOK{}
}

/*GetAttributesCodeOK handles this case with default header values.

OK
*/
type GetAttributesCodeOK struct {
	Payload *GetAttributesCodeOKBody
}

func (o *GetAttributesCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes/{code}][%d] getAttributesCodeOK  %+v", 200, o.Payload)
}

func (o *GetAttributesCodeOK) GetPayload() *GetAttributesCodeOKBody {
	return o.Payload
}

func (o *GetAttributesCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesCodeUnauthorized creates a GetAttributesCodeUnauthorized with default headers values
func NewGetAttributesCodeUnauthorized() *GetAttributesCodeUnauthorized {
	return &GetAttributesCodeUnauthorized{}
}

/*GetAttributesCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetAttributesCodeUnauthorized struct {
	Payload *GetAttributesCodeUnauthorizedBody
}

func (o *GetAttributesCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes/{code}][%d] getAttributesCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAttributesCodeUnauthorized) GetPayload() *GetAttributesCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetAttributesCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesCodeForbidden creates a GetAttributesCodeForbidden with default headers values
func NewGetAttributesCodeForbidden() *GetAttributesCodeForbidden {
	return &GetAttributesCodeForbidden{}
}

/*GetAttributesCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetAttributesCodeForbidden struct {
	Payload *GetAttributesCodeForbiddenBody
}

func (o *GetAttributesCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes/{code}][%d] getAttributesCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetAttributesCodeForbidden) GetPayload() *GetAttributesCodeForbiddenBody {
	return o.Payload
}

func (o *GetAttributesCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesCodeNotFound creates a GetAttributesCodeNotFound with default headers values
func NewGetAttributesCodeNotFound() *GetAttributesCodeNotFound {
	return &GetAttributesCodeNotFound{}
}

/*GetAttributesCodeNotFound handles this case with default header values.

Resource not found
*/
type GetAttributesCodeNotFound struct {
	Payload *GetAttributesCodeNotFoundBody
}

func (o *GetAttributesCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes/{code}][%d] getAttributesCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetAttributesCodeNotFound) GetPayload() *GetAttributesCodeNotFoundBody {
	return o.Payload
}

func (o *GetAttributesCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesCodeNotAcceptable creates a GetAttributesCodeNotAcceptable with default headers values
func NewGetAttributesCodeNotAcceptable() *GetAttributesCodeNotAcceptable {
	return &GetAttributesCodeNotAcceptable{}
}

/*GetAttributesCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetAttributesCodeNotAcceptable struct {
	Payload *GetAttributesCodeNotAcceptableBody
}

func (o *GetAttributesCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes/{code}][%d] getAttributesCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetAttributesCodeNotAcceptable) GetPayload() *GetAttributesCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetAttributesCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAttributesCodeForbiddenBody get attributes code forbidden body
swagger:model GetAttributesCodeForbiddenBody
*/
type GetAttributesCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes code forbidden body
func (o *GetAttributesCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeNotAcceptableBody get attributes code not acceptable body
swagger:model GetAttributesCodeNotAcceptableBody
*/
type GetAttributesCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes code not acceptable body
func (o *GetAttributesCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeNotFoundBody get attributes code not found body
swagger:model GetAttributesCodeNotFoundBody
*/
type GetAttributesCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes code not found body
func (o *GetAttributesCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeOKBody get attributes code o k body
swagger:model GetAttributesCodeOKBody
*/
type GetAttributesCodeOKBody struct {

	// Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`
	AllowedExtensions []string `json:"allowed_extensions"`

	// To make the attribute locale specfic, specify here for which locales it is specific
	AvailableLocales []string `json:"available_locales"`

	// Attribute code
	// Required: true
	Code *string `json:"code"`

	// Maximum date allowed when the attribute type is `pim_catalog_date`
	// Format: date-time
	DateMax strfmt.DateTime `json:"date_max,omitempty"`

	// Minimum date allowed when the attribute type is `pim_catalog_date`
	// Format: date-time
	DateMin strfmt.DateTime `json:"date_min,omitempty"`

	// Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	DecimalsAllowed bool `json:"decimals_allowed,omitempty"`

	// Default metric unit when the attribute type is `pim_catalog_metric`
	DefaultMetricUnit string `json:"default_metric_unit,omitempty"`

	// Attribute group
	// Required: true
	Group *string `json:"group"`

	// group labels
	GroupLabels *GetAttributesCodeOKBodyGroupLabels `json:"group_labels,omitempty"`

	// labels
	Labels *GetAttributesCodeOKBodyLabels `json:"labels,omitempty"`

	// Whether the attribute is localizable, i.e. can have one value by locale
	Localizable *bool `json:"localizable,omitempty"`

	// Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`
	MaxCharacters int64 `json:"max_characters,omitempty"`

	// Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`
	MaxFileSize string `json:"max_file_size,omitempty"`

	// Metric family when the attribute type is `pim_catalog_metric`
	MetricFamily string `json:"metric_family,omitempty"`

	// Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`
	NegativeAllowed bool `json:"negative_allowed,omitempty"`

	// Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	NumberMax string `json:"number_max,omitempty"`

	// Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	NumberMin string `json:"number_min,omitempty"`

	// Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`
	ReferenceDataName string `json:"reference_data_name,omitempty"`

	// Whether the attribute is scopable, i.e. can have one value by channel
	Scopable *bool `json:"scopable,omitempty"`

	// Order of the attribute in its group
	SortOrder int64 `json:"sort_order,omitempty"`

	// Attribute type
	// Required: true
	// Enum: [pim_catalog_identifier pim_catalog_metric pim_catalog_number pim_catalog_reference_data_multi_select pim_catalog_reference_data_simple_select pim_catalog_simpleselect pim_catalog_multiselect pim_catalog_date pim_catalog_textarea pim_catalog_text pim_catalog_file pim_catalog_image pim_catalog_price_collection pim_catalog_boolean akeneo_reference_entity akeneo_reference_entity_collection pim_catalog_asset_collection]
	Type *string `json:"type"`

	// Whether two values for the attribute cannot be the same
	Unique bool `json:"unique,omitempty"`

	// Whether the attribute can be used as a filter for the product grid in the PIM user interface
	UseableAsGridFilter bool `json:"useable_as_grid_filter,omitempty"`

	// Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
	ValidationRegexp string `json:"validation_regexp,omitempty"`

	// Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
	ValidationRule string `json:"validation_rule,omitempty"`

	// Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`
	WysiwygEnabled bool `json:"wysiwyg_enabled,omitempty"`
}

// Validate validates this get attributes code o k body
func (o *GetAttributesCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateMax(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateMin(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroupLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getAttributesCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesCodeOKBody) validateDateMax(formats strfmt.Registry) error {

	if swag.IsZero(o.DateMax) { // not required
		return nil
	}

	if err := validate.FormatOf("getAttributesCodeOK"+"."+"date_max", "body", "date-time", o.DateMax.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesCodeOKBody) validateDateMin(formats strfmt.Registry) error {

	if swag.IsZero(o.DateMin) { // not required
		return nil
	}

	if err := validate.FormatOf("getAttributesCodeOK"+"."+"date_min", "body", "date-time", o.DateMin.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesCodeOKBody) validateGroup(formats strfmt.Registry) error {

	if err := validate.Required("getAttributesCodeOK"+"."+"group", "body", o.Group); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesCodeOKBody) validateGroupLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.GroupLabels) { // not required
		return nil
	}

	if o.GroupLabels != nil {
		if err := o.GroupLabels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesCodeOK" + "." + "group_labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesCodeOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesCodeOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

var getAttributesCodeOKBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pim_catalog_identifier","pim_catalog_metric","pim_catalog_number","pim_catalog_reference_data_multi_select","pim_catalog_reference_data_simple_select","pim_catalog_simpleselect","pim_catalog_multiselect","pim_catalog_date","pim_catalog_textarea","pim_catalog_text","pim_catalog_file","pim_catalog_image","pim_catalog_price_collection","pim_catalog_boolean","akeneo_reference_entity","akeneo_reference_entity_collection","pim_catalog_asset_collection"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getAttributesCodeOKBodyTypeTypePropEnum = append(getAttributesCodeOKBodyTypeTypePropEnum, v)
	}
}

const (

	// GetAttributesCodeOKBodyTypePimCatalogIdentifier captures enum value "pim_catalog_identifier"
	GetAttributesCodeOKBodyTypePimCatalogIdentifier string = "pim_catalog_identifier"

	// GetAttributesCodeOKBodyTypePimCatalogMetric captures enum value "pim_catalog_metric"
	GetAttributesCodeOKBodyTypePimCatalogMetric string = "pim_catalog_metric"

	// GetAttributesCodeOKBodyTypePimCatalogNumber captures enum value "pim_catalog_number"
	GetAttributesCodeOKBodyTypePimCatalogNumber string = "pim_catalog_number"

	// GetAttributesCodeOKBodyTypePimCatalogReferenceDataMultiSelect captures enum value "pim_catalog_reference_data_multi_select"
	GetAttributesCodeOKBodyTypePimCatalogReferenceDataMultiSelect string = "pim_catalog_reference_data_multi_select"

	// GetAttributesCodeOKBodyTypePimCatalogReferenceDataSimpleSelect captures enum value "pim_catalog_reference_data_simple_select"
	GetAttributesCodeOKBodyTypePimCatalogReferenceDataSimpleSelect string = "pim_catalog_reference_data_simple_select"

	// GetAttributesCodeOKBodyTypePimCatalogSimpleselect captures enum value "pim_catalog_simpleselect"
	GetAttributesCodeOKBodyTypePimCatalogSimpleselect string = "pim_catalog_simpleselect"

	// GetAttributesCodeOKBodyTypePimCatalogMultiselect captures enum value "pim_catalog_multiselect"
	GetAttributesCodeOKBodyTypePimCatalogMultiselect string = "pim_catalog_multiselect"

	// GetAttributesCodeOKBodyTypePimCatalogDate captures enum value "pim_catalog_date"
	GetAttributesCodeOKBodyTypePimCatalogDate string = "pim_catalog_date"

	// GetAttributesCodeOKBodyTypePimCatalogTextarea captures enum value "pim_catalog_textarea"
	GetAttributesCodeOKBodyTypePimCatalogTextarea string = "pim_catalog_textarea"

	// GetAttributesCodeOKBodyTypePimCatalogText captures enum value "pim_catalog_text"
	GetAttributesCodeOKBodyTypePimCatalogText string = "pim_catalog_text"

	// GetAttributesCodeOKBodyTypePimCatalogFile captures enum value "pim_catalog_file"
	GetAttributesCodeOKBodyTypePimCatalogFile string = "pim_catalog_file"

	// GetAttributesCodeOKBodyTypePimCatalogImage captures enum value "pim_catalog_image"
	GetAttributesCodeOKBodyTypePimCatalogImage string = "pim_catalog_image"

	// GetAttributesCodeOKBodyTypePimCatalogPriceCollection captures enum value "pim_catalog_price_collection"
	GetAttributesCodeOKBodyTypePimCatalogPriceCollection string = "pim_catalog_price_collection"

	// GetAttributesCodeOKBodyTypePimCatalogBoolean captures enum value "pim_catalog_boolean"
	GetAttributesCodeOKBodyTypePimCatalogBoolean string = "pim_catalog_boolean"

	// GetAttributesCodeOKBodyTypeAkeneoReferenceEntity captures enum value "akeneo_reference_entity"
	GetAttributesCodeOKBodyTypeAkeneoReferenceEntity string = "akeneo_reference_entity"

	// GetAttributesCodeOKBodyTypeAkeneoReferenceEntityCollection captures enum value "akeneo_reference_entity_collection"
	GetAttributesCodeOKBodyTypeAkeneoReferenceEntityCollection string = "akeneo_reference_entity_collection"

	// GetAttributesCodeOKBodyTypePimCatalogAssetCollection captures enum value "pim_catalog_asset_collection"
	GetAttributesCodeOKBodyTypePimCatalogAssetCollection string = "pim_catalog_asset_collection"
)

// prop value enum
func (o *GetAttributesCodeOKBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getAttributesCodeOKBodyTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetAttributesCodeOKBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getAttributesCodeOK"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getAttributesCodeOK"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeOKBodyGroupLabels Group labels for each locale
swagger:model GetAttributesCodeOKBodyGroupLabels
*/
type GetAttributesCodeOKBodyGroupLabels struct {

	// Group label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get attributes code o k body group labels
func (o *GetAttributesCodeOKBodyGroupLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeOKBodyGroupLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeOKBodyGroupLabels) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeOKBodyGroupLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeOKBodyLabels Attribute labels for each locale
swagger:model GetAttributesCodeOKBodyLabels
*/
type GetAttributesCodeOKBodyLabels struct {

	// Attribute label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get attributes code o k body labels
func (o *GetAttributesCodeOKBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeOKBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeOKBodyLabels) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeOKBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesCodeUnauthorizedBody get attributes code unauthorized body
swagger:model GetAttributesCodeUnauthorizedBody
*/
type GetAttributesCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes code unauthorized body
func (o *GetAttributesCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

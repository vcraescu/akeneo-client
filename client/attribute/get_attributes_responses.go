// Code generated by go-swagger; DO NOT EDIT.

package attribute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAttributesReader is a Reader for the GetAttributes structure.
type GetAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAttributesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAttributesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAttributesOK creates a GetAttributesOK with default headers values
func NewGetAttributesOK() *GetAttributesOK {
	return &GetAttributesOK{}
}

/*GetAttributesOK handles this case with default header values.

Return attributes paginated
*/
type GetAttributesOK struct {
	Payload *GetAttributesOKBody
}

func (o *GetAttributesOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes][%d] getAttributesOK  %+v", 200, o.Payload)
}

func (o *GetAttributesOK) GetPayload() *GetAttributesOKBody {
	return o.Payload
}

func (o *GetAttributesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesUnauthorized creates a GetAttributesUnauthorized with default headers values
func NewGetAttributesUnauthorized() *GetAttributesUnauthorized {
	return &GetAttributesUnauthorized{}
}

/*GetAttributesUnauthorized handles this case with default header values.

Authentication required
*/
type GetAttributesUnauthorized struct {
	Payload *GetAttributesUnauthorizedBody
}

func (o *GetAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes][%d] getAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAttributesUnauthorized) GetPayload() *GetAttributesUnauthorizedBody {
	return o.Payload
}

func (o *GetAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesForbidden creates a GetAttributesForbidden with default headers values
func NewGetAttributesForbidden() *GetAttributesForbidden {
	return &GetAttributesForbidden{}
}

/*GetAttributesForbidden handles this case with default header values.

Access forbidden
*/
type GetAttributesForbidden struct {
	Payload *GetAttributesForbiddenBody
}

func (o *GetAttributesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes][%d] getAttributesForbidden  %+v", 403, o.Payload)
}

func (o *GetAttributesForbidden) GetPayload() *GetAttributesForbiddenBody {
	return o.Payload
}

func (o *GetAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttributesNotAcceptable creates a GetAttributesNotAcceptable with default headers values
func NewGetAttributesNotAcceptable() *GetAttributesNotAcceptable {
	return &GetAttributesNotAcceptable{}
}

/*GetAttributesNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetAttributesNotAcceptable struct {
	Payload *GetAttributesNotAcceptableBody
}

func (o *GetAttributesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/attributes][%d] getAttributesNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetAttributesNotAcceptable) GetPayload() *GetAttributesNotAcceptableBody {
	return o.Payload
}

func (o *GetAttributesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttributesNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAttributesForbiddenBody get attributes forbidden body
swagger:model GetAttributesForbiddenBody
*/
type GetAttributesForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes forbidden body
func (o *GetAttributesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesNotAcceptableBody get attributes not acceptable body
swagger:model GetAttributesNotAcceptableBody
*/
type GetAttributesNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes not acceptable body
func (o *GetAttributesNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBody Attributes
swagger:model GetAttributesOKBody
*/
type GetAttributesOKBody struct {

	// links
	Links *GetAttributesOKBodyGetAttributesOKBodyAO0Links `json:"_links,omitempty"`

	// Current page number
	CurrentPage int64 `json:"current_page,omitempty"`

	// embedded
	Embedded *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAttributesOKBody) UnmarshalJSON(raw []byte) error {
	// GetAttributesOKBodyAO0
	var dataGetAttributesOKBodyAO0 struct {
		Links *GetAttributesOKBodyGetAttributesOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAttributesOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetAttributesOKBodyAO0.Links

	o.CurrentPage = dataGetAttributesOKBodyAO0.CurrentPage

	// GetAttributesOKBodyAO1
	var dataGetAttributesOKBodyAO1 struct {
		Embedded *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetAttributesOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataGetAttributesOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAttributesOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetAttributesOKBodyAO0 struct {
		Links *GetAttributesOKBodyGetAttributesOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}

	dataGetAttributesOKBodyAO0.Links = o.Links

	dataGetAttributesOKBodyAO0.CurrentPage = o.CurrentPage

	jsonDataGetAttributesOKBodyAO0, errGetAttributesOKBodyAO0 := swag.WriteJSON(dataGetAttributesOKBodyAO0)
	if errGetAttributesOKBodyAO0 != nil {
		return nil, errGetAttributesOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetAttributesOKBodyAO0)
	var dataGetAttributesOKBodyAO1 struct {
		Embedded *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataGetAttributesOKBodyAO1.Embedded = o.Embedded

	jsonDataGetAttributesOKBodyAO1, errGetAttributesOKBodyAO1 := swag.WriteJSON(dataGetAttributesOKBodyAO1)
	if errGetAttributesOKBodyAO1 != nil {
		return nil, errGetAttributesOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetAttributesOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get attributes o k body
func (o *GetAttributesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO0Links get attributes o k body get attributes o k body a o0 links
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO0Links
*/
type GetAttributesOKBodyGetAttributesOKBodyAO0Links struct {

	// first
	First *GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext `json:"next,omitempty"`

	// previous
	Previous *GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious `json:"previous,omitempty"`

	// self
	Self *GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o0 links
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrevious(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) validatePrevious(formats strfmt.Registry) error {

	if swag.IsZero(o.Previous) { // not required
		return nil
	}

	if o.Previous != nil {
		if err := o.Previous.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_links" + "." + "previous")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttributesOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst get attributes o k body get attributes o k body a o0 links first
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst
*/
type GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o0 links first
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext get attributes o k body get attributes o k body a o0 links next
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext
*/
type GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o0 links next
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious get attributes o k body get attributes o k body a o0 links previous
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious
*/
type GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious struct {

	// URI of the previous page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o0 links previous
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO0LinksPrevious
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf get attributes o k body get attributes o k body a o0 links self
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf
*/
type GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o0 links self
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1Embedded get attributes o k body get attributes o k body a o1 embedded
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1Embedded
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1Embedded struct {

	// items
	Items []*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0 `json:"items"`
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAttributesOK" + "." + "_embedded" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0 get attributes o k body get attributes o k body a o1 embedded items items0
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`
	AllowedExtensions []string `json:"allowed_extensions"`

	// To make the attribute locale specfic, specify here for which locales it is specific
	AvailableLocales []string `json:"available_locales"`

	// Attribute code
	// Required: true
	Code *string `json:"code"`

	// Maximum date allowed when the attribute type is `pim_catalog_date`
	// Format: date-time
	DateMax strfmt.DateTime `json:"date_max,omitempty"`

	// Minimum date allowed when the attribute type is `pim_catalog_date`
	// Format: date-time
	DateMin strfmt.DateTime `json:"date_min,omitempty"`

	// Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	DecimalsAllowed bool `json:"decimals_allowed,omitempty"`

	// Default metric unit when the attribute type is `pim_catalog_metric`
	DefaultMetricUnit string `json:"default_metric_unit,omitempty"`

	// Attribute group
	// Required: true
	Group *string `json:"group"`

	// group labels
	GroupLabels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels `json:"group_labels,omitempty"`

	// labels
	Labels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

	// Whether the attribute is localizable, i.e. can have one value by locale
	Localizable *bool `json:"localizable,omitempty"`

	// Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`
	MaxCharacters int64 `json:"max_characters,omitempty"`

	// Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`
	MaxFileSize string `json:"max_file_size,omitempty"`

	// Metric family when the attribute type is `pim_catalog_metric`
	MetricFamily string `json:"metric_family,omitempty"`

	// Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`
	NegativeAllowed bool `json:"negative_allowed,omitempty"`

	// Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	NumberMax string `json:"number_max,omitempty"`

	// Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`
	NumberMin string `json:"number_min,omitempty"`

	// Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`
	ReferenceDataName string `json:"reference_data_name,omitempty"`

	// Whether the attribute is scopable, i.e. can have one value by channel
	Scopable *bool `json:"scopable,omitempty"`

	// Order of the attribute in its group
	SortOrder int64 `json:"sort_order,omitempty"`

	// Attribute type
	// Required: true
	// Enum: [pim_catalog_identifier pim_catalog_metric pim_catalog_number pim_catalog_reference_data_multi_select pim_catalog_reference_data_simple_select pim_catalog_simpleselect pim_catalog_multiselect pim_catalog_date pim_catalog_textarea pim_catalog_text pim_catalog_file pim_catalog_image pim_catalog_price_collection pim_catalog_boolean akeneo_reference_entity akeneo_reference_entity_collection pim_catalog_asset_collection]
	Type *string `json:"type"`

	// Whether two values for the attribute cannot be the same
	Unique bool `json:"unique,omitempty"`

	// Whether the attribute can be used as a filter for the product grid in the PIM user interface
	UseableAsGridFilter bool `json:"useable_as_grid_filter,omitempty"`

	// Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
	ValidationRegexp string `json:"validation_regexp,omitempty"`

	// Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`
	ValidationRule string `json:"validation_rule,omitempty"`

	// Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`
	WysiwygEnabled bool `json:"wysiwyg_enabled,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		AllowedExtensions []string `json:"allowed_extensions"`

		AvailableLocales []string `json:"available_locales"`

		Code *string `json:"code"`

		DateMax strfmt.DateTime `json:"date_max,omitempty"`

		DateMin strfmt.DateTime `json:"date_min,omitempty"`

		DecimalsAllowed bool `json:"decimals_allowed,omitempty"`

		DefaultMetricUnit string `json:"default_metric_unit,omitempty"`

		Group *string `json:"group"`

		GroupLabels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels `json:"group_labels,omitempty"`

		Labels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		Localizable *bool `json:"localizable,omitempty"`

		MaxCharacters int64 `json:"max_characters,omitempty"`

		MaxFileSize string `json:"max_file_size,omitempty"`

		MetricFamily string `json:"metric_family,omitempty"`

		NegativeAllowed bool `json:"negative_allowed,omitempty"`

		NumberMax string `json:"number_max,omitempty"`

		NumberMin string `json:"number_min,omitempty"`

		ReferenceDataName string `json:"reference_data_name,omitempty"`

		Scopable *bool `json:"scopable,omitempty"`

		SortOrder int64 `json:"sort_order,omitempty"`

		Type *string `json:"type"`

		Unique bool `json:"unique,omitempty"`

		UseableAsGridFilter bool `json:"useable_as_grid_filter,omitempty"`

		ValidationRegexp string `json:"validation_regexp,omitempty"`

		ValidationRule string `json:"validation_rule,omitempty"`

		WysiwygEnabled bool `json:"wysiwyg_enabled,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.AllowedExtensions = dataAO1.AllowedExtensions

	o.AvailableLocales = dataAO1.AvailableLocales

	o.Code = dataAO1.Code

	o.DateMax = dataAO1.DateMax

	o.DateMin = dataAO1.DateMin

	o.DecimalsAllowed = dataAO1.DecimalsAllowed

	o.DefaultMetricUnit = dataAO1.DefaultMetricUnit

	o.Group = dataAO1.Group

	o.GroupLabels = dataAO1.GroupLabels

	o.Labels = dataAO1.Labels

	o.Localizable = dataAO1.Localizable

	o.MaxCharacters = dataAO1.MaxCharacters

	o.MaxFileSize = dataAO1.MaxFileSize

	o.MetricFamily = dataAO1.MetricFamily

	o.NegativeAllowed = dataAO1.NegativeAllowed

	o.NumberMax = dataAO1.NumberMax

	o.NumberMin = dataAO1.NumberMin

	o.ReferenceDataName = dataAO1.ReferenceDataName

	o.Scopable = dataAO1.Scopable

	o.SortOrder = dataAO1.SortOrder

	o.Type = dataAO1.Type

	o.Unique = dataAO1.Unique

	o.UseableAsGridFilter = dataAO1.UseableAsGridFilter

	o.ValidationRegexp = dataAO1.ValidationRegexp

	o.ValidationRule = dataAO1.ValidationRule

	o.WysiwygEnabled = dataAO1.WysiwygEnabled

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		AllowedExtensions []string `json:"allowed_extensions"`

		AvailableLocales []string `json:"available_locales"`

		Code *string `json:"code"`

		DateMax strfmt.DateTime `json:"date_max,omitempty"`

		DateMin strfmt.DateTime `json:"date_min,omitempty"`

		DecimalsAllowed bool `json:"decimals_allowed,omitempty"`

		DefaultMetricUnit string `json:"default_metric_unit,omitempty"`

		Group *string `json:"group"`

		GroupLabels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels `json:"group_labels,omitempty"`

		Labels *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		Localizable *bool `json:"localizable,omitempty"`

		MaxCharacters int64 `json:"max_characters,omitempty"`

		MaxFileSize string `json:"max_file_size,omitempty"`

		MetricFamily string `json:"metric_family,omitempty"`

		NegativeAllowed bool `json:"negative_allowed,omitempty"`

		NumberMax string `json:"number_max,omitempty"`

		NumberMin string `json:"number_min,omitempty"`

		ReferenceDataName string `json:"reference_data_name,omitempty"`

		Scopable *bool `json:"scopable,omitempty"`

		SortOrder int64 `json:"sort_order,omitempty"`

		Type *string `json:"type"`

		Unique bool `json:"unique,omitempty"`

		UseableAsGridFilter bool `json:"useable_as_grid_filter,omitempty"`

		ValidationRegexp string `json:"validation_regexp,omitempty"`

		ValidationRule string `json:"validation_rule,omitempty"`

		WysiwygEnabled bool `json:"wysiwyg_enabled,omitempty"`
	}

	dataAO1.AllowedExtensions = o.AllowedExtensions

	dataAO1.AvailableLocales = o.AvailableLocales

	dataAO1.Code = o.Code

	dataAO1.DateMax = o.DateMax

	dataAO1.DateMin = o.DateMin

	dataAO1.DecimalsAllowed = o.DecimalsAllowed

	dataAO1.DefaultMetricUnit = o.DefaultMetricUnit

	dataAO1.Group = o.Group

	dataAO1.GroupLabels = o.GroupLabels

	dataAO1.Labels = o.Labels

	dataAO1.Localizable = o.Localizable

	dataAO1.MaxCharacters = o.MaxCharacters

	dataAO1.MaxFileSize = o.MaxFileSize

	dataAO1.MetricFamily = o.MetricFamily

	dataAO1.NegativeAllowed = o.NegativeAllowed

	dataAO1.NumberMax = o.NumberMax

	dataAO1.NumberMin = o.NumberMin

	dataAO1.ReferenceDataName = o.ReferenceDataName

	dataAO1.Scopable = o.Scopable

	dataAO1.SortOrder = o.SortOrder

	dataAO1.Type = o.Type

	dataAO1.Unique = o.Unique

	dataAO1.UseableAsGridFilter = o.UseableAsGridFilter

	dataAO1.ValidationRegexp = o.ValidationRegexp

	dataAO1.ValidationRule = o.ValidationRule

	dataAO1.WysiwygEnabled = o.WysiwygEnabled

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded items items0
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateMax(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateMin(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroupLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateDateMax(formats strfmt.Registry) error {

	if swag.IsZero(o.DateMax) { // not required
		return nil
	}

	if err := validate.FormatOf("date_max", "body", "date-time", o.DateMax.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateDateMin(formats strfmt.Registry) error {

	if swag.IsZero(o.DateMin) { // not required
		return nil
	}

	if err := validate.FormatOf("date_min", "body", "date-time", o.DateMin.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateGroup(formats strfmt.Registry) error {

	if err := validate.Required("group", "body", o.Group); err != nil {
		return err
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateGroupLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.GroupLabels) { // not required
		return nil
	}

	if o.GroupLabels != nil {
		if err := o.GroupLabels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("group_labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

var getAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pim_catalog_identifier","pim_catalog_metric","pim_catalog_number","pim_catalog_reference_data_multi_select","pim_catalog_reference_data_simple_select","pim_catalog_simpleselect","pim_catalog_multiselect","pim_catalog_date","pim_catalog_textarea","pim_catalog_text","pim_catalog_file","pim_catalog_image","pim_catalog_price_collection","pim_catalog_boolean","akeneo_reference_entity","akeneo_reference_entity_collection","pim_catalog_asset_collection"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0TypeTypePropEnum = append(getAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0TypeTypePropEnum, v)
	}
}

// property enum
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links get attributes o k body get attributes o k body a o1 embedded items items0 a o0 links
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded items items0 a o0 links
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf get attributes o k body get attributes o k body a o1 embedded items items0 a o0 links self
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded items items0 a o0 links self
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels Group labels for each locale
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels struct {

	// Group label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded items items0 a o1 group labels
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1GroupLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels Attribute labels for each locale
swagger:model GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels
*/
type GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels struct {

	// Attribute label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get attributes o k body get attributes o k body a o1 embedded items items0 a o1 labels
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels) UnmarshalBinary(b []byte) error {
	var res GetAttributesOKBodyGetAttributesOKBodyAO1EmbeddedItemsItems0AO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttributesUnauthorizedBody get attributes unauthorized body
swagger:model GetAttributesUnauthorizedBody
*/
type GetAttributesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get attributes unauthorized body
func (o *GetAttributesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAttributesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttributesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAttributesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

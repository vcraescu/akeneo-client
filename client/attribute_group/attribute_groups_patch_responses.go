// Code generated by go-swagger; DO NOT EDIT.

package attribute_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AttributeGroupsPatchReader is a Reader for the AttributeGroupsPatch structure.
type AttributeGroupsPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttributeGroupsPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAttributeGroupsPatchCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAttributeGroupsPatchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAttributeGroupsPatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAttributeGroupsPatchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAttributeGroupsPatchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewAttributeGroupsPatchUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAttributeGroupsPatchUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAttributeGroupsPatchCreated creates a AttributeGroupsPatchCreated with default headers values
func NewAttributeGroupsPatchCreated() *AttributeGroupsPatchCreated {
	return &AttributeGroupsPatchCreated{}
}

/*AttributeGroupsPatchCreated handles this case with default header values.

Created
*/
type AttributeGroupsPatchCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *AttributeGroupsPatchCreated) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchCreated ", 201)
}

func (o *AttributeGroupsPatchCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewAttributeGroupsPatchNoContent creates a AttributeGroupsPatchNoContent with default headers values
func NewAttributeGroupsPatchNoContent() *AttributeGroupsPatchNoContent {
	return &AttributeGroupsPatchNoContent{}
}

/*AttributeGroupsPatchNoContent handles this case with default header values.

No content to return
*/
type AttributeGroupsPatchNoContent struct {
	/*URI of the updated resource
	 */
	Location string
}

func (o *AttributeGroupsPatchNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchNoContent ", 204)
}

func (o *AttributeGroupsPatchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewAttributeGroupsPatchBadRequest creates a AttributeGroupsPatchBadRequest with default headers values
func NewAttributeGroupsPatchBadRequest() *AttributeGroupsPatchBadRequest {
	return &AttributeGroupsPatchBadRequest{}
}

/*AttributeGroupsPatchBadRequest handles this case with default header values.

Bad request
*/
type AttributeGroupsPatchBadRequest struct {
	Payload *AttributeGroupsPatchBadRequestBody
}

func (o *AttributeGroupsPatchBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchBadRequest  %+v", 400, o.Payload)
}

func (o *AttributeGroupsPatchBadRequest) GetPayload() *AttributeGroupsPatchBadRequestBody {
	return o.Payload
}

func (o *AttributeGroupsPatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttributeGroupsPatchBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttributeGroupsPatchUnauthorized creates a AttributeGroupsPatchUnauthorized with default headers values
func NewAttributeGroupsPatchUnauthorized() *AttributeGroupsPatchUnauthorized {
	return &AttributeGroupsPatchUnauthorized{}
}

/*AttributeGroupsPatchUnauthorized handles this case with default header values.

Authentication required
*/
type AttributeGroupsPatchUnauthorized struct {
	Payload *AttributeGroupsPatchUnauthorizedBody
}

func (o *AttributeGroupsPatchUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchUnauthorized  %+v", 401, o.Payload)
}

func (o *AttributeGroupsPatchUnauthorized) GetPayload() *AttributeGroupsPatchUnauthorizedBody {
	return o.Payload
}

func (o *AttributeGroupsPatchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttributeGroupsPatchUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttributeGroupsPatchForbidden creates a AttributeGroupsPatchForbidden with default headers values
func NewAttributeGroupsPatchForbidden() *AttributeGroupsPatchForbidden {
	return &AttributeGroupsPatchForbidden{}
}

/*AttributeGroupsPatchForbidden handles this case with default header values.

Access forbidden
*/
type AttributeGroupsPatchForbidden struct {
	Payload *AttributeGroupsPatchForbiddenBody
}

func (o *AttributeGroupsPatchForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchForbidden  %+v", 403, o.Payload)
}

func (o *AttributeGroupsPatchForbidden) GetPayload() *AttributeGroupsPatchForbiddenBody {
	return o.Payload
}

func (o *AttributeGroupsPatchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttributeGroupsPatchForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttributeGroupsPatchUnsupportedMediaType creates a AttributeGroupsPatchUnsupportedMediaType with default headers values
func NewAttributeGroupsPatchUnsupportedMediaType() *AttributeGroupsPatchUnsupportedMediaType {
	return &AttributeGroupsPatchUnsupportedMediaType{}
}

/*AttributeGroupsPatchUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type AttributeGroupsPatchUnsupportedMediaType struct {
	Payload *AttributeGroupsPatchUnsupportedMediaTypeBody
}

func (o *AttributeGroupsPatchUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *AttributeGroupsPatchUnsupportedMediaType) GetPayload() *AttributeGroupsPatchUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *AttributeGroupsPatchUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttributeGroupsPatchUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttributeGroupsPatchUnprocessableEntity creates a AttributeGroupsPatchUnprocessableEntity with default headers values
func NewAttributeGroupsPatchUnprocessableEntity() *AttributeGroupsPatchUnprocessableEntity {
	return &AttributeGroupsPatchUnprocessableEntity{}
}

/*AttributeGroupsPatchUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type AttributeGroupsPatchUnprocessableEntity struct {
	Payload *AttributeGroupsPatchUnprocessableEntityBody
}

func (o *AttributeGroupsPatchUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/attribute-groups/{code}][%d] attributeGroupsPatchUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *AttributeGroupsPatchUnprocessableEntity) GetPayload() *AttributeGroupsPatchUnprocessableEntityBody {
	return o.Payload
}

func (o *AttributeGroupsPatchUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttributeGroupsPatchUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AttributeGroupsPatchBadRequestBody attribute groups patch bad request body
swagger:model AttributeGroupsPatchBadRequestBody
*/
type AttributeGroupsPatchBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this attribute groups patch bad request body
func (o *AttributeGroupsPatchBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchBadRequestBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchBody attribute groups patch body
swagger:model AttributeGroupsPatchBody
*/
type AttributeGroupsPatchBody struct {

	// Attribute codes that compose the attribute group
	Attributes []string `json:"attributes"`

	// Attribute group code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *AttributeGroupsPatchParamsBodyLabels `json:"labels,omitempty"`

	// Attribute group order among other attribute groups
	SortOrder int64 `json:"sort_order,omitempty"`
}

// Validate validates this attribute groups patch body
func (o *AttributeGroupsPatchBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AttributeGroupsPatchBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *AttributeGroupsPatchBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchForbiddenBody attribute groups patch forbidden body
swagger:model AttributeGroupsPatchForbiddenBody
*/
type AttributeGroupsPatchForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this attribute groups patch forbidden body
func (o *AttributeGroupsPatchForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchParamsBodyLabels Attribute group labels for each locale
swagger:model AttributeGroupsPatchParamsBodyLabels
*/
type AttributeGroupsPatchParamsBodyLabels struct {

	// Attribute group label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this attribute groups patch params body labels
func (o *AttributeGroupsPatchParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchUnauthorizedBody attribute groups patch unauthorized body
swagger:model AttributeGroupsPatchUnauthorizedBody
*/
type AttributeGroupsPatchUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this attribute groups patch unauthorized body
func (o *AttributeGroupsPatchUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchUnprocessableEntityBody attribute groups patch unprocessable entity body
swagger:model AttributeGroupsPatchUnprocessableEntityBody
*/
type AttributeGroupsPatchUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this attribute groups patch unprocessable entity body
func (o *AttributeGroupsPatchUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttributeGroupsPatchUnsupportedMediaTypeBody attribute groups patch unsupported media type body
swagger:model AttributeGroupsPatchUnsupportedMediaTypeBody
*/
type AttributeGroupsPatchUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this attribute groups patch unsupported media type body
func (o *AttributeGroupsPatchUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AttributeGroupsPatchUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttributeGroupsPatchUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res AttributeGroupsPatchUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

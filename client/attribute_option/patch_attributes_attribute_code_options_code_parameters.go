// Code generated by go-swagger; DO NOT EDIT.

package attribute_option

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPatchAttributesAttributeCodeOptionsCodeParams creates a new PatchAttributesAttributeCodeOptionsCodeParams object
// with the default values initialized.
func NewPatchAttributesAttributeCodeOptionsCodeParams() *PatchAttributesAttributeCodeOptionsCodeParams {
	var ()
	return &PatchAttributesAttributeCodeOptionsCodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchAttributesAttributeCodeOptionsCodeParamsWithTimeout creates a new PatchAttributesAttributeCodeOptionsCodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchAttributesAttributeCodeOptionsCodeParamsWithTimeout(timeout time.Duration) *PatchAttributesAttributeCodeOptionsCodeParams {
	var ()
	return &PatchAttributesAttributeCodeOptionsCodeParams{

		timeout: timeout,
	}
}

// NewPatchAttributesAttributeCodeOptionsCodeParamsWithContext creates a new PatchAttributesAttributeCodeOptionsCodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchAttributesAttributeCodeOptionsCodeParamsWithContext(ctx context.Context) *PatchAttributesAttributeCodeOptionsCodeParams {
	var ()
	return &PatchAttributesAttributeCodeOptionsCodeParams{

		Context: ctx,
	}
}

// NewPatchAttributesAttributeCodeOptionsCodeParamsWithHTTPClient creates a new PatchAttributesAttributeCodeOptionsCodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchAttributesAttributeCodeOptionsCodeParamsWithHTTPClient(client *http.Client) *PatchAttributesAttributeCodeOptionsCodeParams {
	var ()
	return &PatchAttributesAttributeCodeOptionsCodeParams{
		HTTPClient: client,
	}
}

/*PatchAttributesAttributeCodeOptionsCodeParams contains all the parameters to send to the API endpoint
for the patch attributes attribute code options code operation typically these are written to a http.Request
*/
type PatchAttributesAttributeCodeOptionsCodeParams struct {

	/*AttributeCode
	  Code of the attribute

	*/
	AttributeCode string
	/*Body*/
	Body PatchAttributesAttributeCodeOptionsCodeBody
	/*Code
	  Code of the resource

	*/
	Code string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithTimeout(timeout time.Duration) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithContext(ctx context.Context) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithHTTPClient(client *http.Client) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttributeCode adds the attributeCode to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithAttributeCode(attributeCode string) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetAttributeCode(attributeCode)
	return o
}

// SetAttributeCode adds the attributeCode to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetAttributeCode(attributeCode string) {
	o.AttributeCode = attributeCode
}

// WithBody adds the body to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithBody(body PatchAttributesAttributeCodeOptionsCodeBody) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetBody(body PatchAttributesAttributeCodeOptionsCodeBody) {
	o.Body = body
}

// WithCode adds the code to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WithCode(code string) *PatchAttributesAttributeCodeOptionsCodeParams {
	o.SetCode(code)
	return o
}

// SetCode adds the code to the patch attributes attribute code options code params
func (o *PatchAttributesAttributeCodeOptionsCodeParams) SetCode(code string) {
	o.Code = code
}

// WriteToRequest writes these params to a swagger request
func (o *PatchAttributesAttributeCodeOptionsCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param attribute_code
	if err := r.SetPathParam("attribute_code", o.AttributeCode); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param code
	if err := r.SetPathParam("code", o.Code); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

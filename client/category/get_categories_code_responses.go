// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCategoriesCodeReader is a Reader for the GetCategoriesCode structure.
type GetCategoriesCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCategoriesCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCategoriesCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCategoriesCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCategoriesCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCategoriesCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetCategoriesCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCategoriesCodeOK creates a GetCategoriesCodeOK with default headers values
func NewGetCategoriesCodeOK() *GetCategoriesCodeOK {
	return &GetCategoriesCodeOK{}
}

/*GetCategoriesCodeOK handles this case with default header values.

OK
*/
type GetCategoriesCodeOK struct {
	Payload *GetCategoriesCodeOKBody
}

func (o *GetCategoriesCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/categories/{code}][%d] getCategoriesCodeOK  %+v", 200, o.Payload)
}

func (o *GetCategoriesCodeOK) GetPayload() *GetCategoriesCodeOKBody {
	return o.Payload
}

func (o *GetCategoriesCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCategoriesCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoriesCodeUnauthorized creates a GetCategoriesCodeUnauthorized with default headers values
func NewGetCategoriesCodeUnauthorized() *GetCategoriesCodeUnauthorized {
	return &GetCategoriesCodeUnauthorized{}
}

/*GetCategoriesCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetCategoriesCodeUnauthorized struct {
	Payload *GetCategoriesCodeUnauthorizedBody
}

func (o *GetCategoriesCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/categories/{code}][%d] getCategoriesCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCategoriesCodeUnauthorized) GetPayload() *GetCategoriesCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetCategoriesCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCategoriesCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoriesCodeForbidden creates a GetCategoriesCodeForbidden with default headers values
func NewGetCategoriesCodeForbidden() *GetCategoriesCodeForbidden {
	return &GetCategoriesCodeForbidden{}
}

/*GetCategoriesCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetCategoriesCodeForbidden struct {
	Payload *GetCategoriesCodeForbiddenBody
}

func (o *GetCategoriesCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/categories/{code}][%d] getCategoriesCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetCategoriesCodeForbidden) GetPayload() *GetCategoriesCodeForbiddenBody {
	return o.Payload
}

func (o *GetCategoriesCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCategoriesCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoriesCodeNotFound creates a GetCategoriesCodeNotFound with default headers values
func NewGetCategoriesCodeNotFound() *GetCategoriesCodeNotFound {
	return &GetCategoriesCodeNotFound{}
}

/*GetCategoriesCodeNotFound handles this case with default header values.

Resource not found
*/
type GetCategoriesCodeNotFound struct {
	Payload *GetCategoriesCodeNotFoundBody
}

func (o *GetCategoriesCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/categories/{code}][%d] getCategoriesCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetCategoriesCodeNotFound) GetPayload() *GetCategoriesCodeNotFoundBody {
	return o.Payload
}

func (o *GetCategoriesCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCategoriesCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoriesCodeNotAcceptable creates a GetCategoriesCodeNotAcceptable with default headers values
func NewGetCategoriesCodeNotAcceptable() *GetCategoriesCodeNotAcceptable {
	return &GetCategoriesCodeNotAcceptable{}
}

/*GetCategoriesCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetCategoriesCodeNotAcceptable struct {
	Payload *GetCategoriesCodeNotAcceptableBody
}

func (o *GetCategoriesCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/categories/{code}][%d] getCategoriesCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetCategoriesCodeNotAcceptable) GetPayload() *GetCategoriesCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetCategoriesCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCategoriesCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCategoriesCodeForbiddenBody get categories code forbidden body
swagger:model GetCategoriesCodeForbiddenBody
*/
type GetCategoriesCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get categories code forbidden body
func (o *GetCategoriesCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCategoriesCodeNotAcceptableBody get categories code not acceptable body
swagger:model GetCategoriesCodeNotAcceptableBody
*/
type GetCategoriesCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get categories code not acceptable body
func (o *GetCategoriesCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCategoriesCodeNotFoundBody get categories code not found body
swagger:model GetCategoriesCodeNotFoundBody
*/
type GetCategoriesCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get categories code not found body
func (o *GetCategoriesCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCategoriesCodeOKBody get categories code o k body
swagger:model GetCategoriesCodeOKBody
*/
type GetCategoriesCodeOKBody struct {

	// Category code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *GetCategoriesCodeOKBodyLabels `json:"labels,omitempty"`

	// Category code of the parent's category
	Parent *string `json:"parent,omitempty"`
}

// Validate validates this get categories code o k body
func (o *GetCategoriesCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCategoriesCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getCategoriesCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetCategoriesCodeOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCategoriesCodeOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCategoriesCodeOKBodyLabels Category labels for each locale
swagger:model GetCategoriesCodeOKBodyLabels
*/
type GetCategoriesCodeOKBodyLabels struct {

	// Category label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get categories code o k body labels
func (o *GetCategoriesCodeOKBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeOKBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeOKBodyLabels) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeOKBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCategoriesCodeUnauthorizedBody get categories code unauthorized body
swagger:model GetCategoriesCodeUnauthorizedBody
*/
type GetCategoriesCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get categories code unauthorized body
func (o *GetCategoriesCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCategoriesCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCategoriesCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetCategoriesCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostCategoriesReader is a Reader for the PostCategories structure.
type PostCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCategoriesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCategoriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCategoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostCategoriesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostCategoriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostCategoriesCreated creates a PostCategoriesCreated with default headers values
func NewPostCategoriesCreated() *PostCategoriesCreated {
	return &PostCategoriesCreated{}
}

/*PostCategoriesCreated handles this case with default header values.

Created
*/
type PostCategoriesCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PostCategoriesCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesCreated ", 201)
}

func (o *PostCategoriesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostCategoriesBadRequest creates a PostCategoriesBadRequest with default headers values
func NewPostCategoriesBadRequest() *PostCategoriesBadRequest {
	return &PostCategoriesBadRequest{}
}

/*PostCategoriesBadRequest handles this case with default header values.

Bad request
*/
type PostCategoriesBadRequest struct {
	Payload *PostCategoriesBadRequestBody
}

func (o *PostCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *PostCategoriesBadRequest) GetPayload() *PostCategoriesBadRequestBody {
	return o.Payload
}

func (o *PostCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCategoriesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCategoriesUnauthorized creates a PostCategoriesUnauthorized with default headers values
func NewPostCategoriesUnauthorized() *PostCategoriesUnauthorized {
	return &PostCategoriesUnauthorized{}
}

/*PostCategoriesUnauthorized handles this case with default header values.

Authentication required
*/
type PostCategoriesUnauthorized struct {
	Payload *PostCategoriesUnauthorizedBody
}

func (o *PostCategoriesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCategoriesUnauthorized) GetPayload() *PostCategoriesUnauthorizedBody {
	return o.Payload
}

func (o *PostCategoriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCategoriesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCategoriesForbidden creates a PostCategoriesForbidden with default headers values
func NewPostCategoriesForbidden() *PostCategoriesForbidden {
	return &PostCategoriesForbidden{}
}

/*PostCategoriesForbidden handles this case with default header values.

Access forbidden
*/
type PostCategoriesForbidden struct {
	Payload *PostCategoriesForbiddenBody
}

func (o *PostCategoriesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *PostCategoriesForbidden) GetPayload() *PostCategoriesForbiddenBody {
	return o.Payload
}

func (o *PostCategoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCategoriesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCategoriesUnsupportedMediaType creates a PostCategoriesUnsupportedMediaType with default headers values
func NewPostCategoriesUnsupportedMediaType() *PostCategoriesUnsupportedMediaType {
	return &PostCategoriesUnsupportedMediaType{}
}

/*PostCategoriesUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostCategoriesUnsupportedMediaType struct {
	Payload *PostCategoriesUnsupportedMediaTypeBody
}

func (o *PostCategoriesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostCategoriesUnsupportedMediaType) GetPayload() *PostCategoriesUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostCategoriesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCategoriesUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCategoriesUnprocessableEntity creates a PostCategoriesUnprocessableEntity with default headers values
func NewPostCategoriesUnprocessableEntity() *PostCategoriesUnprocessableEntity {
	return &PostCategoriesUnprocessableEntity{}
}

/*PostCategoriesUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostCategoriesUnprocessableEntity struct {
	Payload *PostCategoriesUnprocessableEntityBody
}

func (o *PostCategoriesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/categories][%d] postCategoriesUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostCategoriesUnprocessableEntity) GetPayload() *PostCategoriesUnprocessableEntityBody {
	return o.Payload
}

func (o *PostCategoriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCategoriesUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostCategoriesBadRequestBody post categories bad request body
swagger:model PostCategoriesBadRequestBody
*/
type PostCategoriesBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post categories bad request body
func (o *PostCategoriesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesBody post categories body
swagger:model PostCategoriesBody
*/
type PostCategoriesBody struct {

	// Category code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *PostCategoriesParamsBodyLabels `json:"labels,omitempty"`

	// Category code of the parent's category
	Parent *string `json:"parent,omitempty"`
}

// Validate validates this post categories body
func (o *PostCategoriesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCategoriesBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PostCategoriesBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesForbiddenBody post categories forbidden body
swagger:model PostCategoriesForbiddenBody
*/
type PostCategoriesForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post categories forbidden body
func (o *PostCategoriesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesParamsBodyLabels Category labels for each locale
swagger:model PostCategoriesParamsBodyLabels
*/
type PostCategoriesParamsBodyLabels struct {

	// Category label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this post categories params body labels
func (o *PostCategoriesParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res PostCategoriesParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesUnauthorizedBody post categories unauthorized body
swagger:model PostCategoriesUnauthorizedBody
*/
type PostCategoriesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post categories unauthorized body
func (o *PostCategoriesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesUnprocessableEntityBody post categories unprocessable entity body
swagger:model PostCategoriesUnprocessableEntityBody
*/
type PostCategoriesUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post categories unprocessable entity body
func (o *PostCategoriesUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCategoriesUnsupportedMediaTypeBody post categories unsupported media type body
swagger:model PostCategoriesUnsupportedMediaTypeBody
*/
type PostCategoriesUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post categories unsupported media type body
func (o *PostCategoriesUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCategoriesUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCategoriesUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostCategoriesUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

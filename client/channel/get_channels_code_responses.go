// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetChannelsCodeReader is a Reader for the GetChannelsCode structure.
type GetChannelsCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChannelsCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChannelsCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChannelsCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChannelsCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChannelsCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetChannelsCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChannelsCodeOK creates a GetChannelsCodeOK with default headers values
func NewGetChannelsCodeOK() *GetChannelsCodeOK {
	return &GetChannelsCodeOK{}
}

/*GetChannelsCodeOK handles this case with default header values.

OK
*/
type GetChannelsCodeOK struct {
	Payload *GetChannelsCodeOKBody
}

func (o *GetChannelsCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels/{code}][%d] getChannelsCodeOK  %+v", 200, o.Payload)
}

func (o *GetChannelsCodeOK) GetPayload() *GetChannelsCodeOKBody {
	return o.Payload
}

func (o *GetChannelsCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsCodeUnauthorized creates a GetChannelsCodeUnauthorized with default headers values
func NewGetChannelsCodeUnauthorized() *GetChannelsCodeUnauthorized {
	return &GetChannelsCodeUnauthorized{}
}

/*GetChannelsCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetChannelsCodeUnauthorized struct {
	Payload *GetChannelsCodeUnauthorizedBody
}

func (o *GetChannelsCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels/{code}][%d] getChannelsCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChannelsCodeUnauthorized) GetPayload() *GetChannelsCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetChannelsCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsCodeForbidden creates a GetChannelsCodeForbidden with default headers values
func NewGetChannelsCodeForbidden() *GetChannelsCodeForbidden {
	return &GetChannelsCodeForbidden{}
}

/*GetChannelsCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetChannelsCodeForbidden struct {
	Payload *GetChannelsCodeForbiddenBody
}

func (o *GetChannelsCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels/{code}][%d] getChannelsCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetChannelsCodeForbidden) GetPayload() *GetChannelsCodeForbiddenBody {
	return o.Payload
}

func (o *GetChannelsCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsCodeNotFound creates a GetChannelsCodeNotFound with default headers values
func NewGetChannelsCodeNotFound() *GetChannelsCodeNotFound {
	return &GetChannelsCodeNotFound{}
}

/*GetChannelsCodeNotFound handles this case with default header values.

Resource not found
*/
type GetChannelsCodeNotFound struct {
	Payload *GetChannelsCodeNotFoundBody
}

func (o *GetChannelsCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels/{code}][%d] getChannelsCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetChannelsCodeNotFound) GetPayload() *GetChannelsCodeNotFoundBody {
	return o.Payload
}

func (o *GetChannelsCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsCodeNotAcceptable creates a GetChannelsCodeNotAcceptable with default headers values
func NewGetChannelsCodeNotAcceptable() *GetChannelsCodeNotAcceptable {
	return &GetChannelsCodeNotAcceptable{}
}

/*GetChannelsCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetChannelsCodeNotAcceptable struct {
	Payload *GetChannelsCodeNotAcceptableBody
}

func (o *GetChannelsCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels/{code}][%d] getChannelsCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetChannelsCodeNotAcceptable) GetPayload() *GetChannelsCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetChannelsCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetChannelsCodeForbiddenBody get channels code forbidden body
swagger:model GetChannelsCodeForbiddenBody
*/
type GetChannelsCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels code forbidden body
func (o *GetChannelsCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeNotAcceptableBody get channels code not acceptable body
swagger:model GetChannelsCodeNotAcceptableBody
*/
type GetChannelsCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels code not acceptable body
func (o *GetChannelsCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeNotFoundBody get channels code not found body
swagger:model GetChannelsCodeNotFoundBody
*/
type GetChannelsCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels code not found body
func (o *GetChannelsCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeOKBody get channels code o k body
swagger:model GetChannelsCodeOKBody
*/
type GetChannelsCodeOKBody struct {

	// Code of the category tree linked to the channel
	// Required: true
	CategoryTree *string `json:"category_tree"`

	// Channel code
	// Required: true
	Code *string `json:"code"`

	// conversion units
	ConversionUnits *GetChannelsCodeOKBodyConversionUnits `json:"conversion_units,omitempty"`

	// Codes of activated currencies for the channel
	// Required: true
	Currencies []string `json:"currencies"`

	// labels
	Labels *GetChannelsCodeOKBodyLabels `json:"labels,omitempty"`

	// Codes of activated locales for the channel
	// Required: true
	Locales []string `json:"locales"`
}

// Validate validates this get channels code o k body
func (o *GetChannelsCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCategoryTree(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConversionUnits(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCurrencies(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocales(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsCodeOKBody) validateCategoryTree(formats strfmt.Registry) error {

	if err := validate.Required("getChannelsCodeOK"+"."+"category_tree", "body", o.CategoryTree); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getChannelsCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsCodeOKBody) validateConversionUnits(formats strfmt.Registry) error {

	if swag.IsZero(o.ConversionUnits) { // not required
		return nil
	}

	if o.ConversionUnits != nil {
		if err := o.ConversionUnits.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsCodeOK" + "." + "conversion_units")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsCodeOKBody) validateCurrencies(formats strfmt.Registry) error {

	if err := validate.Required("getChannelsCodeOK"+"."+"currencies", "body", o.Currencies); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsCodeOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsCodeOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsCodeOKBody) validateLocales(formats strfmt.Registry) error {

	if err := validate.Required("getChannelsCodeOK"+"."+"locales", "body", o.Locales); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeOKBodyConversionUnits Units to which the given metric attributes should be converted when exporting products
swagger:model GetChannelsCodeOKBodyConversionUnits
*/
type GetChannelsCodeOKBodyConversionUnits struct {

	// Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel
	AttributeCode string `json:"attributeCode,omitempty"`
}

// Validate validates this get channels code o k body conversion units
func (o *GetChannelsCodeOKBodyConversionUnits) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeOKBodyConversionUnits) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeOKBodyConversionUnits) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeOKBodyConversionUnits
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeOKBodyLabels Channel labels for each locale
swagger:model GetChannelsCodeOKBodyLabels
*/
type GetChannelsCodeOKBodyLabels struct {

	// Channel label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get channels code o k body labels
func (o *GetChannelsCodeOKBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeOKBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeOKBodyLabels) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeOKBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsCodeUnauthorizedBody get channels code unauthorized body
swagger:model GetChannelsCodeUnauthorizedBody
*/
type GetChannelsCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels code unauthorized body
func (o *GetChannelsCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetChannelsReader is a Reader for the GetChannels structure.
type GetChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChannelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChannelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetChannelsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChannelsOK creates a GetChannelsOK with default headers values
func NewGetChannelsOK() *GetChannelsOK {
	return &GetChannelsOK{}
}

/*GetChannelsOK handles this case with default header values.

Return channels paginated
*/
type GetChannelsOK struct {
	Payload *GetChannelsOKBody
}

func (o *GetChannelsOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels][%d] getChannelsOK  %+v", 200, o.Payload)
}

func (o *GetChannelsOK) GetPayload() *GetChannelsOKBody {
	return o.Payload
}

func (o *GetChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsUnauthorized creates a GetChannelsUnauthorized with default headers values
func NewGetChannelsUnauthorized() *GetChannelsUnauthorized {
	return &GetChannelsUnauthorized{}
}

/*GetChannelsUnauthorized handles this case with default header values.

Authentication required
*/
type GetChannelsUnauthorized struct {
	Payload *GetChannelsUnauthorizedBody
}

func (o *GetChannelsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels][%d] getChannelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChannelsUnauthorized) GetPayload() *GetChannelsUnauthorizedBody {
	return o.Payload
}

func (o *GetChannelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsForbidden creates a GetChannelsForbidden with default headers values
func NewGetChannelsForbidden() *GetChannelsForbidden {
	return &GetChannelsForbidden{}
}

/*GetChannelsForbidden handles this case with default header values.

Access forbidden
*/
type GetChannelsForbidden struct {
	Payload *GetChannelsForbiddenBody
}

func (o *GetChannelsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels][%d] getChannelsForbidden  %+v", 403, o.Payload)
}

func (o *GetChannelsForbidden) GetPayload() *GetChannelsForbiddenBody {
	return o.Payload
}

func (o *GetChannelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelsNotAcceptable creates a GetChannelsNotAcceptable with default headers values
func NewGetChannelsNotAcceptable() *GetChannelsNotAcceptable {
	return &GetChannelsNotAcceptable{}
}

/*GetChannelsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetChannelsNotAcceptable struct {
	Payload *GetChannelsNotAcceptableBody
}

func (o *GetChannelsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/channels][%d] getChannelsNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetChannelsNotAcceptable) GetPayload() *GetChannelsNotAcceptableBody {
	return o.Payload
}

func (o *GetChannelsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetChannelsNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetChannelsForbiddenBody get channels forbidden body
swagger:model GetChannelsForbiddenBody
*/
type GetChannelsForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels forbidden body
func (o *GetChannelsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsNotAcceptableBody get channels not acceptable body
swagger:model GetChannelsNotAcceptableBody
*/
type GetChannelsNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels not acceptable body
func (o *GetChannelsNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBody Channels
swagger:model GetChannelsOKBody
*/
type GetChannelsOKBody struct {

	// links
	Links *GetChannelsOKBodyGetChannelsOKBodyAO0Links `json:"_links,omitempty"`

	// Current page number
	CurrentPage int64 `json:"current_page,omitempty"`

	// embedded
	Embedded *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetChannelsOKBody) UnmarshalJSON(raw []byte) error {
	// GetChannelsOKBodyAO0
	var dataGetChannelsOKBodyAO0 struct {
		Links *GetChannelsOKBodyGetChannelsOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetChannelsOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetChannelsOKBodyAO0.Links

	o.CurrentPage = dataGetChannelsOKBodyAO0.CurrentPage

	// GetChannelsOKBodyAO1
	var dataGetChannelsOKBodyAO1 struct {
		Embedded *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetChannelsOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataGetChannelsOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetChannelsOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetChannelsOKBodyAO0 struct {
		Links *GetChannelsOKBodyGetChannelsOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}

	dataGetChannelsOKBodyAO0.Links = o.Links

	dataGetChannelsOKBodyAO0.CurrentPage = o.CurrentPage

	jsonDataGetChannelsOKBodyAO0, errGetChannelsOKBodyAO0 := swag.WriteJSON(dataGetChannelsOKBodyAO0)
	if errGetChannelsOKBodyAO0 != nil {
		return nil, errGetChannelsOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetChannelsOKBodyAO0)
	var dataGetChannelsOKBodyAO1 struct {
		Embedded *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataGetChannelsOKBodyAO1.Embedded = o.Embedded

	jsonDataGetChannelsOKBodyAO1, errGetChannelsOKBodyAO1 := swag.WriteJSON(dataGetChannelsOKBodyAO1)
	if errGetChannelsOKBodyAO1 != nil {
		return nil, errGetChannelsOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetChannelsOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get channels o k body
func (o *GetChannelsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO0Links get channels o k body get channels o k body a o0 links
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO0Links
*/
type GetChannelsOKBodyGetChannelsOKBodyAO0Links struct {

	// first
	First *GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext `json:"next,omitempty"`

	// previous
	Previous *GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious `json:"previous,omitempty"`

	// self
	Self *GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o0 links
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrevious(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) validatePrevious(formats strfmt.Registry) error {

	if swag.IsZero(o.Previous) { // not required
		return nil
	}

	if o.Previous != nil {
		if err := o.Previous.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_links" + "." + "previous")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getChannelsOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst get channels o k body get channels o k body a o0 links first
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst
*/
type GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o0 links first
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext get channels o k body get channels o k body a o0 links next
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext
*/
type GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o0 links next
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious get channels o k body get channels o k body a o0 links previous
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious
*/
type GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious struct {

	// URI of the previous page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o0 links previous
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO0LinksPrevious
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf get channels o k body get channels o k body a o0 links self
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf
*/
type GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o0 links self
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1Embedded get channels o k body get channels o k body a o1 embedded
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1Embedded
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1Embedded struct {

	// items
	Items []*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0 `json:"items"`
}

// Validate validates this get channels o k body get channels o k body a o1 embedded
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getChannelsOK" + "." + "_embedded" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0 get channels o k body get channels o k body a o1 embedded items items0
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// Code of the category tree linked to the channel
	// Required: true
	CategoryTree *string `json:"category_tree"`

	// Channel code
	// Required: true
	Code *string `json:"code"`

	// conversion units
	ConversionUnits *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits `json:"conversion_units,omitempty"`

	// Codes of activated currencies for the channel
	// Required: true
	Currencies []string `json:"currencies"`

	// labels
	Labels *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

	// Codes of activated locales for the channel
	// Required: true
	Locales []string `json:"locales"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		CategoryTree *string `json:"category_tree"`

		Code *string `json:"code"`

		ConversionUnits *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits `json:"conversion_units,omitempty"`

		Currencies []string `json:"currencies"`

		Labels *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		Locales []string `json:"locales"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.CategoryTree = dataAO1.CategoryTree

	o.Code = dataAO1.Code

	o.ConversionUnits = dataAO1.ConversionUnits

	o.Currencies = dataAO1.Currencies

	o.Labels = dataAO1.Labels

	o.Locales = dataAO1.Locales

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		CategoryTree *string `json:"category_tree"`

		Code *string `json:"code"`

		ConversionUnits *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits `json:"conversion_units,omitempty"`

		Currencies []string `json:"currencies"`

		Labels *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels `json:"labels,omitempty"`

		Locales []string `json:"locales"`
	}

	dataAO1.CategoryTree = o.CategoryTree

	dataAO1.Code = o.Code

	dataAO1.ConversionUnits = o.ConversionUnits

	dataAO1.Currencies = o.Currencies

	dataAO1.Labels = o.Labels

	dataAO1.Locales = o.Locales

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get channels o k body get channels o k body a o1 embedded items items0
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCategoryTree(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConversionUnits(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCurrencies(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocales(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateCategoryTree(formats strfmt.Registry) error {

	if err := validate.Required("category_tree", "body", o.CategoryTree); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateConversionUnits(formats strfmt.Registry) error {

	if swag.IsZero(o.ConversionUnits) { // not required
		return nil
	}

	if o.ConversionUnits != nil {
		if err := o.ConversionUnits.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("conversion_units")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateCurrencies(formats strfmt.Registry) error {

	if err := validate.Required("currencies", "body", o.Currencies); err != nil {
		return err
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) validateLocales(formats strfmt.Registry) error {

	if err := validate.Required("locales", "body", o.Locales); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links get channels o k body get channels o k body a o1 embedded items items0 a o0 links
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o1 embedded items items0 a o0 links
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf get channels o k body get channels o k body a o1 embedded items items0 a o0 links self
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o1 embedded items items0 a o0 links self
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits Units to which the given metric attributes should be converted when exporting products
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits struct {

	// Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel
	AttributeCode string `json:"attributeCode,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o1 embedded items items0 a o1 conversion units
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1ConversionUnits
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels Channel labels for each locale
swagger:model GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels
*/
type GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels struct {

	// Channel label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get channels o k body get channels o k body a o1 embedded items items0 a o1 labels
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels) UnmarshalBinary(b []byte) error {
	var res GetChannelsOKBodyGetChannelsOKBodyAO1EmbeddedItemsItems0AO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetChannelsUnauthorizedBody get channels unauthorized body
swagger:model GetChannelsUnauthorizedBody
*/
type GetChannelsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get channels unauthorized body
func (o *GetChannelsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetChannelsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetChannelsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetChannelsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

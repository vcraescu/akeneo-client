// Code generated by go-swagger; DO NOT EDIT.

package family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchFamiliesCodeReader is a Reader for the PatchFamiliesCode structure.
type PatchFamiliesCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchFamiliesCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchFamiliesCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchFamiliesCodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchFamiliesCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchFamiliesCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchFamiliesCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchFamiliesCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchFamiliesCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchFamiliesCodeCreated creates a PatchFamiliesCodeCreated with default headers values
func NewPatchFamiliesCodeCreated() *PatchFamiliesCodeCreated {
	return &PatchFamiliesCodeCreated{}
}

/*PatchFamiliesCodeCreated handles this case with default header values.

Created
*/
type PatchFamiliesCodeCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PatchFamiliesCodeCreated) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeCreated ", 201)
}

func (o *PatchFamiliesCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchFamiliesCodeNoContent creates a PatchFamiliesCodeNoContent with default headers values
func NewPatchFamiliesCodeNoContent() *PatchFamiliesCodeNoContent {
	return &PatchFamiliesCodeNoContent{}
}

/*PatchFamiliesCodeNoContent handles this case with default header values.

No content to return
*/
type PatchFamiliesCodeNoContent struct {
	/*URI of the updated resource
	 */
	Location string
}

func (o *PatchFamiliesCodeNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeNoContent ", 204)
}

func (o *PatchFamiliesCodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchFamiliesCodeBadRequest creates a PatchFamiliesCodeBadRequest with default headers values
func NewPatchFamiliesCodeBadRequest() *PatchFamiliesCodeBadRequest {
	return &PatchFamiliesCodeBadRequest{}
}

/*PatchFamiliesCodeBadRequest handles this case with default header values.

Bad request
*/
type PatchFamiliesCodeBadRequest struct {
	Payload *PatchFamiliesCodeBadRequestBody
}

func (o *PatchFamiliesCodeBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeBadRequest  %+v", 400, o.Payload)
}

func (o *PatchFamiliesCodeBadRequest) GetPayload() *PatchFamiliesCodeBadRequestBody {
	return o.Payload
}

func (o *PatchFamiliesCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchFamiliesCodeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFamiliesCodeUnauthorized creates a PatchFamiliesCodeUnauthorized with default headers values
func NewPatchFamiliesCodeUnauthorized() *PatchFamiliesCodeUnauthorized {
	return &PatchFamiliesCodeUnauthorized{}
}

/*PatchFamiliesCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PatchFamiliesCodeUnauthorized struct {
	Payload *PatchFamiliesCodeUnauthorizedBody
}

func (o *PatchFamiliesCodeUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchFamiliesCodeUnauthorized) GetPayload() *PatchFamiliesCodeUnauthorizedBody {
	return o.Payload
}

func (o *PatchFamiliesCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchFamiliesCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFamiliesCodeForbidden creates a PatchFamiliesCodeForbidden with default headers values
func NewPatchFamiliesCodeForbidden() *PatchFamiliesCodeForbidden {
	return &PatchFamiliesCodeForbidden{}
}

/*PatchFamiliesCodeForbidden handles this case with default header values.

Access forbidden
*/
type PatchFamiliesCodeForbidden struct {
	Payload *PatchFamiliesCodeForbiddenBody
}

func (o *PatchFamiliesCodeForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeForbidden  %+v", 403, o.Payload)
}

func (o *PatchFamiliesCodeForbidden) GetPayload() *PatchFamiliesCodeForbiddenBody {
	return o.Payload
}

func (o *PatchFamiliesCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchFamiliesCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFamiliesCodeUnsupportedMediaType creates a PatchFamiliesCodeUnsupportedMediaType with default headers values
func NewPatchFamiliesCodeUnsupportedMediaType() *PatchFamiliesCodeUnsupportedMediaType {
	return &PatchFamiliesCodeUnsupportedMediaType{}
}

/*PatchFamiliesCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchFamiliesCodeUnsupportedMediaType struct {
	Payload *PatchFamiliesCodeUnsupportedMediaTypeBody
}

func (o *PatchFamiliesCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchFamiliesCodeUnsupportedMediaType) GetPayload() *PatchFamiliesCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchFamiliesCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchFamiliesCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFamiliesCodeUnprocessableEntity creates a PatchFamiliesCodeUnprocessableEntity with default headers values
func NewPatchFamiliesCodeUnprocessableEntity() *PatchFamiliesCodeUnprocessableEntity {
	return &PatchFamiliesCodeUnprocessableEntity{}
}

/*PatchFamiliesCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PatchFamiliesCodeUnprocessableEntity struct {
	Payload *PatchFamiliesCodeUnprocessableEntityBody
}

func (o *PatchFamiliesCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/families/{code}][%d] patchFamiliesCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchFamiliesCodeUnprocessableEntity) GetPayload() *PatchFamiliesCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PatchFamiliesCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchFamiliesCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchFamiliesCodeBadRequestBody patch families code bad request body
swagger:model PatchFamiliesCodeBadRequestBody
*/
type PatchFamiliesCodeBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch families code bad request body
func (o *PatchFamiliesCodeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeBody patch families code body
swagger:model PatchFamiliesCodeBody
*/
type PatchFamiliesCodeBody struct {

	// Attribute code used as the main picture in the user interface (only since v2.0)
	AttributeAsImage *string `json:"attribute_as_image,omitempty"`

	// Attribute code used as label
	// Required: true
	AttributeAsLabel *string `json:"attribute_as_label"`

	// attribute requirements
	AttributeRequirements *PatchFamiliesCodeParamsBodyAttributeRequirements `json:"attribute_requirements,omitempty"`

	// Attributes codes that compose the family
	Attributes []string `json:"attributes"`

	// Family code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *PatchFamiliesCodeParamsBodyLabels `json:"labels,omitempty"`
}

// Validate validates this patch families code body
func (o *PatchFamiliesCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeAsLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAttributeRequirements(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchFamiliesCodeBody) validateAttributeAsLabel(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"attribute_as_label", "body", o.AttributeAsLabel); err != nil {
		return err
	}

	return nil
}

func (o *PatchFamiliesCodeBody) validateAttributeRequirements(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeRequirements) { // not required
		return nil
	}

	if o.AttributeRequirements != nil {
		if err := o.AttributeRequirements.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "attribute_requirements")
			}
			return err
		}
	}

	return nil
}

func (o *PatchFamiliesCodeBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchFamiliesCodeBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeForbiddenBody patch families code forbidden body
swagger:model PatchFamiliesCodeForbiddenBody
*/
type PatchFamiliesCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch families code forbidden body
func (o *PatchFamiliesCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeParamsBodyAttributeRequirements Attributes codes of the family that are required for the completeness calculation for each channel
swagger:model PatchFamiliesCodeParamsBodyAttributeRequirements
*/
type PatchFamiliesCodeParamsBodyAttributeRequirements struct {

	// channel code
	ChannelCode []string `json:"channelCode"`
}

// Validate validates this patch families code params body attribute requirements
func (o *PatchFamiliesCodeParamsBodyAttributeRequirements) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeParamsBodyAttributeRequirements) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeParamsBodyAttributeRequirements) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeParamsBodyAttributeRequirements
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeParamsBodyLabels Family labels for each locale
swagger:model PatchFamiliesCodeParamsBodyLabels
*/
type PatchFamiliesCodeParamsBodyLabels struct {

	// Family label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this patch families code params body labels
func (o *PatchFamiliesCodeParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeUnauthorizedBody patch families code unauthorized body
swagger:model PatchFamiliesCodeUnauthorizedBody
*/
type PatchFamiliesCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch families code unauthorized body
func (o *PatchFamiliesCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeUnprocessableEntityBody patch families code unprocessable entity body
swagger:model PatchFamiliesCodeUnprocessableEntityBody
*/
type PatchFamiliesCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch families code unprocessable entity body
func (o *PatchFamiliesCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchFamiliesCodeUnsupportedMediaTypeBody patch families code unsupported media type body
swagger:model PatchFamiliesCodeUnsupportedMediaTypeBody
*/
type PatchFamiliesCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch families code unsupported media type body
func (o *PatchFamiliesCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchFamiliesCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchFamiliesCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchFamiliesCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

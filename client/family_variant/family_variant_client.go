// Code generated by go-swagger; DO NOT EDIT.

package family_variant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new family variant API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for family variant API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetFamiliesFamilyCodeVariants(params *GetFamiliesFamilyCodeVariantsParams) (*GetFamiliesFamilyCodeVariantsOK, error)

	GetFamiliesFamilyCodeVariantsCode(params *GetFamiliesFamilyCodeVariantsCodeParams) (*GetFamiliesFamilyCodeVariantsCodeOK, error)

	PatchFamiliesFamilyCodeVariants(params *PatchFamiliesFamilyCodeVariantsParams) (*PatchFamiliesFamilyCodeVariantsOK, error)

	PatchFamiliesFamilyCodeVariantsCode(params *PatchFamiliesFamilyCodeVariantsCodeParams) (*PatchFamiliesFamilyCodeVariantsCodeCreated, *PatchFamiliesFamilyCodeVariantsCodeNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetFamiliesFamilyCodeVariants gets list of family variants

  This endpoint allows you to get a list of family variants. Family variants are paginated and sorted by code.
*/
func (a *Client) GetFamiliesFamilyCodeVariants(params *GetFamiliesFamilyCodeVariantsParams) (*GetFamiliesFamilyCodeVariantsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFamiliesFamilyCodeVariantsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_families__family_code__variants",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/families/{family_code}/variants",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetFamiliesFamilyCodeVariantsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFamiliesFamilyCodeVariantsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_families__family_code__variants: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFamiliesFamilyCodeVariantsCode gets a family variant

  This endpoint allows you to get the information about a given family variant.
*/
func (a *Client) GetFamiliesFamilyCodeVariantsCode(params *GetFamiliesFamilyCodeVariantsCodeParams) (*GetFamiliesFamilyCodeVariantsCodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFamiliesFamilyCodeVariantsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_families__family_code__variants__code__",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/families/{family_code}/variants/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetFamiliesFamilyCodeVariantsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFamiliesFamilyCodeVariantsCodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_families__family_code__variants__code__: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchFamiliesFamilyCodeVariants updates create several family variants

  This endpoint allows you to update and/or create several family variants at once, for a given family.
*/
func (a *Client) PatchFamiliesFamilyCodeVariants(params *PatchFamiliesFamilyCodeVariantsParams) (*PatchFamiliesFamilyCodeVariantsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchFamiliesFamilyCodeVariantsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_families__family_code__variants",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/families/{family_code}/variants",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchFamiliesFamilyCodeVariantsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchFamiliesFamilyCodeVariantsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patch_families__family_code__variants: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchFamiliesFamilyCodeVariantsCode updates create a family variant

  This endpoint allows you to update a given family variant. Know more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no family variant exists for the given code, it creates it.
*/
func (a *Client) PatchFamiliesFamilyCodeVariantsCode(params *PatchFamiliesFamilyCodeVariantsCodeParams) (*PatchFamiliesFamilyCodeVariantsCodeCreated, *PatchFamiliesFamilyCodeVariantsCodeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchFamiliesFamilyCodeVariantsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_families__family_code__variants__code__",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/families/{family_code}/variants/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchFamiliesFamilyCodeVariantsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PatchFamiliesFamilyCodeVariantsCodeCreated:
		return value, nil, nil
	case *PatchFamiliesFamilyCodeVariantsCodeNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for family_variant: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

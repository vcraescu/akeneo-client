// Code generated by go-swagger; DO NOT EDIT.

package measurement_family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MeasurementFamiliesGetListReader is a Reader for the MeasurementFamiliesGetList structure.
type MeasurementFamiliesGetListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MeasurementFamiliesGetListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMeasurementFamiliesGetListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMeasurementFamiliesGetListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewMeasurementFamiliesGetListNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMeasurementFamiliesGetListOK creates a MeasurementFamiliesGetListOK with default headers values
func NewMeasurementFamiliesGetListOK() *MeasurementFamiliesGetListOK {
	return &MeasurementFamiliesGetListOK{}
}

/*MeasurementFamiliesGetListOK handles this case with default header values.

Return the measurement families
*/
type MeasurementFamiliesGetListOK struct {
	Payload *MeasurementFamiliesGetListOKBody
}

func (o *MeasurementFamiliesGetListOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/measurement-families][%d] measurementFamiliesGetListOK  %+v", 200, o.Payload)
}

func (o *MeasurementFamiliesGetListOK) GetPayload() *MeasurementFamiliesGetListOKBody {
	return o.Payload
}

func (o *MeasurementFamiliesGetListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MeasurementFamiliesGetListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMeasurementFamiliesGetListUnauthorized creates a MeasurementFamiliesGetListUnauthorized with default headers values
func NewMeasurementFamiliesGetListUnauthorized() *MeasurementFamiliesGetListUnauthorized {
	return &MeasurementFamiliesGetListUnauthorized{}
}

/*MeasurementFamiliesGetListUnauthorized handles this case with default header values.

Authentication required
*/
type MeasurementFamiliesGetListUnauthorized struct {
	Payload *MeasurementFamiliesGetListUnauthorizedBody
}

func (o *MeasurementFamiliesGetListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/measurement-families][%d] measurementFamiliesGetListUnauthorized  %+v", 401, o.Payload)
}

func (o *MeasurementFamiliesGetListUnauthorized) GetPayload() *MeasurementFamiliesGetListUnauthorizedBody {
	return o.Payload
}

func (o *MeasurementFamiliesGetListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MeasurementFamiliesGetListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMeasurementFamiliesGetListNotAcceptable creates a MeasurementFamiliesGetListNotAcceptable with default headers values
func NewMeasurementFamiliesGetListNotAcceptable() *MeasurementFamiliesGetListNotAcceptable {
	return &MeasurementFamiliesGetListNotAcceptable{}
}

/*MeasurementFamiliesGetListNotAcceptable handles this case with default header values.

Not Acceptable
*/
type MeasurementFamiliesGetListNotAcceptable struct {
	Payload *MeasurementFamiliesGetListNotAcceptableBody
}

func (o *MeasurementFamiliesGetListNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/measurement-families][%d] measurementFamiliesGetListNotAcceptable  %+v", 406, o.Payload)
}

func (o *MeasurementFamiliesGetListNotAcceptable) GetPayload() *MeasurementFamiliesGetListNotAcceptableBody {
	return o.Payload
}

func (o *MeasurementFamiliesGetListNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MeasurementFamiliesGetListNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*MeasurementFamiliesGetListNotAcceptableBody measurement families get list not acceptable body
swagger:model MeasurementFamiliesGetListNotAcceptableBody
*/
type MeasurementFamiliesGetListNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this measurement families get list not acceptable body
func (o *MeasurementFamiliesGetListNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBody measurement families get list o k body
swagger:model MeasurementFamiliesGetListOKBody
*/
type MeasurementFamiliesGetListOKBody struct {

	// Measurement family code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *MeasurementFamiliesGetListOKBodyLabels `json:"labels,omitempty"`

	// Unit code used as the standard unit for this measurement family
	// Required: true
	StandardUnitCode *string `json:"standard_unit_code"`

	// units
	// Required: true
	Units *MeasurementFamiliesGetListOKBodyUnits `json:"units"`
}

// Validate validates this measurement families get list o k body
func (o *MeasurementFamiliesGetListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStandardUnitCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MeasurementFamiliesGetListOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("measurementFamiliesGetListOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *MeasurementFamiliesGetListOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("measurementFamiliesGetListOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

func (o *MeasurementFamiliesGetListOKBody) validateStandardUnitCode(formats strfmt.Registry) error {

	if err := validate.Required("measurementFamiliesGetListOK"+"."+"standard_unit_code", "body", o.StandardUnitCode); err != nil {
		return err
	}

	return nil
}

func (o *MeasurementFamiliesGetListOKBody) validateUnits(formats strfmt.Registry) error {

	if err := validate.Required("measurementFamiliesGetListOK"+"."+"units", "body", o.Units); err != nil {
		return err
	}

	if o.Units != nil {
		if err := o.Units.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("measurementFamiliesGetListOK" + "." + "units")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBody) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBodyLabels Measurement family labels for each locale
swagger:model MeasurementFamiliesGetListOKBodyLabels
*/
type MeasurementFamiliesGetListOKBodyLabels struct {

	// Measurement family label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this measurement families get list o k body labels
func (o *MeasurementFamiliesGetListOKBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyLabels) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBodyUnits Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
swagger:model MeasurementFamiliesGetListOKBodyUnits
*/
type MeasurementFamiliesGetListOKBodyUnits struct {

	// unit code
	UnitCode *MeasurementFamiliesGetListOKBodyUnitsUnitCode `json:"unitCode,omitempty"`
}

// Validate validates this measurement families get list o k body units
func (o *MeasurementFamiliesGetListOKBodyUnits) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUnitCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MeasurementFamiliesGetListOKBodyUnits) validateUnitCode(formats strfmt.Registry) error {

	if swag.IsZero(o.UnitCode) { // not required
		return nil
	}

	if o.UnitCode != nil {
		if err := o.UnitCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("measurementFamiliesGetListOK" + "." + "units" + "." + "unitCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnits) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnits) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBodyUnits
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBodyUnitsUnitCode measurement families get list o k body units unit code
swagger:model MeasurementFamiliesGetListOKBodyUnitsUnitCode
*/
type MeasurementFamiliesGetListOKBodyUnitsUnitCode struct {

	// Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	Code string `json:"code,omitempty"`

	// Calculation to convert the unit into the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	ConvertFromStandard []*MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0 `json:"convert_from_standard"`

	// labels
	Labels *MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels `json:"labels,omitempty"`

	// Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	Symbol string `json:"symbol,omitempty"`
}

// Validate validates this measurement families get list o k body units unit code
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConvertFromStandard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCode) validateConvertFromStandard(formats strfmt.Registry) error {

	if swag.IsZero(o.ConvertFromStandard) { // not required
		return nil
	}

	for i := 0; i < len(o.ConvertFromStandard); i++ {
		if swag.IsZero(o.ConvertFromStandard[i]) { // not required
			continue
		}

		if o.ConvertFromStandard[i] != nil {
			if err := o.ConvertFromStandard[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("measurementFamiliesGetListOK" + "." + "units" + "." + "unitCode" + "." + "convert_from_standard" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCode) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("measurementFamiliesGetListOK" + "." + "units" + "." + "unitCode" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCode) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBodyUnitsUnitCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0 measurement families get list o k body units unit code convert from standard items0
swagger:model MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0
*/
type MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0 struct {

	// Operator for a conversion operation to convert the unit in the standard unit
	// Enum: [mul div add sub]
	Operator string `json:"operator,omitempty"`

	// Value for a conversion operation to convert the unit in the standard unit
	Value string `json:"value,omitempty"`
}

// Validate validates this measurement families get list o k body units unit code convert from standard items0
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var measurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["mul","div","add","sub"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		measurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum = append(measurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum, v)
	}
}

const (

	// MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorMul captures enum value "mul"
	MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorMul string = "mul"

	// MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorDiv captures enum value "div"
	MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorDiv string = "div"

	// MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorAdd captures enum value "add"
	MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorAdd string = "add"

	// MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorSub captures enum value "sub"
	MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0OperatorSub string = "sub"
)

// prop value enum
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0) validateOperatorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, measurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0) validateOperator(formats strfmt.Registry) error {

	if swag.IsZero(o.Operator) { // not required
		return nil
	}

	// value enum
	if err := o.validateOperatorEnum("operator", "body", o.Operator); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBodyUnitsUnitCodeConvertFromStandardItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
swagger:model MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels
*/
type MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels struct {

	// Unit label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this measurement families get list o k body units unit code labels
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListOKBodyUnitsUnitCodeLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MeasurementFamiliesGetListUnauthorizedBody measurement families get list unauthorized body
swagger:model MeasurementFamiliesGetListUnauthorizedBody
*/
type MeasurementFamiliesGetListUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this measurement families get list unauthorized body
func (o *MeasurementFamiliesGetListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MeasurementFamiliesGetListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MeasurementFamiliesGetListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res MeasurementFamiliesGetListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

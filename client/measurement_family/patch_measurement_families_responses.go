// Code generated by go-swagger; DO NOT EDIT.

package measurement_family

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchMeasurementFamiliesReader is a Reader for the PatchMeasurementFamilies structure.
type PatchMeasurementFamiliesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchMeasurementFamiliesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchMeasurementFamiliesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchMeasurementFamiliesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchMeasurementFamiliesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchMeasurementFamiliesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchMeasurementFamiliesOK creates a PatchMeasurementFamiliesOK with default headers values
func NewPatchMeasurementFamiliesOK() *PatchMeasurementFamiliesOK {
	return &PatchMeasurementFamiliesOK{}
}

/*PatchMeasurementFamiliesOK handles this case with default header values.

OK
*/
type PatchMeasurementFamiliesOK struct {
	Payload []*PatchMeasurementFamiliesOKBodyItems0
}

func (o *PatchMeasurementFamiliesOK) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/measurement-families][%d] patchMeasurementFamiliesOK  %+v", 200, o.Payload)
}

func (o *PatchMeasurementFamiliesOK) GetPayload() []*PatchMeasurementFamiliesOKBodyItems0 {
	return o.Payload
}

func (o *PatchMeasurementFamiliesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMeasurementFamiliesUnauthorized creates a PatchMeasurementFamiliesUnauthorized with default headers values
func NewPatchMeasurementFamiliesUnauthorized() *PatchMeasurementFamiliesUnauthorized {
	return &PatchMeasurementFamiliesUnauthorized{}
}

/*PatchMeasurementFamiliesUnauthorized handles this case with default header values.

Authentication required
*/
type PatchMeasurementFamiliesUnauthorized struct {
	Payload *PatchMeasurementFamiliesUnauthorizedBody
}

func (o *PatchMeasurementFamiliesUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/measurement-families][%d] patchMeasurementFamiliesUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchMeasurementFamiliesUnauthorized) GetPayload() *PatchMeasurementFamiliesUnauthorizedBody {
	return o.Payload
}

func (o *PatchMeasurementFamiliesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchMeasurementFamiliesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMeasurementFamiliesRequestEntityTooLarge creates a PatchMeasurementFamiliesRequestEntityTooLarge with default headers values
func NewPatchMeasurementFamiliesRequestEntityTooLarge() *PatchMeasurementFamiliesRequestEntityTooLarge {
	return &PatchMeasurementFamiliesRequestEntityTooLarge{}
}

/*PatchMeasurementFamiliesRequestEntityTooLarge handles this case with default header values.

Request Entity Too Large
*/
type PatchMeasurementFamiliesRequestEntityTooLarge struct {
	Payload *PatchMeasurementFamiliesRequestEntityTooLargeBody
}

func (o *PatchMeasurementFamiliesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/measurement-families][%d] patchMeasurementFamiliesRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchMeasurementFamiliesRequestEntityTooLarge) GetPayload() *PatchMeasurementFamiliesRequestEntityTooLargeBody {
	return o.Payload
}

func (o *PatchMeasurementFamiliesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchMeasurementFamiliesRequestEntityTooLargeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMeasurementFamiliesUnsupportedMediaType creates a PatchMeasurementFamiliesUnsupportedMediaType with default headers values
func NewPatchMeasurementFamiliesUnsupportedMediaType() *PatchMeasurementFamiliesUnsupportedMediaType {
	return &PatchMeasurementFamiliesUnsupportedMediaType{}
}

/*PatchMeasurementFamiliesUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchMeasurementFamiliesUnsupportedMediaType struct {
	Payload *PatchMeasurementFamiliesUnsupportedMediaTypeBody
}

func (o *PatchMeasurementFamiliesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/measurement-families][%d] patchMeasurementFamiliesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchMeasurementFamiliesUnsupportedMediaType) GetPayload() *PatchMeasurementFamiliesUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchMeasurementFamiliesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchMeasurementFamiliesUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchMeasurementFamiliesOKBodyItems0 patch measurement families o k body items0
swagger:model PatchMeasurementFamiliesOKBodyItems0
*/
type PatchMeasurementFamiliesOKBodyItems0 struct {

	// Resource code
	Code string `json:"code,omitempty"`

	// List of errors
	Errors []*PatchMeasurementFamiliesOKBodyItems0ErrorsItems0 `json:"errors"`

	// Message explaining the error
	Message string `json:"message,omitempty"`

	// HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this patch measurement families o k body items0
func (o *PatchMeasurementFamiliesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchMeasurementFamiliesOKBodyItems0) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesOKBodyItems0ErrorsItems0 patch measurement families o k body items0 errors items0
swagger:model PatchMeasurementFamiliesOKBodyItems0ErrorsItems0
*/
type PatchMeasurementFamiliesOKBodyItems0ErrorsItems0 struct {

	// message
	Message string `json:"message,omitempty"`

	// property
	Property string `json:"property,omitempty"`
}

// Validate validates this patch measurement families o k body items0 errors items0
func (o *PatchMeasurementFamiliesOKBodyItems0ErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesOKBodyItems0ErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesOKBodyItems0ErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesOKBodyItems0ErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0 patch measurement families params body items0
swagger:model PatchMeasurementFamiliesParamsBodyItems0
*/
type PatchMeasurementFamiliesParamsBodyItems0 struct {

	// Measurement family code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *PatchMeasurementFamiliesParamsBodyItems0Labels `json:"labels,omitempty"`

	// Unit code used as the standard unit for this measurement family
	// Required: true
	StandardUnitCode *string `json:"standard_unit_code"`

	// units
	// Required: true
	Units *PatchMeasurementFamiliesParamsBodyItems0Units `json:"units"`
}

// Validate validates this patch measurement families params body items0
func (o *PatchMeasurementFamiliesParamsBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStandardUnitCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0) validateStandardUnitCode(formats strfmt.Registry) error {

	if err := validate.Required("standard_unit_code", "body", o.StandardUnitCode); err != nil {
		return err
	}

	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0) validateUnits(formats strfmt.Registry) error {

	if err := validate.Required("units", "body", o.Units); err != nil {
		return err
	}

	if o.Units != nil {
		if err := o.Units.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("units")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0Labels Measurement family labels for each locale
swagger:model PatchMeasurementFamiliesParamsBodyItems0Labels
*/
type PatchMeasurementFamiliesParamsBodyItems0Labels struct {

	// Measurement family label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this patch measurement families params body items0 labels
func (o *PatchMeasurementFamiliesParamsBodyItems0Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0Labels) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0Units Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
swagger:model PatchMeasurementFamiliesParamsBodyItems0Units
*/
type PatchMeasurementFamiliesParamsBodyItems0Units struct {

	// unit code
	UnitCode *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode `json:"unitCode,omitempty"`
}

// Validate validates this patch measurement families params body items0 units
func (o *PatchMeasurementFamiliesParamsBodyItems0Units) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUnitCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0Units) validateUnitCode(formats strfmt.Registry) error {

	if swag.IsZero(o.UnitCode) { // not required
		return nil
	}

	if o.UnitCode != nil {
		if err := o.UnitCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("units" + "." + "unitCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0Units) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0Units) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0Units
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode patch measurement families params body items0 units unit code
swagger:model PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode
*/
type PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode struct {

	// Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	Code string `json:"code,omitempty"`

	// Calculation to convert the unit into the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	ConvertFromStandard []*PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0 `json:"convert_from_standard"`

	// labels
	Labels *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels `json:"labels,omitempty"`

	// Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
	Symbol string `json:"symbol,omitempty"`
}

// Validate validates this patch measurement families params body items0 units unit code
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConvertFromStandard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode) validateConvertFromStandard(formats strfmt.Registry) error {

	if swag.IsZero(o.ConvertFromStandard) { // not required
		return nil
	}

	for i := 0; i < len(o.ConvertFromStandard); i++ {
		if swag.IsZero(o.ConvertFromStandard[i]) { // not required
			continue
		}

		if o.ConvertFromStandard[i] != nil {
			if err := o.ConvertFromStandard[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("units" + "." + "unitCode" + "." + "convert_from_standard" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("units" + "." + "unitCode" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0 patch measurement families params body items0 units unit code convert from standard items0
swagger:model PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0
*/
type PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0 struct {

	// Operator for a conversion operation to convert the unit in the standard unit
	// Enum: [mul div add sub]
	Operator string `json:"operator,omitempty"`

	// Value for a conversion operation to convert the unit in the standard unit
	Value string `json:"value,omitempty"`
}

// Validate validates this patch measurement families params body items0 units unit code convert from standard items0
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["mul","div","add","sub"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum = append(patchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum, v)
	}
}

const (

	// PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorMul captures enum value "mul"
	PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorMul string = "mul"

	// PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorDiv captures enum value "div"
	PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorDiv string = "div"

	// PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorAdd captures enum value "add"
	PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorAdd string = "add"

	// PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorSub captures enum value "sub"
	PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0OperatorSub string = "sub"
)

// prop value enum
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0) validateOperatorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0TypeOperatorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0) validateOperator(formats strfmt.Registry) error {

	if swag.IsZero(o.Operator) { // not required
		return nil
	}

	// value enum
	if err := o.validateOperatorEnum("operator", "body", o.Operator); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeConvertFromStandardItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.
swagger:model PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels
*/
type PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels struct {

	// Unit label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this patch measurement families params body items0 units unit code labels
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesParamsBodyItems0UnitsUnitCodeLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesRequestEntityTooLargeBody patch measurement families request entity too large body
swagger:model PatchMeasurementFamiliesRequestEntityTooLargeBody
*/
type PatchMeasurementFamiliesRequestEntityTooLargeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch measurement families request entity too large body
func (o *PatchMeasurementFamiliesRequestEntityTooLargeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesRequestEntityTooLargeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesRequestEntityTooLargeBody) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesRequestEntityTooLargeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesUnauthorizedBody patch measurement families unauthorized body
swagger:model PatchMeasurementFamiliesUnauthorizedBody
*/
type PatchMeasurementFamiliesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch measurement families unauthorized body
func (o *PatchMeasurementFamiliesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchMeasurementFamiliesUnsupportedMediaTypeBody patch measurement families unsupported media type body
swagger:model PatchMeasurementFamiliesUnsupportedMediaTypeBody
*/
type PatchMeasurementFamiliesUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch measurement families unsupported media type body
func (o *PatchMeasurementFamiliesUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchMeasurementFamiliesUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchMeasurementFamiliesUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchMeasurementFamiliesUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

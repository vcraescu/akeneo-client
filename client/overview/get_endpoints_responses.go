// Code generated by go-swagger; DO NOT EDIT.

package overview

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetEndpointsReader is a Reader for the GetEndpoints structure.
type GetEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 406:
		result := NewGetEndpointsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEndpointsOK creates a GetEndpointsOK with default headers values
func NewGetEndpointsOK() *GetEndpointsOK {
	return &GetEndpointsOK{}
}

/*GetEndpointsOK handles this case with default header values.

Return the list of all available endpoints
*/
type GetEndpointsOK struct {
	Payload *GetEndpointsOKBody
}

func (o *GetEndpointsOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1][%d] getEndpointsOK  %+v", 200, o.Payload)
}

func (o *GetEndpointsOK) GetPayload() *GetEndpointsOKBody {
	return o.Payload
}

func (o *GetEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetEndpointsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointsNotAcceptable creates a GetEndpointsNotAcceptable with default headers values
func NewGetEndpointsNotAcceptable() *GetEndpointsNotAcceptable {
	return &GetEndpointsNotAcceptable{}
}

/*GetEndpointsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetEndpointsNotAcceptable struct {
	Payload *GetEndpointsNotAcceptableBody
}

func (o *GetEndpointsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1][%d] getEndpointsNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetEndpointsNotAcceptable) GetPayload() *GetEndpointsNotAcceptableBody {
	return o.Payload
}

func (o *GetEndpointsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetEndpointsNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetEndpointsNotAcceptableBody get endpoints not acceptable body
swagger:model GetEndpointsNotAcceptableBody
*/
type GetEndpointsNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get endpoints not acceptable body
func (o *GetEndpointsNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetEndpointsNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetEndpointsNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetEndpointsNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetEndpointsOKBody get endpoints o k body
swagger:model GetEndpointsOKBody
*/
type GetEndpointsOKBody struct {

	// Endpoint to get the authentication token
	Authentication interface{} `json:"authentication,omitempty"`

	// Host name
	Host string `json:"host,omitempty"`

	// All the availables endpoints
	Routes interface{} `json:"routes,omitempty"`
}

// Validate validates this get endpoints o k body
func (o *GetEndpointsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetEndpointsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetEndpointsOKBody) UnmarshalBinary(b []byte) error {
	var res GetEndpointsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

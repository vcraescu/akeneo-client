// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchPamAssetsReader is a Reader for the PatchPamAssets structure.
type PatchPamAssetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchPamAssetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchPamAssetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchPamAssetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchPamAssetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchPamAssetsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchPamAssetsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchPamAssetsOK creates a PatchPamAssetsOK with default headers values
func NewPatchPamAssetsOK() *PatchPamAssetsOK {
	return &PatchPamAssetsOK{}
}

/*PatchPamAssetsOK handles this case with default header values.

OK
*/
type PatchPamAssetsOK struct {
	Payload *PatchPamAssetsOKBody
}

func (o *PatchPamAssetsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/assets][%d] patchPamAssetsOK  %+v", 200, o.Payload)
}

func (o *PatchPamAssetsOK) GetPayload() *PatchPamAssetsOKBody {
	return o.Payload
}

func (o *PatchPamAssetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchPamAssetsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPamAssetsUnauthorized creates a PatchPamAssetsUnauthorized with default headers values
func NewPatchPamAssetsUnauthorized() *PatchPamAssetsUnauthorized {
	return &PatchPamAssetsUnauthorized{}
}

/*PatchPamAssetsUnauthorized handles this case with default header values.

Authentication required
*/
type PatchPamAssetsUnauthorized struct {
	Payload *PatchPamAssetsUnauthorizedBody
}

func (o *PatchPamAssetsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/assets][%d] patchPamAssetsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchPamAssetsUnauthorized) GetPayload() *PatchPamAssetsUnauthorizedBody {
	return o.Payload
}

func (o *PatchPamAssetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchPamAssetsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPamAssetsForbidden creates a PatchPamAssetsForbidden with default headers values
func NewPatchPamAssetsForbidden() *PatchPamAssetsForbidden {
	return &PatchPamAssetsForbidden{}
}

/*PatchPamAssetsForbidden handles this case with default header values.

Access forbidden
*/
type PatchPamAssetsForbidden struct {
	Payload *PatchPamAssetsForbiddenBody
}

func (o *PatchPamAssetsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/assets][%d] patchPamAssetsForbidden  %+v", 403, o.Payload)
}

func (o *PatchPamAssetsForbidden) GetPayload() *PatchPamAssetsForbiddenBody {
	return o.Payload
}

func (o *PatchPamAssetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchPamAssetsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPamAssetsRequestEntityTooLarge creates a PatchPamAssetsRequestEntityTooLarge with default headers values
func NewPatchPamAssetsRequestEntityTooLarge() *PatchPamAssetsRequestEntityTooLarge {
	return &PatchPamAssetsRequestEntityTooLarge{}
}

/*PatchPamAssetsRequestEntityTooLarge handles this case with default header values.

Request Entity Too Large
*/
type PatchPamAssetsRequestEntityTooLarge struct {
	Payload *PatchPamAssetsRequestEntityTooLargeBody
}

func (o *PatchPamAssetsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/assets][%d] patchPamAssetsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchPamAssetsRequestEntityTooLarge) GetPayload() *PatchPamAssetsRequestEntityTooLargeBody {
	return o.Payload
}

func (o *PatchPamAssetsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchPamAssetsRequestEntityTooLargeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPamAssetsUnsupportedMediaType creates a PatchPamAssetsUnsupportedMediaType with default headers values
func NewPatchPamAssetsUnsupportedMediaType() *PatchPamAssetsUnsupportedMediaType {
	return &PatchPamAssetsUnsupportedMediaType{}
}

/*PatchPamAssetsUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchPamAssetsUnsupportedMediaType struct {
	Payload *PatchPamAssetsUnsupportedMediaTypeBody
}

func (o *PatchPamAssetsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/assets][%d] patchPamAssetsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchPamAssetsUnsupportedMediaType) GetPayload() *PatchPamAssetsUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchPamAssetsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchPamAssetsUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchPamAssetsBody patch pam assets body
swagger:model PatchPamAssetsBody
*/
type PatchPamAssetsBody struct {

	// Codes of the PAM asset categories in which the asset is classified
	Categories []string `json:"categories"`

	// PAM asset code
	// Required: true
	Code *string `json:"code"`

	// Description of the PAM asset
	Description string `json:"description,omitempty"`

	// Date on which the PAM asset expire
	EndOfUse string `json:"end_of_use,omitempty"`

	// Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale
	Localizable *bool `json:"localizable,omitempty"`

	// Reference files of the PAM asset
	ReferenceFiles []*PatchPamAssetsParamsBodyReferenceFilesItems0 `json:"reference_files"`

	// Tags of the PAM asset
	Tags []string `json:"tags"`

	// Variations of the PAM asset
	VariationFiles []*PatchPamAssetsParamsBodyVariationFilesItems0 `json:"variation_files"`
}

// Validate validates this patch pam assets body
func (o *PatchPamAssetsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReferenceFiles(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVariationFiles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchPamAssetsBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchPamAssetsBody) validateReferenceFiles(formats strfmt.Registry) error {

	if swag.IsZero(o.ReferenceFiles) { // not required
		return nil
	}

	for i := 0; i < len(o.ReferenceFiles); i++ {
		if swag.IsZero(o.ReferenceFiles[i]) { // not required
			continue
		}

		if o.ReferenceFiles[i] != nil {
			if err := o.ReferenceFiles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "reference_files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PatchPamAssetsBody) validateVariationFiles(formats strfmt.Registry) error {

	if swag.IsZero(o.VariationFiles) { // not required
		return nil
	}

	for i := 0; i < len(o.VariationFiles); i++ {
		if swag.IsZero(o.VariationFiles[i]) { // not required
			continue
		}

		if o.VariationFiles[i] != nil {
			if err := o.VariationFiles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "variation_files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsForbiddenBody patch pam assets forbidden body
swagger:model PatchPamAssetsForbiddenBody
*/
type PatchPamAssetsForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch pam assets forbidden body
func (o *PatchPamAssetsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsOKBody patch pam assets o k body
swagger:model PatchPamAssetsOKBody
*/
type PatchPamAssetsOKBody struct {

	// Resource code, only filled when the resource is not a product
	Code string `json:"code,omitempty"`

	// Resource identifier, only filled when the resource is a product
	Identifier string `json:"identifier,omitempty"`

	// Line number
	Line int64 `json:"line,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`

	// HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this patch pam assets o k body
func (o *PatchPamAssetsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsOKBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyReferenceFilesItems0 patch pam assets params body reference files items0
swagger:model PatchPamAssetsParamsBodyReferenceFilesItems0
*/
type PatchPamAssetsParamsBodyReferenceFilesItems0 struct {

	// link
	Link *PatchPamAssetsParamsBodyReferenceFilesItems0Link `json:"_link,omitempty"`

	// Code of the reference file
	Code string `json:"code,omitempty"`

	// Locale code of the reference file
	Locale string `json:"locale,omitempty"`
}

// Validate validates this patch pam assets params body reference files items0
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchPamAssetsParamsBodyReferenceFilesItems0) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(o.Link) { // not required
		return nil
	}

	if o.Link != nil {
		if err := o.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyReferenceFilesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyReferenceFilesItems0Link Links to get and download the reference file
swagger:model PatchPamAssetsParamsBodyReferenceFilesItems0Link
*/
type PatchPamAssetsParamsBodyReferenceFilesItems0Link struct {

	// download
	Download *PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload `json:"download,omitempty"`

	// self
	Self *PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf `json:"self,omitempty"`
}

// Validate validates this patch pam assets params body reference files items0 link
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0Link) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchPamAssetsParamsBodyReferenceFilesItems0Link) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(o.Download) { // not required
		return nil
	}

	if o.Download != nil {
		if err := o.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

func (o *PatchPamAssetsParamsBodyReferenceFilesItems0Link) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0Link) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0Link) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyReferenceFilesItems0Link
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload patch pam assets params body reference files items0 link download
swagger:model PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload
*/
type PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload struct {

	// URI to download the reference file
	Href string `json:"href,omitempty"`
}

// Validate validates this patch pam assets params body reference files items0 link download
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyReferenceFilesItems0LinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf patch pam assets params body reference files items0 link self
swagger:model PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf
*/
type PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf struct {

	// URI of the reference file entity
	Href string `json:"href,omitempty"`
}

// Validate validates this patch pam assets params body reference files items0 link self
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyReferenceFilesItems0LinkSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyVariationFilesItems0 patch pam assets params body variation files items0
swagger:model PatchPamAssetsParamsBodyVariationFilesItems0
*/
type PatchPamAssetsParamsBodyVariationFilesItems0 struct {

	// link
	Link *PatchPamAssetsParamsBodyVariationFilesItems0Link `json:"_link,omitempty"`

	// Code of the variation
	Code string `json:"code,omitempty"`

	// Locale code of the variation
	Locale string `json:"locale,omitempty"`

	// Channel code of the variation
	Scope string `json:"scope,omitempty"`
}

// Validate validates this patch pam assets params body variation files items0
func (o *PatchPamAssetsParamsBodyVariationFilesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchPamAssetsParamsBodyVariationFilesItems0) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(o.Link) { // not required
		return nil
	}

	if o.Link != nil {
		if err := o.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyVariationFilesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyVariationFilesItems0Link Links to get and download the variation file
swagger:model PatchPamAssetsParamsBodyVariationFilesItems0Link
*/
type PatchPamAssetsParamsBodyVariationFilesItems0Link struct {

	// download
	Download *PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload `json:"download,omitempty"`

	// self
	Self *PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf `json:"self,omitempty"`
}

// Validate validates this patch pam assets params body variation files items0 link
func (o *PatchPamAssetsParamsBodyVariationFilesItems0Link) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchPamAssetsParamsBodyVariationFilesItems0Link) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(o.Download) { // not required
		return nil
	}

	if o.Download != nil {
		if err := o.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

func (o *PatchPamAssetsParamsBodyVariationFilesItems0Link) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0Link) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0Link) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyVariationFilesItems0Link
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload patch pam assets params body variation files items0 link download
swagger:model PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload
*/
type PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload struct {

	// URI to download the variation file
	Href string `json:"href,omitempty"`
}

// Validate validates this patch pam assets params body variation files items0 link download
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyVariationFilesItems0LinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf patch pam assets params body variation files items0 link self
swagger:model PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf
*/
type PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf struct {

	// URI of the variation entity
	Href string `json:"href,omitempty"`
}

// Validate validates this patch pam assets params body variation files items0 link self
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsParamsBodyVariationFilesItems0LinkSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsRequestEntityTooLargeBody patch pam assets request entity too large body
swagger:model PatchPamAssetsRequestEntityTooLargeBody
*/
type PatchPamAssetsRequestEntityTooLargeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch pam assets request entity too large body
func (o *PatchPamAssetsRequestEntityTooLargeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsRequestEntityTooLargeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsRequestEntityTooLargeBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsRequestEntityTooLargeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsUnauthorizedBody patch pam assets unauthorized body
swagger:model PatchPamAssetsUnauthorizedBody
*/
type PatchPamAssetsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch pam assets unauthorized body
func (o *PatchPamAssetsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchPamAssetsUnsupportedMediaTypeBody patch pam assets unsupported media type body
swagger:model PatchPamAssetsUnsupportedMediaTypeBody
*/
type PatchPamAssetsUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch pam assets unsupported media type body
func (o *PatchPamAssetsUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchPamAssetsUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchPamAssetsUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchPamAssetsUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

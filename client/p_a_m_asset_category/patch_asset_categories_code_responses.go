// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchAssetCategoriesCodeReader is a Reader for the PatchAssetCategoriesCode structure.
type PatchAssetCategoriesCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAssetCategoriesCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchAssetCategoriesCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchAssetCategoriesCodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAssetCategoriesCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchAssetCategoriesCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAssetCategoriesCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchAssetCategoriesCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchAssetCategoriesCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAssetCategoriesCodeCreated creates a PatchAssetCategoriesCodeCreated with default headers values
func NewPatchAssetCategoriesCodeCreated() *PatchAssetCategoriesCodeCreated {
	return &PatchAssetCategoriesCodeCreated{}
}

/*PatchAssetCategoriesCodeCreated handles this case with default header values.

Created
*/
type PatchAssetCategoriesCodeCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PatchAssetCategoriesCodeCreated) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeCreated ", 201)
}

func (o *PatchAssetCategoriesCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchAssetCategoriesCodeNoContent creates a PatchAssetCategoriesCodeNoContent with default headers values
func NewPatchAssetCategoriesCodeNoContent() *PatchAssetCategoriesCodeNoContent {
	return &PatchAssetCategoriesCodeNoContent{}
}

/*PatchAssetCategoriesCodeNoContent handles this case with default header values.

No content to return
*/
type PatchAssetCategoriesCodeNoContent struct {
	/*URI of the updated resource
	 */
	Location string
}

func (o *PatchAssetCategoriesCodeNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeNoContent ", 204)
}

func (o *PatchAssetCategoriesCodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchAssetCategoriesCodeBadRequest creates a PatchAssetCategoriesCodeBadRequest with default headers values
func NewPatchAssetCategoriesCodeBadRequest() *PatchAssetCategoriesCodeBadRequest {
	return &PatchAssetCategoriesCodeBadRequest{}
}

/*PatchAssetCategoriesCodeBadRequest handles this case with default header values.

Bad request
*/
type PatchAssetCategoriesCodeBadRequest struct {
	Payload *PatchAssetCategoriesCodeBadRequestBody
}

func (o *PatchAssetCategoriesCodeBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAssetCategoriesCodeBadRequest) GetPayload() *PatchAssetCategoriesCodeBadRequestBody {
	return o.Payload
}

func (o *PatchAssetCategoriesCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCategoriesCodeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCategoriesCodeUnauthorized creates a PatchAssetCategoriesCodeUnauthorized with default headers values
func NewPatchAssetCategoriesCodeUnauthorized() *PatchAssetCategoriesCodeUnauthorized {
	return &PatchAssetCategoriesCodeUnauthorized{}
}

/*PatchAssetCategoriesCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PatchAssetCategoriesCodeUnauthorized struct {
	Payload *PatchAssetCategoriesCodeUnauthorizedBody
}

func (o *PatchAssetCategoriesCodeUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchAssetCategoriesCodeUnauthorized) GetPayload() *PatchAssetCategoriesCodeUnauthorizedBody {
	return o.Payload
}

func (o *PatchAssetCategoriesCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCategoriesCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCategoriesCodeForbidden creates a PatchAssetCategoriesCodeForbidden with default headers values
func NewPatchAssetCategoriesCodeForbidden() *PatchAssetCategoriesCodeForbidden {
	return &PatchAssetCategoriesCodeForbidden{}
}

/*PatchAssetCategoriesCodeForbidden handles this case with default header values.

Access forbidden
*/
type PatchAssetCategoriesCodeForbidden struct {
	Payload *PatchAssetCategoriesCodeForbiddenBody
}

func (o *PatchAssetCategoriesCodeForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeForbidden  %+v", 403, o.Payload)
}

func (o *PatchAssetCategoriesCodeForbidden) GetPayload() *PatchAssetCategoriesCodeForbiddenBody {
	return o.Payload
}

func (o *PatchAssetCategoriesCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCategoriesCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCategoriesCodeUnsupportedMediaType creates a PatchAssetCategoriesCodeUnsupportedMediaType with default headers values
func NewPatchAssetCategoriesCodeUnsupportedMediaType() *PatchAssetCategoriesCodeUnsupportedMediaType {
	return &PatchAssetCategoriesCodeUnsupportedMediaType{}
}

/*PatchAssetCategoriesCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchAssetCategoriesCodeUnsupportedMediaType struct {
	Payload *PatchAssetCategoriesCodeUnsupportedMediaTypeBody
}

func (o *PatchAssetCategoriesCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchAssetCategoriesCodeUnsupportedMediaType) GetPayload() *PatchAssetCategoriesCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchAssetCategoriesCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCategoriesCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAssetCategoriesCodeUnprocessableEntity creates a PatchAssetCategoriesCodeUnprocessableEntity with default headers values
func NewPatchAssetCategoriesCodeUnprocessableEntity() *PatchAssetCategoriesCodeUnprocessableEntity {
	return &PatchAssetCategoriesCodeUnprocessableEntity{}
}

/*PatchAssetCategoriesCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PatchAssetCategoriesCodeUnprocessableEntity struct {
	Payload *PatchAssetCategoriesCodeUnprocessableEntityBody
}

func (o *PatchAssetCategoriesCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/asset-categories/{code}][%d] patchAssetCategoriesCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchAssetCategoriesCodeUnprocessableEntity) GetPayload() *PatchAssetCategoriesCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PatchAssetCategoriesCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchAssetCategoriesCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchAssetCategoriesCodeBadRequestBody patch asset categories code bad request body
swagger:model PatchAssetCategoriesCodeBadRequestBody
*/
type PatchAssetCategoriesCodeBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset categories code bad request body
func (o *PatchAssetCategoriesCodeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeBody patch asset categories code body
swagger:model PatchAssetCategoriesCodeBody
*/
type PatchAssetCategoriesCodeBody struct {

	// PAM asset category code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *PatchAssetCategoriesCodeParamsBodyLabels `json:"labels,omitempty"`

	// PAM ssset category code of the parent's asset category
	Parent *string `json:"parent,omitempty"`
}

// Validate validates this patch asset categories code body
func (o *PatchAssetCategoriesCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchAssetCategoriesCodeBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchAssetCategoriesCodeBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeForbiddenBody patch asset categories code forbidden body
swagger:model PatchAssetCategoriesCodeForbiddenBody
*/
type PatchAssetCategoriesCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset categories code forbidden body
func (o *PatchAssetCategoriesCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeParamsBodyLabels PAM asset category labels for each locale
swagger:model PatchAssetCategoriesCodeParamsBodyLabels
*/
type PatchAssetCategoriesCodeParamsBodyLabels struct {

	// PAM asset category label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this patch asset categories code params body labels
func (o *PatchAssetCategoriesCodeParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeUnauthorizedBody patch asset categories code unauthorized body
swagger:model PatchAssetCategoriesCodeUnauthorizedBody
*/
type PatchAssetCategoriesCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset categories code unauthorized body
func (o *PatchAssetCategoriesCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeUnprocessableEntityBody patch asset categories code unprocessable entity body
swagger:model PatchAssetCategoriesCodeUnprocessableEntityBody
*/
type PatchAssetCategoriesCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset categories code unprocessable entity body
func (o *PatchAssetCategoriesCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchAssetCategoriesCodeUnsupportedMediaTypeBody patch asset categories code unsupported media type body
swagger:model PatchAssetCategoriesCodeUnsupportedMediaTypeBody
*/
type PatchAssetCategoriesCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch asset categories code unsupported media type body
func (o *PatchAssetCategoriesCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchAssetCategoriesCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchAssetCategoriesCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

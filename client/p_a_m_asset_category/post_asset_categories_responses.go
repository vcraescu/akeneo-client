// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostAssetCategoriesReader is a Reader for the PostAssetCategories structure.
type PostAssetCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAssetCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAssetCategoriesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAssetCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAssetCategoriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAssetCategoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostAssetCategoriesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostAssetCategoriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAssetCategoriesCreated creates a PostAssetCategoriesCreated with default headers values
func NewPostAssetCategoriesCreated() *PostAssetCategoriesCreated {
	return &PostAssetCategoriesCreated{}
}

/*PostAssetCategoriesCreated handles this case with default header values.

Created
*/
type PostAssetCategoriesCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PostAssetCategoriesCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesCreated ", 201)
}

func (o *PostAssetCategoriesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostAssetCategoriesBadRequest creates a PostAssetCategoriesBadRequest with default headers values
func NewPostAssetCategoriesBadRequest() *PostAssetCategoriesBadRequest {
	return &PostAssetCategoriesBadRequest{}
}

/*PostAssetCategoriesBadRequest handles this case with default header values.

Bad request
*/
type PostAssetCategoriesBadRequest struct {
	Payload *PostAssetCategoriesBadRequestBody
}

func (o *PostAssetCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesBadRequest  %+v", 400, o.Payload)
}

func (o *PostAssetCategoriesBadRequest) GetPayload() *PostAssetCategoriesBadRequestBody {
	return o.Payload
}

func (o *PostAssetCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAssetCategoriesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAssetCategoriesUnauthorized creates a PostAssetCategoriesUnauthorized with default headers values
func NewPostAssetCategoriesUnauthorized() *PostAssetCategoriesUnauthorized {
	return &PostAssetCategoriesUnauthorized{}
}

/*PostAssetCategoriesUnauthorized handles this case with default header values.

Authentication required
*/
type PostAssetCategoriesUnauthorized struct {
	Payload *PostAssetCategoriesUnauthorizedBody
}

func (o *PostAssetCategoriesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAssetCategoriesUnauthorized) GetPayload() *PostAssetCategoriesUnauthorizedBody {
	return o.Payload
}

func (o *PostAssetCategoriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAssetCategoriesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAssetCategoriesForbidden creates a PostAssetCategoriesForbidden with default headers values
func NewPostAssetCategoriesForbidden() *PostAssetCategoriesForbidden {
	return &PostAssetCategoriesForbidden{}
}

/*PostAssetCategoriesForbidden handles this case with default header values.

Access forbidden
*/
type PostAssetCategoriesForbidden struct {
	Payload *PostAssetCategoriesForbiddenBody
}

func (o *PostAssetCategoriesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesForbidden  %+v", 403, o.Payload)
}

func (o *PostAssetCategoriesForbidden) GetPayload() *PostAssetCategoriesForbiddenBody {
	return o.Payload
}

func (o *PostAssetCategoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAssetCategoriesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAssetCategoriesUnsupportedMediaType creates a PostAssetCategoriesUnsupportedMediaType with default headers values
func NewPostAssetCategoriesUnsupportedMediaType() *PostAssetCategoriesUnsupportedMediaType {
	return &PostAssetCategoriesUnsupportedMediaType{}
}

/*PostAssetCategoriesUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostAssetCategoriesUnsupportedMediaType struct {
	Payload *PostAssetCategoriesUnsupportedMediaTypeBody
}

func (o *PostAssetCategoriesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostAssetCategoriesUnsupportedMediaType) GetPayload() *PostAssetCategoriesUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostAssetCategoriesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAssetCategoriesUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAssetCategoriesUnprocessableEntity creates a PostAssetCategoriesUnprocessableEntity with default headers values
func NewPostAssetCategoriesUnprocessableEntity() *PostAssetCategoriesUnprocessableEntity {
	return &PostAssetCategoriesUnprocessableEntity{}
}

/*PostAssetCategoriesUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostAssetCategoriesUnprocessableEntity struct {
	Payload *PostAssetCategoriesUnprocessableEntityBody
}

func (o *PostAssetCategoriesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/asset-categories][%d] postAssetCategoriesUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostAssetCategoriesUnprocessableEntity) GetPayload() *PostAssetCategoriesUnprocessableEntityBody {
	return o.Payload
}

func (o *PostAssetCategoriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAssetCategoriesUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostAssetCategoriesBadRequestBody post asset categories bad request body
swagger:model PostAssetCategoriesBadRequestBody
*/
type PostAssetCategoriesBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post asset categories bad request body
func (o *PostAssetCategoriesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesBody post asset categories body
swagger:model PostAssetCategoriesBody
*/
type PostAssetCategoriesBody struct {

	// PAM asset category code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *PostAssetCategoriesParamsBodyLabels `json:"labels,omitempty"`

	// PAM ssset category code of the parent's asset category
	Parent *string `json:"parent,omitempty"`
}

// Validate validates this post asset categories body
func (o *PostAssetCategoriesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAssetCategoriesBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PostAssetCategoriesBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesForbiddenBody post asset categories forbidden body
swagger:model PostAssetCategoriesForbiddenBody
*/
type PostAssetCategoriesForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post asset categories forbidden body
func (o *PostAssetCategoriesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesParamsBodyLabels PAM asset category labels for each locale
swagger:model PostAssetCategoriesParamsBodyLabels
*/
type PostAssetCategoriesParamsBodyLabels struct {

	// PAM asset category label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this post asset categories params body labels
func (o *PostAssetCategoriesParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesUnauthorizedBody post asset categories unauthorized body
swagger:model PostAssetCategoriesUnauthorizedBody
*/
type PostAssetCategoriesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post asset categories unauthorized body
func (o *PostAssetCategoriesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesUnprocessableEntityBody post asset categories unprocessable entity body
swagger:model PostAssetCategoriesUnprocessableEntityBody
*/
type PostAssetCategoriesUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post asset categories unprocessable entity body
func (o *PostAssetCategoriesUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAssetCategoriesUnsupportedMediaTypeBody post asset categories unsupported media type body
swagger:model PostAssetCategoriesUnsupportedMediaTypeBody
*/
type PostAssetCategoriesUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post asset categories unsupported media type body
func (o *PostAssetCategoriesUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAssetCategoriesUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAssetCategoriesUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostAssetCategoriesUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

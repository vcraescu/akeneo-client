// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_reference_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetReferenceFilesChannelCodeLocaleCodeDownloadReader is a Reader for the GetReferenceFilesChannelCodeLocaleCodeDownload structure.
type GetReferenceFilesChannelCodeLocaleCodeDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferenceFilesChannelCodeLocaleCodeDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReferenceFilesChannelCodeLocaleCodeDownloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReferenceFilesChannelCodeLocaleCodeDownloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferenceFilesChannelCodeLocaleCodeDownloadOK creates a GetReferenceFilesChannelCodeLocaleCodeDownloadOK with default headers values
func NewGetReferenceFilesChannelCodeLocaleCodeDownloadOK() *GetReferenceFilesChannelCodeLocaleCodeDownloadOK {
	return &GetReferenceFilesChannelCodeLocaleCodeDownloadOK{}
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadOK handles this case with default header values.

OK
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadOK struct {
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download][%d] getReferenceFilesChannelCodeLocaleCodeDownloadOK ", 200)
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized creates a GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized with default headers values
func NewGetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized() *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized {
	return &GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized{}
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized handles this case with default header values.

Authentication required
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized struct {
	Payload *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download][%d] getReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized) GetPayload() *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody {
	return o.Payload
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesChannelCodeLocaleCodeDownloadForbidden creates a GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden with default headers values
func NewGetReferenceFilesChannelCodeLocaleCodeDownloadForbidden() *GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden {
	return &GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden{}
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden handles this case with default header values.

Access forbidden
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden struct {
	Payload *GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download][%d] getReferenceFilesChannelCodeLocaleCodeDownloadForbidden  %+v", 403, o.Payload)
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden) GetPayload() *GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody {
	return o.Payload
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesChannelCodeLocaleCodeDownloadNotFound creates a GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound with default headers values
func NewGetReferenceFilesChannelCodeLocaleCodeDownloadNotFound() *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound {
	return &GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound{}
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound handles this case with default header values.

Resource not found
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound struct {
	Payload *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download][%d] getReferenceFilesChannelCodeLocaleCodeDownloadNotFound  %+v", 404, o.Payload)
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound) GetPayload() *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody {
	return o.Payload
}

func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody get reference files channel code locale code download forbidden body
swagger:model GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files channel code locale code download forbidden body
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesChannelCodeLocaleCodeDownloadForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody get reference files channel code locale code download not found body
swagger:model GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files channel code locale code download not found body
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesChannelCodeLocaleCodeDownloadNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody get reference files channel code locale code download unauthorized body
swagger:model GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody
*/
type GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files channel code locale code download unauthorized body
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesChannelCodeLocaleCodeDownloadUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

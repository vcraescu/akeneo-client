// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_reference_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetReferenceFilesLocaleCodeReader is a Reader for the GetReferenceFilesLocaleCode structure.
type GetReferenceFilesLocaleCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferenceFilesLocaleCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferenceFilesLocaleCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReferenceFilesLocaleCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReferenceFilesLocaleCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReferenceFilesLocaleCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetReferenceFilesLocaleCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferenceFilesLocaleCodeOK creates a GetReferenceFilesLocaleCodeOK with default headers values
func NewGetReferenceFilesLocaleCodeOK() *GetReferenceFilesLocaleCodeOK {
	return &GetReferenceFilesLocaleCodeOK{}
}

/*GetReferenceFilesLocaleCodeOK handles this case with default header values.

OK
*/
type GetReferenceFilesLocaleCodeOK struct {
	Payload *GetReferenceFilesLocaleCodeOKBody
}

func (o *GetReferenceFilesLocaleCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] getReferenceFilesLocaleCodeOK  %+v", 200, o.Payload)
}

func (o *GetReferenceFilesLocaleCodeOK) GetPayload() *GetReferenceFilesLocaleCodeOKBody {
	return o.Payload
}

func (o *GetReferenceFilesLocaleCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesLocaleCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesLocaleCodeUnauthorized creates a GetReferenceFilesLocaleCodeUnauthorized with default headers values
func NewGetReferenceFilesLocaleCodeUnauthorized() *GetReferenceFilesLocaleCodeUnauthorized {
	return &GetReferenceFilesLocaleCodeUnauthorized{}
}

/*GetReferenceFilesLocaleCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetReferenceFilesLocaleCodeUnauthorized struct {
	Payload *GetReferenceFilesLocaleCodeUnauthorizedBody
}

func (o *GetReferenceFilesLocaleCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] getReferenceFilesLocaleCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReferenceFilesLocaleCodeUnauthorized) GetPayload() *GetReferenceFilesLocaleCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetReferenceFilesLocaleCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesLocaleCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesLocaleCodeForbidden creates a GetReferenceFilesLocaleCodeForbidden with default headers values
func NewGetReferenceFilesLocaleCodeForbidden() *GetReferenceFilesLocaleCodeForbidden {
	return &GetReferenceFilesLocaleCodeForbidden{}
}

/*GetReferenceFilesLocaleCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetReferenceFilesLocaleCodeForbidden struct {
	Payload *GetReferenceFilesLocaleCodeForbiddenBody
}

func (o *GetReferenceFilesLocaleCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] getReferenceFilesLocaleCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetReferenceFilesLocaleCodeForbidden) GetPayload() *GetReferenceFilesLocaleCodeForbiddenBody {
	return o.Payload
}

func (o *GetReferenceFilesLocaleCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesLocaleCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesLocaleCodeNotFound creates a GetReferenceFilesLocaleCodeNotFound with default headers values
func NewGetReferenceFilesLocaleCodeNotFound() *GetReferenceFilesLocaleCodeNotFound {
	return &GetReferenceFilesLocaleCodeNotFound{}
}

/*GetReferenceFilesLocaleCodeNotFound handles this case with default header values.

Resource not found
*/
type GetReferenceFilesLocaleCodeNotFound struct {
	Payload *GetReferenceFilesLocaleCodeNotFoundBody
}

func (o *GetReferenceFilesLocaleCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] getReferenceFilesLocaleCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetReferenceFilesLocaleCodeNotFound) GetPayload() *GetReferenceFilesLocaleCodeNotFoundBody {
	return o.Payload
}

func (o *GetReferenceFilesLocaleCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesLocaleCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceFilesLocaleCodeNotAcceptable creates a GetReferenceFilesLocaleCodeNotAcceptable with default headers values
func NewGetReferenceFilesLocaleCodeNotAcceptable() *GetReferenceFilesLocaleCodeNotAcceptable {
	return &GetReferenceFilesLocaleCodeNotAcceptable{}
}

/*GetReferenceFilesLocaleCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetReferenceFilesLocaleCodeNotAcceptable struct {
	Payload *GetReferenceFilesLocaleCodeNotAcceptableBody
}

func (o *GetReferenceFilesLocaleCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] getReferenceFilesLocaleCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetReferenceFilesLocaleCodeNotAcceptable) GetPayload() *GetReferenceFilesLocaleCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetReferenceFilesLocaleCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceFilesLocaleCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReferenceFilesLocaleCodeForbiddenBody get reference files locale code forbidden body
swagger:model GetReferenceFilesLocaleCodeForbiddenBody
*/
type GetReferenceFilesLocaleCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files locale code forbidden body
func (o *GetReferenceFilesLocaleCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeNotAcceptableBody get reference files locale code not acceptable body
swagger:model GetReferenceFilesLocaleCodeNotAcceptableBody
*/
type GetReferenceFilesLocaleCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files locale code not acceptable body
func (o *GetReferenceFilesLocaleCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeNotFoundBody get reference files locale code not found body
swagger:model GetReferenceFilesLocaleCodeNotFoundBody
*/
type GetReferenceFilesLocaleCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files locale code not found body
func (o *GetReferenceFilesLocaleCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeOKBody get reference files locale code o k body
swagger:model GetReferenceFilesLocaleCodeOKBody
*/
type GetReferenceFilesLocaleCodeOKBody struct {

	// link
	Link *GetReferenceFilesLocaleCodeOKBodyLink `json:"_link,omitempty"`

	// Code of the PAM asset reference file
	Code string `json:"code,omitempty"`

	// Locale of the PAM asset reference file, equal to `null` if the asset is not localizable
	Locale string `json:"locale,omitempty"`
}

// Validate validates this get reference files locale code o k body
func (o *GetReferenceFilesLocaleCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceFilesLocaleCodeOKBody) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(o.Link) { // not required
		return nil
	}

	if o.Link != nil {
		if err := o.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceFilesLocaleCodeOK" + "." + "_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeOKBodyLink Links to get and download the reference file
swagger:model GetReferenceFilesLocaleCodeOKBodyLink
*/
type GetReferenceFilesLocaleCodeOKBodyLink struct {

	// download
	Download *GetReferenceFilesLocaleCodeOKBodyLinkDownload `json:"download,omitempty"`
}

// Validate validates this get reference files locale code o k body link
func (o *GetReferenceFilesLocaleCodeOKBodyLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceFilesLocaleCodeOKBodyLink) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(o.Download) { // not required
		return nil
	}

	if o.Download != nil {
		if err := o.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceFilesLocaleCodeOK" + "." + "_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBodyLink) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBodyLink) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeOKBodyLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeOKBodyLinkDownload get reference files locale code o k body link download
swagger:model GetReferenceFilesLocaleCodeOKBodyLinkDownload
*/
type GetReferenceFilesLocaleCodeOKBodyLinkDownload struct {

	// URI to download the reference file
	Href string `json:"href,omitempty"`
}

// Validate validates this get reference files locale code o k body link download
func (o *GetReferenceFilesLocaleCodeOKBodyLinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBodyLinkDownload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeOKBodyLinkDownload) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeOKBodyLinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceFilesLocaleCodeUnauthorizedBody get reference files locale code unauthorized body
swagger:model GetReferenceFilesLocaleCodeUnauthorizedBody
*/
type GetReferenceFilesLocaleCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference files locale code unauthorized body
func (o *GetReferenceFilesLocaleCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceFilesLocaleCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceFilesLocaleCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

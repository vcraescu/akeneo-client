// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_reference_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new p a m asset reference file API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for p a m asset reference file API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetReferenceFilesChannelCodeLocaleCodeDownload(params *GetReferenceFilesChannelCodeLocaleCodeDownloadParams) (*GetReferenceFilesChannelCodeLocaleCodeDownloadOK, error)

	GetReferenceFilesLocaleCode(params *GetReferenceFilesLocaleCodeParams) (*GetReferenceFilesLocaleCodeOK, error)

	PostReferenceFilesLocaleCode(params *PostReferenceFilesLocaleCodeParams) (*PostReferenceFilesLocaleCodeCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetReferenceFilesChannelCodeLocaleCodeDownload downloads a reference file

  This endpoint allows you to download a given reference file.
*/
func (a *Client) GetReferenceFilesChannelCodeLocaleCodeDownload(params *GetReferenceFilesChannelCodeLocaleCodeDownloadParams) (*GetReferenceFilesChannelCodeLocaleCodeDownloadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetReferenceFilesChannelCodeLocaleCodeDownloadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_reference_files__channel_code__locale_code__download",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetReferenceFilesChannelCodeLocaleCodeDownloadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetReferenceFilesChannelCodeLocaleCodeDownloadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_reference_files__channel_code__locale_code__download: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetReferenceFilesLocaleCode gets a reference file

  This endpoint allows you to get the information about a reference file of a given PAM asset.
*/
func (a *Client) GetReferenceFilesLocaleCode(params *GetReferenceFilesLocaleCodeParams) (*GetReferenceFilesLocaleCodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetReferenceFilesLocaleCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_reference_files__locale_code_",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetReferenceFilesLocaleCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetReferenceFilesLocaleCodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_reference_files__locale_code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostReferenceFilesLocaleCode uploads a new reference file

  This endpoint allows you to upload a new reference file for a given PAM asset and locale. It will also automatically generate all the variation files corresponding to this reference file.
*/
func (a *Client) PostReferenceFilesLocaleCode(params *PostReferenceFilesLocaleCodeParams) (*PostReferenceFilesLocaleCodeCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostReferenceFilesLocaleCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "post_reference_files__locale_code_",
		Method:             "POST",
		PathPattern:        "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostReferenceFilesLocaleCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostReferenceFilesLocaleCodeCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_reference_files__locale_code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_reference_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostReferenceFilesLocaleCodeReader is a Reader for the PostReferenceFilesLocaleCode structure.
type PostReferenceFilesLocaleCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReferenceFilesLocaleCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostReferenceFilesLocaleCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostReferenceFilesLocaleCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostReferenceFilesLocaleCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostReferenceFilesLocaleCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostReferenceFilesLocaleCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostReferenceFilesLocaleCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostReferenceFilesLocaleCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostReferenceFilesLocaleCodeCreated creates a PostReferenceFilesLocaleCodeCreated with default headers values
func NewPostReferenceFilesLocaleCodeCreated() *PostReferenceFilesLocaleCodeCreated {
	return &PostReferenceFilesLocaleCodeCreated{}
}

/*PostReferenceFilesLocaleCodeCreated handles this case with default header values.

Uploaded
*/
type PostReferenceFilesLocaleCodeCreated struct {
	/*URI of the created resource
	 */
	Location string

	Payload *PostReferenceFilesLocaleCodeCreatedBody
}

func (o *PostReferenceFilesLocaleCodeCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeCreated  %+v", 201, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeCreated) GetPayload() *PostReferenceFilesLocaleCodeCreatedBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(PostReferenceFilesLocaleCodeCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeBadRequest creates a PostReferenceFilesLocaleCodeBadRequest with default headers values
func NewPostReferenceFilesLocaleCodeBadRequest() *PostReferenceFilesLocaleCodeBadRequest {
	return &PostReferenceFilesLocaleCodeBadRequest{}
}

/*PostReferenceFilesLocaleCodeBadRequest handles this case with default header values.

Bad request
*/
type PostReferenceFilesLocaleCodeBadRequest struct {
	Payload *PostReferenceFilesLocaleCodeBadRequestBody
}

func (o *PostReferenceFilesLocaleCodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeBadRequest  %+v", 400, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeBadRequest) GetPayload() *PostReferenceFilesLocaleCodeBadRequestBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeUnauthorized creates a PostReferenceFilesLocaleCodeUnauthorized with default headers values
func NewPostReferenceFilesLocaleCodeUnauthorized() *PostReferenceFilesLocaleCodeUnauthorized {
	return &PostReferenceFilesLocaleCodeUnauthorized{}
}

/*PostReferenceFilesLocaleCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PostReferenceFilesLocaleCodeUnauthorized struct {
	Payload *PostReferenceFilesLocaleCodeUnauthorizedBody
}

func (o *PostReferenceFilesLocaleCodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeUnauthorized) GetPayload() *PostReferenceFilesLocaleCodeUnauthorizedBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeForbidden creates a PostReferenceFilesLocaleCodeForbidden with default headers values
func NewPostReferenceFilesLocaleCodeForbidden() *PostReferenceFilesLocaleCodeForbidden {
	return &PostReferenceFilesLocaleCodeForbidden{}
}

/*PostReferenceFilesLocaleCodeForbidden handles this case with default header values.

Access forbidden
*/
type PostReferenceFilesLocaleCodeForbidden struct {
	Payload *PostReferenceFilesLocaleCodeForbiddenBody
}

func (o *PostReferenceFilesLocaleCodeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeForbidden  %+v", 403, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeForbidden) GetPayload() *PostReferenceFilesLocaleCodeForbiddenBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeNotFound creates a PostReferenceFilesLocaleCodeNotFound with default headers values
func NewPostReferenceFilesLocaleCodeNotFound() *PostReferenceFilesLocaleCodeNotFound {
	return &PostReferenceFilesLocaleCodeNotFound{}
}

/*PostReferenceFilesLocaleCodeNotFound handles this case with default header values.

Resource not found
*/
type PostReferenceFilesLocaleCodeNotFound struct {
	Payload *PostReferenceFilesLocaleCodeNotFoundBody
}

func (o *PostReferenceFilesLocaleCodeNotFound) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeNotFound  %+v", 404, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeNotFound) GetPayload() *PostReferenceFilesLocaleCodeNotFoundBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeUnsupportedMediaType creates a PostReferenceFilesLocaleCodeUnsupportedMediaType with default headers values
func NewPostReferenceFilesLocaleCodeUnsupportedMediaType() *PostReferenceFilesLocaleCodeUnsupportedMediaType {
	return &PostReferenceFilesLocaleCodeUnsupportedMediaType{}
}

/*PostReferenceFilesLocaleCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostReferenceFilesLocaleCodeUnsupportedMediaType struct {
	Payload *PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody
}

func (o *PostReferenceFilesLocaleCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeUnsupportedMediaType) GetPayload() *PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceFilesLocaleCodeUnprocessableEntity creates a PostReferenceFilesLocaleCodeUnprocessableEntity with default headers values
func NewPostReferenceFilesLocaleCodeUnprocessableEntity() *PostReferenceFilesLocaleCodeUnprocessableEntity {
	return &PostReferenceFilesLocaleCodeUnprocessableEntity{}
}

/*PostReferenceFilesLocaleCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostReferenceFilesLocaleCodeUnprocessableEntity struct {
	Payload *PostReferenceFilesLocaleCodeUnprocessableEntityBody
}

func (o *PostReferenceFilesLocaleCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/reference-files/{locale_code}][%d] postReferenceFilesLocaleCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostReferenceFilesLocaleCodeUnprocessableEntity) GetPayload() *PostReferenceFilesLocaleCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PostReferenceFilesLocaleCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceFilesLocaleCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostReferenceFilesLocaleCodeBadRequestBody post reference files locale code bad request body
swagger:model PostReferenceFilesLocaleCodeBadRequestBody
*/
type PostReferenceFilesLocaleCodeBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code bad request body
func (o *PostReferenceFilesLocaleCodeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeBody post reference files locale code body
swagger:model PostReferenceFilesLocaleCodeBody
*/
type PostReferenceFilesLocaleCodeBody struct {

	// The binaries of the file
	// Required: true
	// Format: binary
	File io.ReadCloser `json:"file"`
}

// Validate validates this post reference files locale code body
func (o *PostReferenceFilesLocaleCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostReferenceFilesLocaleCodeBody) validateFile(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"file", "body", io.ReadCloser(o.File)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeCreatedBody post reference files locale code created body
swagger:model PostReferenceFilesLocaleCodeCreatedBody
*/
type PostReferenceFilesLocaleCodeCreatedBody struct {

	// errors
	Errors []*PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0 `json:"errors"`

	// Message explaining the warning
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code created body
func (o *PostReferenceFilesLocaleCodeCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostReferenceFilesLocaleCodeCreatedBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postReferenceFilesLocaleCodeCreated" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0 post reference files locale code created body errors items0
swagger:model PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0
*/
type PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0 struct {

	// Channel for which the variation file generation failed
	Channel string `json:"channel,omitempty"`

	// Locale for which the variation file generation failed
	Locale string `json:"locale,omitempty"`

	// Message explaining why the variation file generation failed
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code created body errors items0
func (o *PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeCreatedBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeForbiddenBody post reference files locale code forbidden body
swagger:model PostReferenceFilesLocaleCodeForbiddenBody
*/
type PostReferenceFilesLocaleCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code forbidden body
func (o *PostReferenceFilesLocaleCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeNotFoundBody post reference files locale code not found body
swagger:model PostReferenceFilesLocaleCodeNotFoundBody
*/
type PostReferenceFilesLocaleCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code not found body
func (o *PostReferenceFilesLocaleCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeUnauthorizedBody post reference files locale code unauthorized body
swagger:model PostReferenceFilesLocaleCodeUnauthorizedBody
*/
type PostReferenceFilesLocaleCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code unauthorized body
func (o *PostReferenceFilesLocaleCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeUnprocessableEntityBody post reference files locale code unprocessable entity body
swagger:model PostReferenceFilesLocaleCodeUnprocessableEntityBody
*/
type PostReferenceFilesLocaleCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code unprocessable entity body
func (o *PostReferenceFilesLocaleCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody post reference files locale code unsupported media type body
swagger:model PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody
*/
type PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference files locale code unsupported media type body
func (o *PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceFilesLocaleCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

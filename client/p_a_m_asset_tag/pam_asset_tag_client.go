// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new p a m asset tag API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for p a m asset tag API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetAssetTags(params *GetAssetTagsParams) (*GetAssetTagsOK, error)

	GetAssetTagsCode(params *GetAssetTagsCodeParams) (*GetAssetTagsCodeOK, error)

	PatchAssetTagsCode(params *PatchAssetTagsCodeParams) (*PatchAssetTagsCodeCreated, *PatchAssetTagsCodeNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAssetTags gets list of p a m asset tags

  This endpoint allows you to get a list of PAM asset tags. PAM asset tags are paginated.
*/
func (a *Client) GetAssetTags(params *GetAssetTagsParams) (*GetAssetTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_asset_tags",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetTagsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_asset_tags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAssetTagsCode gets a p a m asset tag

  This endpoint allows you to get the information about a given PAM asset tag.
*/
func (a *Client) GetAssetTagsCode(params *GetAssetTagsCodeParams) (*GetAssetTagsCodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetTagsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get_asset_tags__code_",
		Method:             "GET",
		PathPattern:        "/api/rest/v1/asset-tags/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAssetTagsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetTagsCodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_asset_tags__code_: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAssetTagsCode updates create a p a m asset tag

  This endpoint allows you to update a given PAM asset tag. Know more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no tag exists for the given code, it creates it.
*/
func (a *Client) PatchAssetTagsCode(params *PatchAssetTagsCodeParams) (*PatchAssetTagsCodeCreated, *PatchAssetTagsCodeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAssetTagsCodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patch_asset_tags__code_",
		Method:             "PATCH",
		PathPattern:        "/api/rest/v1/asset-tags/{code}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAssetTagsCodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PatchAssetTagsCodeCreated:
		return value, nil, nil
	case *PatchAssetTagsCodeNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for p_a_m_asset_tag: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

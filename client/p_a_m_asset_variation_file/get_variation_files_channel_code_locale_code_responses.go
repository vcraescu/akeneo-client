// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_variation_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetVariationFilesChannelCodeLocaleCodeReader is a Reader for the GetVariationFilesChannelCodeLocaleCode structure.
type GetVariationFilesChannelCodeLocaleCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVariationFilesChannelCodeLocaleCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVariationFilesChannelCodeLocaleCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVariationFilesChannelCodeLocaleCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVariationFilesChannelCodeLocaleCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVariationFilesChannelCodeLocaleCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetVariationFilesChannelCodeLocaleCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVariationFilesChannelCodeLocaleCodeOK creates a GetVariationFilesChannelCodeLocaleCodeOK with default headers values
func NewGetVariationFilesChannelCodeLocaleCodeOK() *GetVariationFilesChannelCodeLocaleCodeOK {
	return &GetVariationFilesChannelCodeLocaleCodeOK{}
}

/*GetVariationFilesChannelCodeLocaleCodeOK handles this case with default header values.

OK
*/
type GetVariationFilesChannelCodeLocaleCodeOK struct {
	Payload *GetVariationFilesChannelCodeLocaleCodeOKBody
}

func (o *GetVariationFilesChannelCodeLocaleCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] getVariationFilesChannelCodeLocaleCodeOK  %+v", 200, o.Payload)
}

func (o *GetVariationFilesChannelCodeLocaleCodeOK) GetPayload() *GetVariationFilesChannelCodeLocaleCodeOKBody {
	return o.Payload
}

func (o *GetVariationFilesChannelCodeLocaleCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVariationFilesChannelCodeLocaleCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariationFilesChannelCodeLocaleCodeUnauthorized creates a GetVariationFilesChannelCodeLocaleCodeUnauthorized with default headers values
func NewGetVariationFilesChannelCodeLocaleCodeUnauthorized() *GetVariationFilesChannelCodeLocaleCodeUnauthorized {
	return &GetVariationFilesChannelCodeLocaleCodeUnauthorized{}
}

/*GetVariationFilesChannelCodeLocaleCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetVariationFilesChannelCodeLocaleCodeUnauthorized struct {
	Payload *GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody
}

func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] getVariationFilesChannelCodeLocaleCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorized) GetPayload() *GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariationFilesChannelCodeLocaleCodeForbidden creates a GetVariationFilesChannelCodeLocaleCodeForbidden with default headers values
func NewGetVariationFilesChannelCodeLocaleCodeForbidden() *GetVariationFilesChannelCodeLocaleCodeForbidden {
	return &GetVariationFilesChannelCodeLocaleCodeForbidden{}
}

/*GetVariationFilesChannelCodeLocaleCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetVariationFilesChannelCodeLocaleCodeForbidden struct {
	Payload *GetVariationFilesChannelCodeLocaleCodeForbiddenBody
}

func (o *GetVariationFilesChannelCodeLocaleCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] getVariationFilesChannelCodeLocaleCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetVariationFilesChannelCodeLocaleCodeForbidden) GetPayload() *GetVariationFilesChannelCodeLocaleCodeForbiddenBody {
	return o.Payload
}

func (o *GetVariationFilesChannelCodeLocaleCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVariationFilesChannelCodeLocaleCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariationFilesChannelCodeLocaleCodeNotFound creates a GetVariationFilesChannelCodeLocaleCodeNotFound with default headers values
func NewGetVariationFilesChannelCodeLocaleCodeNotFound() *GetVariationFilesChannelCodeLocaleCodeNotFound {
	return &GetVariationFilesChannelCodeLocaleCodeNotFound{}
}

/*GetVariationFilesChannelCodeLocaleCodeNotFound handles this case with default header values.

Resource not found
*/
type GetVariationFilesChannelCodeLocaleCodeNotFound struct {
	Payload *GetVariationFilesChannelCodeLocaleCodeNotFoundBody
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] getVariationFilesChannelCodeLocaleCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotFound) GetPayload() *GetVariationFilesChannelCodeLocaleCodeNotFoundBody {
	return o.Payload
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVariationFilesChannelCodeLocaleCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariationFilesChannelCodeLocaleCodeNotAcceptable creates a GetVariationFilesChannelCodeLocaleCodeNotAcceptable with default headers values
func NewGetVariationFilesChannelCodeLocaleCodeNotAcceptable() *GetVariationFilesChannelCodeLocaleCodeNotAcceptable {
	return &GetVariationFilesChannelCodeLocaleCodeNotAcceptable{}
}

/*GetVariationFilesChannelCodeLocaleCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetVariationFilesChannelCodeLocaleCodeNotAcceptable struct {
	Payload *GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] getVariationFilesChannelCodeLocaleCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptable) GetPayload() *GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeForbiddenBody get variation files channel code locale code forbidden body
swagger:model GetVariationFilesChannelCodeLocaleCodeForbiddenBody
*/
type GetVariationFilesChannelCodeLocaleCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get variation files channel code locale code forbidden body
func (o *GetVariationFilesChannelCodeLocaleCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody get variation files channel code locale code not acceptable body
swagger:model GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody
*/
type GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get variation files channel code locale code not acceptable body
func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeNotFoundBody get variation files channel code locale code not found body
swagger:model GetVariationFilesChannelCodeLocaleCodeNotFoundBody
*/
type GetVariationFilesChannelCodeLocaleCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get variation files channel code locale code not found body
func (o *GetVariationFilesChannelCodeLocaleCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeOKBody get variation files channel code locale code o k body
swagger:model GetVariationFilesChannelCodeLocaleCodeOKBody
*/
type GetVariationFilesChannelCodeLocaleCodeOKBody struct {

	// link
	Link *GetVariationFilesChannelCodeLocaleCodeOKBodyLink `json:"_link,omitempty"`

	// Code of the PAM asset variation file
	Code string `json:"code,omitempty"`

	// Locale of the PAM asset variation file, equal to `null` if the asset is not localizable
	Locale string `json:"locale,omitempty"`

	// Channel of the PAM asset variation file
	Scope string `json:"scope,omitempty"`
}

// Validate validates this get variation files channel code locale code o k body
func (o *GetVariationFilesChannelCodeLocaleCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetVariationFilesChannelCodeLocaleCodeOKBody) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(o.Link) { // not required
		return nil
	}

	if o.Link != nil {
		if err := o.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getVariationFilesChannelCodeLocaleCodeOK" + "." + "_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeOKBodyLink Links to get and download the reference file
swagger:model GetVariationFilesChannelCodeLocaleCodeOKBodyLink
*/
type GetVariationFilesChannelCodeLocaleCodeOKBodyLink struct {

	// download
	Download *GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload `json:"download,omitempty"`
}

// Validate validates this get variation files channel code locale code o k body link
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLink) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(o.Download) { // not required
		return nil
	}

	if o.Download != nil {
		if err := o.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getVariationFilesChannelCodeLocaleCodeOK" + "." + "_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLink) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLink) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeOKBodyLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload get variation files channel code locale code o k body link download
swagger:model GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload
*/
type GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload struct {

	// URI to download the variation file
	Href string `json:"href,omitempty"`
}

// Validate validates this get variation files channel code locale code o k body link download
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeOKBodyLinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody get variation files channel code locale code unauthorized body
swagger:model GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody
*/
type GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get variation files channel code locale code unauthorized body
func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetVariationFilesChannelCodeLocaleCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

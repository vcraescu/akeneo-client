// Code generated by go-swagger; DO NOT EDIT.

package p_a_m_asset_variation_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostVariationFilesChannelCodeLocaleCodeReader is a Reader for the PostVariationFilesChannelCodeLocaleCode structure.
type PostVariationFilesChannelCodeLocaleCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVariationFilesChannelCodeLocaleCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostVariationFilesChannelCodeLocaleCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostVariationFilesChannelCodeLocaleCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostVariationFilesChannelCodeLocaleCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostVariationFilesChannelCodeLocaleCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostVariationFilesChannelCodeLocaleCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostVariationFilesChannelCodeLocaleCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostVariationFilesChannelCodeLocaleCodeCreated creates a PostVariationFilesChannelCodeLocaleCodeCreated with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeCreated() *PostVariationFilesChannelCodeLocaleCodeCreated {
	return &PostVariationFilesChannelCodeLocaleCodeCreated{}
}

/*PostVariationFilesChannelCodeLocaleCodeCreated handles this case with default header values.

Created
*/
type PostVariationFilesChannelCodeLocaleCodeCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PostVariationFilesChannelCodeLocaleCodeCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeCreated ", 201)
}

func (o *PostVariationFilesChannelCodeLocaleCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeBadRequest creates a PostVariationFilesChannelCodeLocaleCodeBadRequest with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeBadRequest() *PostVariationFilesChannelCodeLocaleCodeBadRequest {
	return &PostVariationFilesChannelCodeLocaleCodeBadRequest{}
}

/*PostVariationFilesChannelCodeLocaleCodeBadRequest handles this case with default header values.

Bad request
*/
type PostVariationFilesChannelCodeLocaleCodeBadRequest struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeBadRequestBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeBadRequest  %+v", 400, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeBadRequest) GetPayload() *PostVariationFilesChannelCodeLocaleCodeBadRequestBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeUnauthorized creates a PostVariationFilesChannelCodeLocaleCodeUnauthorized with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeUnauthorized() *PostVariationFilesChannelCodeLocaleCodeUnauthorized {
	return &PostVariationFilesChannelCodeLocaleCodeUnauthorized{}
}

/*PostVariationFilesChannelCodeLocaleCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PostVariationFilesChannelCodeLocaleCodeUnauthorized struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorized) GetPayload() *PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeForbidden creates a PostVariationFilesChannelCodeLocaleCodeForbidden with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeForbidden() *PostVariationFilesChannelCodeLocaleCodeForbidden {
	return &PostVariationFilesChannelCodeLocaleCodeForbidden{}
}

/*PostVariationFilesChannelCodeLocaleCodeForbidden handles this case with default header values.

Access forbidden
*/
type PostVariationFilesChannelCodeLocaleCodeForbidden struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeForbiddenBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeForbidden  %+v", 403, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeForbidden) GetPayload() *PostVariationFilesChannelCodeLocaleCodeForbiddenBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeNotFound creates a PostVariationFilesChannelCodeLocaleCodeNotFound with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeNotFound() *PostVariationFilesChannelCodeLocaleCodeNotFound {
	return &PostVariationFilesChannelCodeLocaleCodeNotFound{}
}

/*PostVariationFilesChannelCodeLocaleCodeNotFound handles this case with default header values.

Resource not found
*/
type PostVariationFilesChannelCodeLocaleCodeNotFound struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeNotFoundBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeNotFound) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeNotFound  %+v", 404, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeNotFound) GetPayload() *PostVariationFilesChannelCodeLocaleCodeNotFoundBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType creates a PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType() *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType {
	return &PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType{}
}

/*PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType) GetPayload() *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVariationFilesChannelCodeLocaleCodeUnprocessableEntity creates a PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity with default headers values
func NewPostVariationFilesChannelCodeLocaleCodeUnprocessableEntity() *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity {
	return &PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity{}
}

/*PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity struct {
	Payload *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}][%d] postVariationFilesChannelCodeLocaleCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity) GetPayload() *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeBadRequestBody post variation files channel code locale code bad request body
swagger:model PostVariationFilesChannelCodeLocaleCodeBadRequestBody
*/
type PostVariationFilesChannelCodeLocaleCodeBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code bad request body
func (o *PostVariationFilesChannelCodeLocaleCodeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeBody post variation files channel code locale code body
swagger:model PostVariationFilesChannelCodeLocaleCodeBody
*/
type PostVariationFilesChannelCodeLocaleCodeBody struct {

	// The binaries of the file
	// Required: true
	// Format: binary
	File io.ReadCloser `json:"file"`
}

// Validate validates this post variation files channel code locale code body
func (o *PostVariationFilesChannelCodeLocaleCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostVariationFilesChannelCodeLocaleCodeBody) validateFile(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"file", "body", io.ReadCloser(o.File)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeForbiddenBody post variation files channel code locale code forbidden body
swagger:model PostVariationFilesChannelCodeLocaleCodeForbiddenBody
*/
type PostVariationFilesChannelCodeLocaleCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code forbidden body
func (o *PostVariationFilesChannelCodeLocaleCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeNotFoundBody post variation files channel code locale code not found body
swagger:model PostVariationFilesChannelCodeLocaleCodeNotFoundBody
*/
type PostVariationFilesChannelCodeLocaleCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code not found body
func (o *PostVariationFilesChannelCodeLocaleCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody post variation files channel code locale code unauthorized body
swagger:model PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody
*/
type PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code unauthorized body
func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody post variation files channel code locale code unprocessable entity body
swagger:model PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody
*/
type PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code unprocessable entity body
func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody post variation files channel code locale code unsupported media type body
swagger:model PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody
*/
type PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post variation files channel code locale code unsupported media type body
func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostVariationFilesChannelCodeLocaleCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

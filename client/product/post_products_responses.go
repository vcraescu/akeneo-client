// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostProductsReader is a Reader for the PostProducts structure.
type PostProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostProductsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostProductsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostProductsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostProductsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostProductsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostProductsCreated creates a PostProductsCreated with default headers values
func NewPostProductsCreated() *PostProductsCreated {
	return &PostProductsCreated{}
}

/*PostProductsCreated handles this case with default header values.

Created
*/
type PostProductsCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PostProductsCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsCreated ", 201)
}

func (o *PostProductsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostProductsBadRequest creates a PostProductsBadRequest with default headers values
func NewPostProductsBadRequest() *PostProductsBadRequest {
	return &PostProductsBadRequest{}
}

/*PostProductsBadRequest handles this case with default header values.

Bad request
*/
type PostProductsBadRequest struct {
	Payload *PostProductsBadRequestBody
}

func (o *PostProductsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsBadRequest  %+v", 400, o.Payload)
}

func (o *PostProductsBadRequest) GetPayload() *PostProductsBadRequestBody {
	return o.Payload
}

func (o *PostProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProductsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsUnauthorized creates a PostProductsUnauthorized with default headers values
func NewPostProductsUnauthorized() *PostProductsUnauthorized {
	return &PostProductsUnauthorized{}
}

/*PostProductsUnauthorized handles this case with default header values.

Authentication required
*/
type PostProductsUnauthorized struct {
	Payload *PostProductsUnauthorizedBody
}

func (o *PostProductsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostProductsUnauthorized) GetPayload() *PostProductsUnauthorizedBody {
	return o.Payload
}

func (o *PostProductsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProductsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsForbidden creates a PostProductsForbidden with default headers values
func NewPostProductsForbidden() *PostProductsForbidden {
	return &PostProductsForbidden{}
}

/*PostProductsForbidden handles this case with default header values.

Access forbidden
*/
type PostProductsForbidden struct {
	Payload *PostProductsForbiddenBody
}

func (o *PostProductsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsForbidden  %+v", 403, o.Payload)
}

func (o *PostProductsForbidden) GetPayload() *PostProductsForbiddenBody {
	return o.Payload
}

func (o *PostProductsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProductsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsUnsupportedMediaType creates a PostProductsUnsupportedMediaType with default headers values
func NewPostProductsUnsupportedMediaType() *PostProductsUnsupportedMediaType {
	return &PostProductsUnsupportedMediaType{}
}

/*PostProductsUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostProductsUnsupportedMediaType struct {
	Payload *PostProductsUnsupportedMediaTypeBody
}

func (o *PostProductsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostProductsUnsupportedMediaType) GetPayload() *PostProductsUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostProductsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProductsUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsUnprocessableEntity creates a PostProductsUnprocessableEntity with default headers values
func NewPostProductsUnprocessableEntity() *PostProductsUnprocessableEntity {
	return &PostProductsUnprocessableEntity{}
}

/*PostProductsUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostProductsUnprocessableEntity struct {
	Payload *PostProductsUnprocessableEntityBody
}

func (o *PostProductsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/products][%d] postProductsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostProductsUnprocessableEntity) GetPayload() *PostProductsUnprocessableEntityBody {
	return o.Payload
}

func (o *PostProductsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostProductsUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostProductsBadRequestBody post products bad request body
swagger:model PostProductsBadRequestBody
*/
type PostProductsBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post products bad request body
func (o *PostProductsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostProductsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsBody post products body
swagger:model PostProductsBody
*/
type PostProductsBody struct {

	// associations
	Associations *PostProductsParamsBodyAssociations `json:"associations,omitempty"`

	// Codes of the categories in which the product is classified
	Categories []string `json:"categories"`

	// Date of creation
	Created string `json:"created,omitempty"`

	// Whether the product is enable
	Enabled *bool `json:"enabled,omitempty"`

	// Family code from which the product inherits its attributes and attributes requirements
	Family *string `json:"family,omitempty"`

	// Codes of the groups to which the product belong
	Groups []string `json:"groups"`

	// Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute
	// Required: true
	Identifier *string `json:"identifier"`

	// metadata
	Metadata *PostProductsParamsBodyMetadata `json:"metadata,omitempty"`

	// Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.
	Parent *string `json:"parent,omitempty"`

	// Product quality scores for each channel/locale combination (only available in Serenity and when the "with_quality_scores" query parameter is set to "true")
	QualityScores interface{} `json:"quality_scores,omitempty"`

	// quantified associations
	QuantifiedAssociations *PostProductsParamsBodyQuantifiedAssociations `json:"quantified_associations,omitempty"`

	// Date of the last update
	Updated string `json:"updated,omitempty"`

	// values
	Values *PostProductsParamsBodyValues `json:"values,omitempty"`
}

// Validate validates this post products body
func (o *PostProductsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateQuantifiedAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsBody) validateAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.Associations) { // not required
		return nil
	}

	if o.Associations != nil {
		if err := o.Associations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "associations")
			}
			return err
		}
	}

	return nil
}

func (o *PostProductsBody) validateIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"identifier", "body", o.Identifier); err != nil {
		return err
	}

	return nil
}

func (o *PostProductsBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostProductsBody) validateQuantifiedAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.QuantifiedAssociations) { // not required
		return nil
	}

	if o.QuantifiedAssociations != nil {
		if err := o.QuantifiedAssociations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "quantified_associations")
			}
			return err
		}
	}

	return nil
}

func (o *PostProductsBody) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsBody) UnmarshalBinary(b []byte) error {
	var res PostProductsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsForbiddenBody post products forbidden body
swagger:model PostProductsForbiddenBody
*/
type PostProductsForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post products forbidden body
func (o *PostProductsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostProductsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyAssociations Several associations related to groups, product models and/or other products, grouped by association types
swagger:model PostProductsParamsBodyAssociations
*/
type PostProductsParamsBodyAssociations struct {

	// association type code
	AssociationTypeCode *PostProductsParamsBodyAssociationsAssociationTypeCode `json:"associationTypeCode,omitempty"`
}

// Validate validates this post products params body associations
func (o *PostProductsParamsBodyAssociations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsParamsBodyAssociations) validateAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AssociationTypeCode) { // not required
		return nil
	}

	if o.AssociationTypeCode != nil {
		if err := o.AssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "associations" + "." + "associationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyAssociations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyAssociations) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyAssociations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyAssociationsAssociationTypeCode post products params body associations association type code
swagger:model PostProductsParamsBodyAssociationsAssociationTypeCode
*/
type PostProductsParamsBodyAssociationsAssociationTypeCode struct {

	// Array of groups codes with which the product is in relation
	Groups []string `json:"groups"`

	// Array of product model codes with which the product is in relation (only available since the v2.1)
	ProductModels []string `json:"product_models"`

	// Array of product identifiers with which the product is in relation
	Products []string `json:"products"`
}

// Validate validates this post products params body associations association type code
func (o *PostProductsParamsBodyAssociationsAssociationTypeCode) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyAssociationsAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyAssociationsAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyAssociationsAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyMetadata More information around the product (only available since the v2.0 in the Enterprise Edition)
swagger:model PostProductsParamsBodyMetadata
*/
type PostProductsParamsBodyMetadata struct {

	// Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)
	// Enum: [read_only draft_in_progress proposal_waiting_for_approval working_copy]
	WorkflowStatus string `json:"workflow_status,omitempty"`
}

// Validate validates this post products params body metadata
func (o *PostProductsParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateWorkflowStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postProductsParamsBodyMetadataTypeWorkflowStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["read_only","draft_in_progress","proposal_waiting_for_approval","working_copy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postProductsParamsBodyMetadataTypeWorkflowStatusPropEnum = append(postProductsParamsBodyMetadataTypeWorkflowStatusPropEnum, v)
	}
}

const (

	// PostProductsParamsBodyMetadataWorkflowStatusReadOnly captures enum value "read_only"
	PostProductsParamsBodyMetadataWorkflowStatusReadOnly string = "read_only"

	// PostProductsParamsBodyMetadataWorkflowStatusDraftInProgress captures enum value "draft_in_progress"
	PostProductsParamsBodyMetadataWorkflowStatusDraftInProgress string = "draft_in_progress"

	// PostProductsParamsBodyMetadataWorkflowStatusProposalWaitingForApproval captures enum value "proposal_waiting_for_approval"
	PostProductsParamsBodyMetadataWorkflowStatusProposalWaitingForApproval string = "proposal_waiting_for_approval"

	// PostProductsParamsBodyMetadataWorkflowStatusWorkingCopy captures enum value "working_copy"
	PostProductsParamsBodyMetadataWorkflowStatusWorkingCopy string = "working_copy"
)

// prop value enum
func (o *PostProductsParamsBodyMetadata) validateWorkflowStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postProductsParamsBodyMetadataTypeWorkflowStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostProductsParamsBodyMetadata) validateWorkflowStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.WorkflowStatus) { // not required
		return nil
	}

	// value enum
	if err := o.validateWorkflowStatusEnum("body"+"."+"metadata"+"."+"workflow_status", "body", o.WorkflowStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyQuantifiedAssociations Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)
swagger:model PostProductsParamsBodyQuantifiedAssociations
*/
type PostProductsParamsBodyQuantifiedAssociations struct {

	// quantified association type code
	QuantifiedAssociationTypeCode *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode `json:"quantifiedAssociationTypeCode,omitempty"`
}

// Validate validates this post products params body quantified associations
func (o *PostProductsParamsBodyQuantifiedAssociations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuantifiedAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsParamsBodyQuantifiedAssociations) validateQuantifiedAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.QuantifiedAssociationTypeCode) { // not required
		return nil
	}

	if o.QuantifiedAssociationTypeCode != nil {
		if err := o.QuantifiedAssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociations) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyQuantifiedAssociations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode post products params body quantified associations quantified association type code
swagger:model PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode
*/
type PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode struct {

	// Array of objects containing product model codes and quantities with which the product is in relation
	ProductModels []*PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 `json:"product_models"`

	// Array of objects containing product identifiers and quantities with which the product is in relation
	Products []*PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 `json:"products"`
}

// Validate validates this post products params body quantified associations quantified association type code
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProductModels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) validateProductModels(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductModels) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductModels); i++ {
		if swag.IsZero(o.ProductModels[i]) { // not required
			continue
		}

		if o.ProductModels[i] != nil {
			if err := o.ProductModels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode" + "." + "product_models" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(o.Products) { // not required
		return nil
	}

	for i := 0; i < len(o.Products); i++ {
		if swag.IsZero(o.Products[i]) { // not required
			continue
		}

		if o.Products[i] != nil {
			if err := o.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode" + "." + "products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 post products params body quantified associations quantified association type code product models items0
swagger:model PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0
*/
type PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`
}

// Validate validates this post products params body quantified associations quantified association type code product models items0
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 post products params body quantified associations quantified association type code products items0
swagger:model PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0
*/
type PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 struct {

	// identifier
	Identifier string `json:"identifier,omitempty"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`
}

// Validate validates this post products params body quantified associations quantified association type code products items0
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyValues Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details
swagger:model PostProductsParamsBodyValues
*/
type PostProductsParamsBodyValues struct {

	// attribute code
	AttributeCode []*PostProductsParamsBodyValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this post products params body values
func (o *PostProductsParamsBodyValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsParamsBodyValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyValues) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyValues) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyValuesAttributeCodeItems0 post products params body values attribute code items0
swagger:model PostProductsParamsBodyValuesAttributeCodeItems0
*/
type PostProductsParamsBodyValuesAttributeCodeItems0 struct {

	// Product value
	Data interface{} `json:"data,omitempty"`

	// linked data
	LinkedData *PostProductsParamsBodyValuesAttributeCodeItems0LinkedData `json:"linked_data,omitempty"`

	// Locale code of the product value
	Locale string `json:"locale,omitempty"`

	// Channel code of the product value
	Scope string `json:"scope,omitempty"`
}

// Validate validates this post products params body values attribute code items0
func (o *PostProductsParamsBodyValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinkedData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostProductsParamsBodyValuesAttributeCodeItems0) validateLinkedData(formats strfmt.Registry) error {

	if swag.IsZero(o.LinkedData) { // not required
		return nil
	}

	if o.LinkedData != nil {
		if err := o.LinkedData.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("linked_data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsParamsBodyValuesAttributeCodeItems0LinkedData Object containing labels of attribute options (only available in Serenity and when query parameter "with_attribute_options" is set to "true"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.
swagger:model PostProductsParamsBodyValuesAttributeCodeItems0LinkedData
*/
type PostProductsParamsBodyValuesAttributeCodeItems0LinkedData struct {

	// attribute
	Attribute string `json:"attribute,omitempty"`

	// code
	Code string `json:"code,omitempty"`

	// labels
	Labels interface{} `json:"labels,omitempty"`
}

// Validate validates this post products params body values attribute code items0 linked data
func (o *PostProductsParamsBodyValuesAttributeCodeItems0LinkedData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsParamsBodyValuesAttributeCodeItems0LinkedData) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsParamsBodyValuesAttributeCodeItems0LinkedData) UnmarshalBinary(b []byte) error {
	var res PostProductsParamsBodyValuesAttributeCodeItems0LinkedData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsUnauthorizedBody post products unauthorized body
swagger:model PostProductsUnauthorizedBody
*/
type PostProductsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post products unauthorized body
func (o *PostProductsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostProductsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsUnprocessableEntityBody post products unprocessable entity body
swagger:model PostProductsUnprocessableEntityBody
*/
type PostProductsUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post products unprocessable entity body
func (o *PostProductsUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostProductsUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostProductsUnsupportedMediaTypeBody post products unsupported media type body
swagger:model PostProductsUnsupportedMediaTypeBody
*/
type PostProductsUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post products unsupported media type body
func (o *PostProductsUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProductsUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProductsUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostProductsUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

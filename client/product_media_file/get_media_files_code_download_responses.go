// Code generated by go-swagger; DO NOT EDIT.

package product_media_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetMediaFilesCodeDownloadReader is a Reader for the GetMediaFilesCodeDownload structure.
type GetMediaFilesCodeDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMediaFilesCodeDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMediaFilesCodeDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMediaFilesCodeDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMediaFilesCodeDownloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMediaFilesCodeDownloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMediaFilesCodeDownloadOK creates a GetMediaFilesCodeDownloadOK with default headers values
func NewGetMediaFilesCodeDownloadOK() *GetMediaFilesCodeDownloadOK {
	return &GetMediaFilesCodeDownloadOK{}
}

/*GetMediaFilesCodeDownloadOK handles this case with default header values.

OK
*/
type GetMediaFilesCodeDownloadOK struct {
}

func (o *GetMediaFilesCodeDownloadOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/media-files/{code}/download][%d] getMediaFilesCodeDownloadOK ", 200)
}

func (o *GetMediaFilesCodeDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMediaFilesCodeDownloadUnauthorized creates a GetMediaFilesCodeDownloadUnauthorized with default headers values
func NewGetMediaFilesCodeDownloadUnauthorized() *GetMediaFilesCodeDownloadUnauthorized {
	return &GetMediaFilesCodeDownloadUnauthorized{}
}

/*GetMediaFilesCodeDownloadUnauthorized handles this case with default header values.

Authentication required
*/
type GetMediaFilesCodeDownloadUnauthorized struct {
	Payload *GetMediaFilesCodeDownloadUnauthorizedBody
}

func (o *GetMediaFilesCodeDownloadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/media-files/{code}/download][%d] getMediaFilesCodeDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMediaFilesCodeDownloadUnauthorized) GetPayload() *GetMediaFilesCodeDownloadUnauthorizedBody {
	return o.Payload
}

func (o *GetMediaFilesCodeDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMediaFilesCodeDownloadUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMediaFilesCodeDownloadForbidden creates a GetMediaFilesCodeDownloadForbidden with default headers values
func NewGetMediaFilesCodeDownloadForbidden() *GetMediaFilesCodeDownloadForbidden {
	return &GetMediaFilesCodeDownloadForbidden{}
}

/*GetMediaFilesCodeDownloadForbidden handles this case with default header values.

Access forbidden
*/
type GetMediaFilesCodeDownloadForbidden struct {
	Payload *GetMediaFilesCodeDownloadForbiddenBody
}

func (o *GetMediaFilesCodeDownloadForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/media-files/{code}/download][%d] getMediaFilesCodeDownloadForbidden  %+v", 403, o.Payload)
}

func (o *GetMediaFilesCodeDownloadForbidden) GetPayload() *GetMediaFilesCodeDownloadForbiddenBody {
	return o.Payload
}

func (o *GetMediaFilesCodeDownloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMediaFilesCodeDownloadForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMediaFilesCodeDownloadNotFound creates a GetMediaFilesCodeDownloadNotFound with default headers values
func NewGetMediaFilesCodeDownloadNotFound() *GetMediaFilesCodeDownloadNotFound {
	return &GetMediaFilesCodeDownloadNotFound{}
}

/*GetMediaFilesCodeDownloadNotFound handles this case with default header values.

Resource not found
*/
type GetMediaFilesCodeDownloadNotFound struct {
	Payload *GetMediaFilesCodeDownloadNotFoundBody
}

func (o *GetMediaFilesCodeDownloadNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/media-files/{code}/download][%d] getMediaFilesCodeDownloadNotFound  %+v", 404, o.Payload)
}

func (o *GetMediaFilesCodeDownloadNotFound) GetPayload() *GetMediaFilesCodeDownloadNotFoundBody {
	return o.Payload
}

func (o *GetMediaFilesCodeDownloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMediaFilesCodeDownloadNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMediaFilesCodeDownloadForbiddenBody get media files code download forbidden body
swagger:model GetMediaFilesCodeDownloadForbiddenBody
*/
type GetMediaFilesCodeDownloadForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get media files code download forbidden body
func (o *GetMediaFilesCodeDownloadForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetMediaFilesCodeDownloadForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMediaFilesCodeDownloadNotFoundBody get media files code download not found body
swagger:model GetMediaFilesCodeDownloadNotFoundBody
*/
type GetMediaFilesCodeDownloadNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get media files code download not found body
func (o *GetMediaFilesCodeDownloadNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetMediaFilesCodeDownloadNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMediaFilesCodeDownloadUnauthorizedBody get media files code download unauthorized body
swagger:model GetMediaFilesCodeDownloadUnauthorizedBody
*/
type GetMediaFilesCodeDownloadUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get media files code download unauthorized body
func (o *GetMediaFilesCodeDownloadUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMediaFilesCodeDownloadUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetMediaFilesCodeDownloadUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

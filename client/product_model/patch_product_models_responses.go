// Code generated by go-swagger; DO NOT EDIT.

package product_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchProductModelsReader is a Reader for the PatchProductModels structure.
type PatchProductModelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchProductModelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchProductModelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchProductModelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchProductModelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchProductModelsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchProductModelsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchProductModelsOK creates a PatchProductModelsOK with default headers values
func NewPatchProductModelsOK() *PatchProductModelsOK {
	return &PatchProductModelsOK{}
}

/*PatchProductModelsOK handles this case with default header values.

OK
*/
type PatchProductModelsOK struct {
	Payload *PatchProductModelsOKBody
}

func (o *PatchProductModelsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/product-models][%d] patchProductModelsOK  %+v", 200, o.Payload)
}

func (o *PatchProductModelsOK) GetPayload() *PatchProductModelsOKBody {
	return o.Payload
}

func (o *PatchProductModelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchProductModelsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchProductModelsUnauthorized creates a PatchProductModelsUnauthorized with default headers values
func NewPatchProductModelsUnauthorized() *PatchProductModelsUnauthorized {
	return &PatchProductModelsUnauthorized{}
}

/*PatchProductModelsUnauthorized handles this case with default header values.

Authentication required
*/
type PatchProductModelsUnauthorized struct {
	Payload *PatchProductModelsUnauthorizedBody
}

func (o *PatchProductModelsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/product-models][%d] patchProductModelsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchProductModelsUnauthorized) GetPayload() *PatchProductModelsUnauthorizedBody {
	return o.Payload
}

func (o *PatchProductModelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchProductModelsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchProductModelsForbidden creates a PatchProductModelsForbidden with default headers values
func NewPatchProductModelsForbidden() *PatchProductModelsForbidden {
	return &PatchProductModelsForbidden{}
}

/*PatchProductModelsForbidden handles this case with default header values.

Access forbidden
*/
type PatchProductModelsForbidden struct {
	Payload *PatchProductModelsForbiddenBody
}

func (o *PatchProductModelsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/product-models][%d] patchProductModelsForbidden  %+v", 403, o.Payload)
}

func (o *PatchProductModelsForbidden) GetPayload() *PatchProductModelsForbiddenBody {
	return o.Payload
}

func (o *PatchProductModelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchProductModelsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchProductModelsRequestEntityTooLarge creates a PatchProductModelsRequestEntityTooLarge with default headers values
func NewPatchProductModelsRequestEntityTooLarge() *PatchProductModelsRequestEntityTooLarge {
	return &PatchProductModelsRequestEntityTooLarge{}
}

/*PatchProductModelsRequestEntityTooLarge handles this case with default header values.

Request Entity Too Large
*/
type PatchProductModelsRequestEntityTooLarge struct {
	Payload *PatchProductModelsRequestEntityTooLargeBody
}

func (o *PatchProductModelsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/product-models][%d] patchProductModelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchProductModelsRequestEntityTooLarge) GetPayload() *PatchProductModelsRequestEntityTooLargeBody {
	return o.Payload
}

func (o *PatchProductModelsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchProductModelsRequestEntityTooLargeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchProductModelsUnsupportedMediaType creates a PatchProductModelsUnsupportedMediaType with default headers values
func NewPatchProductModelsUnsupportedMediaType() *PatchProductModelsUnsupportedMediaType {
	return &PatchProductModelsUnsupportedMediaType{}
}

/*PatchProductModelsUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchProductModelsUnsupportedMediaType struct {
	Payload *PatchProductModelsUnsupportedMediaTypeBody
}

func (o *PatchProductModelsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/product-models][%d] patchProductModelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchProductModelsUnsupportedMediaType) GetPayload() *PatchProductModelsUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchProductModelsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchProductModelsUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchProductModelsBody patch product models body
swagger:model PatchProductModelsBody
*/
type PatchProductModelsBody struct {

	// associations
	Associations *PatchProductModelsParamsBodyAssociations `json:"associations,omitempty"`

	// Codes of the categories in which the product model is categorized
	Categories []string `json:"categories"`

	// Product model code
	// Required: true
	Code *string `json:"code"`

	// Date of creation
	Created string `json:"created,omitempty"`

	// Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)
	Family string `json:"family,omitempty"`

	// Family variant code from which the product model inherits its attributes and variant attributes
	// Required: true
	FamilyVariant *string `json:"family_variant"`

	// metadata
	Metadata *PatchProductModelsParamsBodyMetadata `json:"metadata,omitempty"`

	// Code of the parent product model. This parent can be modified since the 2.3.
	Parent *string `json:"parent,omitempty"`

	// quantified associations
	QuantifiedAssociations *PatchProductModelsParamsBodyQuantifiedAssociations `json:"quantified_associations,omitempty"`

	// Date of the last update
	Updated string `json:"updated,omitempty"`

	// values
	Values *PatchProductModelsParamsBodyValues `json:"values,omitempty"`
}

// Validate validates this patch product models body
func (o *PatchProductModelsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFamilyVariant(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateQuantifiedAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchProductModelsBody) validateAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.Associations) { // not required
		return nil
	}

	if o.Associations != nil {
		if err := o.Associations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "associations")
			}
			return err
		}
	}

	return nil
}

func (o *PatchProductModelsBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchProductModelsBody) validateFamilyVariant(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"family_variant", "body", o.FamilyVariant); err != nil {
		return err
	}

	return nil
}

func (o *PatchProductModelsBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PatchProductModelsBody) validateQuantifiedAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.QuantifiedAssociations) { // not required
		return nil
	}

	if o.QuantifiedAssociations != nil {
		if err := o.QuantifiedAssociations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "quantified_associations")
			}
			return err
		}
	}

	return nil
}

func (o *PatchProductModelsBody) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsForbiddenBody patch product models forbidden body
swagger:model PatchProductModelsForbiddenBody
*/
type PatchProductModelsForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch product models forbidden body
func (o *PatchProductModelsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsOKBody patch product models o k body
swagger:model PatchProductModelsOKBody
*/
type PatchProductModelsOKBody struct {

	// Resource code, only filled when the resource is not a product
	Code string `json:"code,omitempty"`

	// Resource identifier, only filled when the resource is a product
	Identifier string `json:"identifier,omitempty"`

	// Line number
	Line int64 `json:"line,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`

	// HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this patch product models o k body
func (o *PatchProductModelsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsOKBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyAssociations Several associations related to groups, product and/or other product models, grouped by association types
swagger:model PatchProductModelsParamsBodyAssociations
*/
type PatchProductModelsParamsBodyAssociations struct {

	// association type code
	AssociationTypeCode *PatchProductModelsParamsBodyAssociationsAssociationTypeCode `json:"associationTypeCode,omitempty"`
}

// Validate validates this patch product models params body associations
func (o *PatchProductModelsParamsBodyAssociations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchProductModelsParamsBodyAssociations) validateAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AssociationTypeCode) { // not required
		return nil
	}

	if o.AssociationTypeCode != nil {
		if err := o.AssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "associations" + "." + "associationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyAssociations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyAssociations) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyAssociations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyAssociationsAssociationTypeCode patch product models params body associations association type code
swagger:model PatchProductModelsParamsBodyAssociationsAssociationTypeCode
*/
type PatchProductModelsParamsBodyAssociationsAssociationTypeCode struct {

	// Array of groups codes with which the product is in relation
	Groups []string `json:"groups"`

	// Array of product model codes with which the product is in relation (only available since the v2.1)
	ProductModels []string `json:"product_models"`

	// Array of product identifiers with which the product is in relation
	Products []string `json:"products"`
}

// Validate validates this patch product models params body associations association type code
func (o *PatchProductModelsParamsBodyAssociationsAssociationTypeCode) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyAssociationsAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyAssociationsAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyAssociationsAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyMetadata More information around the product model (only available since the v2.3 in the Enterprise Edition)
swagger:model PatchProductModelsParamsBodyMetadata
*/
type PatchProductModelsParamsBodyMetadata struct {

	// Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)
	// Enum: [read_only draft_in_progress proposal_waiting_for_approval working_copy]
	WorkflowStatus string `json:"workflow_status,omitempty"`
}

// Validate validates this patch product models params body metadata
func (o *PatchProductModelsParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateWorkflowStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchProductModelsParamsBodyMetadataTypeWorkflowStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["read_only","draft_in_progress","proposal_waiting_for_approval","working_copy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchProductModelsParamsBodyMetadataTypeWorkflowStatusPropEnum = append(patchProductModelsParamsBodyMetadataTypeWorkflowStatusPropEnum, v)
	}
}

const (

	// PatchProductModelsParamsBodyMetadataWorkflowStatusReadOnly captures enum value "read_only"
	PatchProductModelsParamsBodyMetadataWorkflowStatusReadOnly string = "read_only"

	// PatchProductModelsParamsBodyMetadataWorkflowStatusDraftInProgress captures enum value "draft_in_progress"
	PatchProductModelsParamsBodyMetadataWorkflowStatusDraftInProgress string = "draft_in_progress"

	// PatchProductModelsParamsBodyMetadataWorkflowStatusProposalWaitingForApproval captures enum value "proposal_waiting_for_approval"
	PatchProductModelsParamsBodyMetadataWorkflowStatusProposalWaitingForApproval string = "proposal_waiting_for_approval"

	// PatchProductModelsParamsBodyMetadataWorkflowStatusWorkingCopy captures enum value "working_copy"
	PatchProductModelsParamsBodyMetadataWorkflowStatusWorkingCopy string = "working_copy"
)

// prop value enum
func (o *PatchProductModelsParamsBodyMetadata) validateWorkflowStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchProductModelsParamsBodyMetadataTypeWorkflowStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchProductModelsParamsBodyMetadata) validateWorkflowStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.WorkflowStatus) { // not required
		return nil
	}

	// value enum
	if err := o.validateWorkflowStatusEnum("body"+"."+"metadata"+"."+"workflow_status", "body", o.WorkflowStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyQuantifiedAssociations Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)
swagger:model PatchProductModelsParamsBodyQuantifiedAssociations
*/
type PatchProductModelsParamsBodyQuantifiedAssociations struct {

	// quantified association type code
	QuantifiedAssociationTypeCode *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode `json:"quantifiedAssociationTypeCode,omitempty"`
}

// Validate validates this patch product models params body quantified associations
func (o *PatchProductModelsParamsBodyQuantifiedAssociations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuantifiedAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchProductModelsParamsBodyQuantifiedAssociations) validateQuantifiedAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.QuantifiedAssociationTypeCode) { // not required
		return nil
	}

	if o.QuantifiedAssociationTypeCode != nil {
		if err := o.QuantifiedAssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociations) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyQuantifiedAssociations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode patch product models params body quantified associations quantified association type code
swagger:model PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode
*/
type PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode struct {

	// Array of objects containing product model codes and quantities with which the product model is in relation
	ProductModels []*PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 `json:"product_models"`

	// Array of objects containing product identifiers and quantities with which the product model is in relation
	Products []*PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 `json:"products"`
}

// Validate validates this patch product models params body quantified associations quantified association type code
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProductModels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) validateProductModels(formats strfmt.Registry) error {

	if swag.IsZero(o.ProductModels) { // not required
		return nil
	}

	for i := 0; i < len(o.ProductModels); i++ {
		if swag.IsZero(o.ProductModels[i]) { // not required
			continue
		}

		if o.ProductModels[i] != nil {
			if err := o.ProductModels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode" + "." + "product_models" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(o.Products) { // not required
		return nil
	}

	for i := 0; i < len(o.Products); i++ {
		if swag.IsZero(o.Products[i]) { // not required
			continue
		}

		if o.Products[i] != nil {
			if err := o.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "quantified_associations" + "." + "quantifiedAssociationTypeCode" + "." + "products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 patch product models params body quantified associations quantified association type code product models items0
swagger:model PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0
*/
type PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`
}

// Validate validates this patch product models params body quantified associations quantified association type code product models items0
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductModelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 patch product models params body quantified associations quantified association type code products items0
swagger:model PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0
*/
type PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0 struct {

	// identifier
	Identifier string `json:"identifier,omitempty"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`
}

// Validate validates this patch product models params body quantified associations quantified association type code products items0
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyQuantifiedAssociationsQuantifiedAssociationTypeCodeProductsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyValues Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details
swagger:model PatchProductModelsParamsBodyValues
*/
type PatchProductModelsParamsBodyValues struct {

	// attribute code
	AttributeCode []*PatchProductModelsParamsBodyValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this patch product models params body values
func (o *PatchProductModelsParamsBodyValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchProductModelsParamsBodyValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyValues) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyValues) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsParamsBodyValuesAttributeCodeItems0 patch product models params body values attribute code items0
swagger:model PatchProductModelsParamsBodyValuesAttributeCodeItems0
*/
type PatchProductModelsParamsBodyValuesAttributeCodeItems0 struct {

	// Product value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the product value
	Locale string `json:"locale,omitempty"`

	// Channel code of the product value
	Scope string `json:"scope,omitempty"`
}

// Validate validates this patch product models params body values attribute code items0
func (o *PatchProductModelsParamsBodyValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsParamsBodyValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsParamsBodyValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsRequestEntityTooLargeBody patch product models request entity too large body
swagger:model PatchProductModelsRequestEntityTooLargeBody
*/
type PatchProductModelsRequestEntityTooLargeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch product models request entity too large body
func (o *PatchProductModelsRequestEntityTooLargeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsRequestEntityTooLargeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsRequestEntityTooLargeBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsRequestEntityTooLargeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsUnauthorizedBody patch product models unauthorized body
swagger:model PatchProductModelsUnauthorizedBody
*/
type PatchProductModelsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch product models unauthorized body
func (o *PatchProductModelsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchProductModelsUnsupportedMediaTypeBody patch product models unsupported media type body
swagger:model PatchProductModelsUnsupportedMediaTypeBody
*/
type PatchProductModelsUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch product models unsupported media type body
func (o *PatchProductModelsUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchProductModelsUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchProductModelsUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchProductModelsUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

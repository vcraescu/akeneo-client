// Code generated by go-swagger; DO NOT EDIT.

package published_product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPublishedProductsCodeReader is a Reader for the GetPublishedProductsCode structure.
type GetPublishedProductsCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPublishedProductsCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPublishedProductsCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPublishedProductsCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPublishedProductsCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPublishedProductsCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetPublishedProductsCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPublishedProductsCodeOK creates a GetPublishedProductsCodeOK with default headers values
func NewGetPublishedProductsCodeOK() *GetPublishedProductsCodeOK {
	return &GetPublishedProductsCodeOK{}
}

/*GetPublishedProductsCodeOK handles this case with default header values.

OK
*/
type GetPublishedProductsCodeOK struct {
	Payload *GetPublishedProductsCodeOKBody
}

func (o *GetPublishedProductsCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products/{code}][%d] getPublishedProductsCodeOK  %+v", 200, o.Payload)
}

func (o *GetPublishedProductsCodeOK) GetPayload() *GetPublishedProductsCodeOKBody {
	return o.Payload
}

func (o *GetPublishedProductsCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsCodeUnauthorized creates a GetPublishedProductsCodeUnauthorized with default headers values
func NewGetPublishedProductsCodeUnauthorized() *GetPublishedProductsCodeUnauthorized {
	return &GetPublishedProductsCodeUnauthorized{}
}

/*GetPublishedProductsCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetPublishedProductsCodeUnauthorized struct {
	Payload *GetPublishedProductsCodeUnauthorizedBody
}

func (o *GetPublishedProductsCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products/{code}][%d] getPublishedProductsCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPublishedProductsCodeUnauthorized) GetPayload() *GetPublishedProductsCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetPublishedProductsCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsCodeForbidden creates a GetPublishedProductsCodeForbidden with default headers values
func NewGetPublishedProductsCodeForbidden() *GetPublishedProductsCodeForbidden {
	return &GetPublishedProductsCodeForbidden{}
}

/*GetPublishedProductsCodeForbidden handles this case with default header values.

Access forbidden
*/
type GetPublishedProductsCodeForbidden struct {
	Payload *GetPublishedProductsCodeForbiddenBody
}

func (o *GetPublishedProductsCodeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products/{code}][%d] getPublishedProductsCodeForbidden  %+v", 403, o.Payload)
}

func (o *GetPublishedProductsCodeForbidden) GetPayload() *GetPublishedProductsCodeForbiddenBody {
	return o.Payload
}

func (o *GetPublishedProductsCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsCodeForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsCodeNotFound creates a GetPublishedProductsCodeNotFound with default headers values
func NewGetPublishedProductsCodeNotFound() *GetPublishedProductsCodeNotFound {
	return &GetPublishedProductsCodeNotFound{}
}

/*GetPublishedProductsCodeNotFound handles this case with default header values.

Resource not found
*/
type GetPublishedProductsCodeNotFound struct {
	Payload *GetPublishedProductsCodeNotFoundBody
}

func (o *GetPublishedProductsCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products/{code}][%d] getPublishedProductsCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetPublishedProductsCodeNotFound) GetPayload() *GetPublishedProductsCodeNotFoundBody {
	return o.Payload
}

func (o *GetPublishedProductsCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsCodeNotAcceptable creates a GetPublishedProductsCodeNotAcceptable with default headers values
func NewGetPublishedProductsCodeNotAcceptable() *GetPublishedProductsCodeNotAcceptable {
	return &GetPublishedProductsCodeNotAcceptable{}
}

/*GetPublishedProductsCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetPublishedProductsCodeNotAcceptable struct {
	Payload *GetPublishedProductsCodeNotAcceptableBody
}

func (o *GetPublishedProductsCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products/{code}][%d] getPublishedProductsCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetPublishedProductsCodeNotAcceptable) GetPayload() *GetPublishedProductsCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetPublishedProductsCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPublishedProductsCodeForbiddenBody get published products code forbidden body
swagger:model GetPublishedProductsCodeForbiddenBody
*/
type GetPublishedProductsCodeForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products code forbidden body
func (o *GetPublishedProductsCodeForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeNotAcceptableBody get published products code not acceptable body
swagger:model GetPublishedProductsCodeNotAcceptableBody
*/
type GetPublishedProductsCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products code not acceptable body
func (o *GetPublishedProductsCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeNotFoundBody get published products code not found body
swagger:model GetPublishedProductsCodeNotFoundBody
*/
type GetPublishedProductsCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products code not found body
func (o *GetPublishedProductsCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeOKBody get published products code o k body
swagger:model GetPublishedProductsCodeOKBody
*/
type GetPublishedProductsCodeOKBody struct {

	// associations
	Associations *GetPublishedProductsCodeOKBodyAssociations `json:"associations,omitempty"`

	// Codes of the categories in which the published product is classified
	Categories []string `json:"categories"`

	// Date of creation
	Created string `json:"created,omitempty"`

	// Whether the published product is enable
	Enabled *bool `json:"enabled,omitempty"`

	// Family code from which the published product inherits its attributes and attributes requirements
	Family *string `json:"family,omitempty"`

	// Codes of the groups to which the published product belong
	Groups []string `json:"groups"`

	// Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute
	// Required: true
	Identifier *string `json:"identifier"`

	// Date of the last update
	Updated string `json:"updated,omitempty"`

	// values
	Values *GetPublishedProductsCodeOKBodyValues `json:"values,omitempty"`
}

// Validate validates this get published products code o k body
func (o *GetPublishedProductsCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsCodeOKBody) validateAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.Associations) { // not required
		return nil
	}

	if o.Associations != nil {
		if err := o.Associations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsCodeOK" + "." + "associations")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsCodeOKBody) validateIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("getPublishedProductsCodeOK"+"."+"identifier", "body", o.Identifier); err != nil {
		return err
	}

	return nil
}

func (o *GetPublishedProductsCodeOKBody) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsCodeOK" + "." + "values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeOKBodyAssociations Several associations related to groups and/or other published products, grouped by association types
swagger:model GetPublishedProductsCodeOKBodyAssociations
*/
type GetPublishedProductsCodeOKBodyAssociations struct {

	// association type code
	AssociationTypeCode *GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode `json:"associationTypeCode,omitempty"`
}

// Validate validates this get published products code o k body associations
func (o *GetPublishedProductsCodeOKBodyAssociations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsCodeOKBodyAssociations) validateAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AssociationTypeCode) { // not required
		return nil
	}

	if o.AssociationTypeCode != nil {
		if err := o.AssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsCodeOK" + "." + "associations" + "." + "associationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyAssociations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyAssociations) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeOKBodyAssociations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode get published products code o k body associations association type code
swagger:model GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode
*/
type GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode struct {

	// Array of groups codes with which the published product is in relation
	Groups []string `json:"groups"`

	// Array of product model codes with which the product is in relation (only available since the v2.1)
	ProductModels []string `json:"product_models"`

	// Array of published product identifiers with which the published product is in relation
	Products []string `json:"products"`
}

// Validate validates this get published products code o k body associations association type code
func (o *GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeOKBodyAssociationsAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeOKBodyValues Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details
swagger:model GetPublishedProductsCodeOKBodyValues
*/
type GetPublishedProductsCodeOKBodyValues struct {

	// attribute code
	AttributeCode []*GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this get published products code o k body values
func (o *GetPublishedProductsCodeOKBodyValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsCodeOKBodyValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPublishedProductsCodeOK" + "." + "values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyValues) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyValues) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeOKBodyValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0 get published products code o k body values attribute code items0
swagger:model GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0
*/
type GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0 struct {

	// Product value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the product value
	Locale string `json:"locale,omitempty"`

	// Channel code of the product value
	Scope string `json:"scope,omitempty"`
}

// Validate validates this get published products code o k body values attribute code items0
func (o *GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeOKBodyValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsCodeUnauthorizedBody get published products code unauthorized body
swagger:model GetPublishedProductsCodeUnauthorizedBody
*/
type GetPublishedProductsCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products code unauthorized body
func (o *GetPublishedProductsCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

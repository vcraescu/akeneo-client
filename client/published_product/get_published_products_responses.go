// Code generated by go-swagger; DO NOT EDIT.

package published_product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPublishedProductsReader is a Reader for the GetPublishedProducts structure.
type GetPublishedProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPublishedProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPublishedProductsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPublishedProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPublishedProductsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPublishedProductsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetPublishedProductsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetPublishedProductsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPublishedProductsOK creates a GetPublishedProductsOK with default headers values
func NewGetPublishedProductsOK() *GetPublishedProductsOK {
	return &GetPublishedProductsOK{}
}

/*GetPublishedProductsOK handles this case with default header values.

Return published products paginated
*/
type GetPublishedProductsOK struct {
	Payload *GetPublishedProductsOKBody
}

func (o *GetPublishedProductsOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsOK  %+v", 200, o.Payload)
}

func (o *GetPublishedProductsOK) GetPayload() *GetPublishedProductsOKBody {
	return o.Payload
}

func (o *GetPublishedProductsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsBadRequest creates a GetPublishedProductsBadRequest with default headers values
func NewGetPublishedProductsBadRequest() *GetPublishedProductsBadRequest {
	return &GetPublishedProductsBadRequest{}
}

/*GetPublishedProductsBadRequest handles this case with default header values.

Bad request
*/
type GetPublishedProductsBadRequest struct {
	Payload *GetPublishedProductsBadRequestBody
}

func (o *GetPublishedProductsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPublishedProductsBadRequest) GetPayload() *GetPublishedProductsBadRequestBody {
	return o.Payload
}

func (o *GetPublishedProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsUnauthorized creates a GetPublishedProductsUnauthorized with default headers values
func NewGetPublishedProductsUnauthorized() *GetPublishedProductsUnauthorized {
	return &GetPublishedProductsUnauthorized{}
}

/*GetPublishedProductsUnauthorized handles this case with default header values.

Authentication required
*/
type GetPublishedProductsUnauthorized struct {
	Payload *GetPublishedProductsUnauthorizedBody
}

func (o *GetPublishedProductsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPublishedProductsUnauthorized) GetPayload() *GetPublishedProductsUnauthorizedBody {
	return o.Payload
}

func (o *GetPublishedProductsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsForbidden creates a GetPublishedProductsForbidden with default headers values
func NewGetPublishedProductsForbidden() *GetPublishedProductsForbidden {
	return &GetPublishedProductsForbidden{}
}

/*GetPublishedProductsForbidden handles this case with default header values.

Access forbidden
*/
type GetPublishedProductsForbidden struct {
	Payload *GetPublishedProductsForbiddenBody
}

func (o *GetPublishedProductsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsForbidden  %+v", 403, o.Payload)
}

func (o *GetPublishedProductsForbidden) GetPayload() *GetPublishedProductsForbiddenBody {
	return o.Payload
}

func (o *GetPublishedProductsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsNotAcceptable creates a GetPublishedProductsNotAcceptable with default headers values
func NewGetPublishedProductsNotAcceptable() *GetPublishedProductsNotAcceptable {
	return &GetPublishedProductsNotAcceptable{}
}

/*GetPublishedProductsNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetPublishedProductsNotAcceptable struct {
	Payload *GetPublishedProductsNotAcceptableBody
}

func (o *GetPublishedProductsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetPublishedProductsNotAcceptable) GetPayload() *GetPublishedProductsNotAcceptableBody {
	return o.Payload
}

func (o *GetPublishedProductsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishedProductsUnprocessableEntity creates a GetPublishedProductsUnprocessableEntity with default headers values
func NewGetPublishedProductsUnprocessableEntity() *GetPublishedProductsUnprocessableEntity {
	return &GetPublishedProductsUnprocessableEntity{}
}

/*GetPublishedProductsUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type GetPublishedProductsUnprocessableEntity struct {
	Payload *GetPublishedProductsUnprocessableEntityBody
}

func (o *GetPublishedProductsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/published-products][%d] getPublishedProductsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetPublishedProductsUnprocessableEntity) GetPayload() *GetPublishedProductsUnprocessableEntityBody {
	return o.Payload
}

func (o *GetPublishedProductsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishedProductsUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPublishedProductsBadRequestBody get published products bad request body
swagger:model GetPublishedProductsBadRequestBody
*/
type GetPublishedProductsBadRequestBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products bad request body
func (o *GetPublishedProductsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsForbiddenBody get published products forbidden body
swagger:model GetPublishedProductsForbiddenBody
*/
type GetPublishedProductsForbiddenBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products forbidden body
func (o *GetPublishedProductsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsNotAcceptableBody get published products not acceptable body
swagger:model GetPublishedProductsNotAcceptableBody
*/
type GetPublishedProductsNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products not acceptable body
func (o *GetPublishedProductsNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBody Products
swagger:model GetPublishedProductsOKBody
*/
type GetPublishedProductsOKBody struct {

	// links
	Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links `json:"_links,omitempty"`

	// Current page number
	CurrentPage int64 `json:"current_page,omitempty"`

	// embedded
	Embedded *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded `json:"_embedded,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetPublishedProductsOKBody) UnmarshalJSON(raw []byte) error {
	// GetPublishedProductsOKBodyAO0
	var dataGetPublishedProductsOKBodyAO0 struct {
		Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetPublishedProductsOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetPublishedProductsOKBodyAO0.Links

	o.CurrentPage = dataGetPublishedProductsOKBodyAO0.CurrentPage

	// GetPublishedProductsOKBodyAO1
	var dataGetPublishedProductsOKBodyAO1 struct {
		Embedded *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetPublishedProductsOKBodyAO1); err != nil {
		return err
	}

	o.Embedded = dataGetPublishedProductsOKBodyAO1.Embedded

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetPublishedProductsOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetPublishedProductsOKBodyAO0 struct {
		Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links `json:"_links,omitempty"`

		CurrentPage int64 `json:"current_page,omitempty"`
	}

	dataGetPublishedProductsOKBodyAO0.Links = o.Links

	dataGetPublishedProductsOKBodyAO0.CurrentPage = o.CurrentPage

	jsonDataGetPublishedProductsOKBodyAO0, errGetPublishedProductsOKBodyAO0 := swag.WriteJSON(dataGetPublishedProductsOKBodyAO0)
	if errGetPublishedProductsOKBodyAO0 != nil {
		return nil, errGetPublishedProductsOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetPublishedProductsOKBodyAO0)
	var dataGetPublishedProductsOKBodyAO1 struct {
		Embedded *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded `json:"_embedded,omitempty"`
	}

	dataGetPublishedProductsOKBodyAO1.Embedded = o.Embedded

	jsonDataGetPublishedProductsOKBodyAO1, errGetPublishedProductsOKBodyAO1 := swag.WriteJSON(dataGetPublishedProductsOKBodyAO1)
	if errGetPublishedProductsOKBodyAO1 != nil {
		return nil, errGetPublishedProductsOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetPublishedProductsOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get published products o k body
func (o *GetPublishedProductsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links get published products o k body get published products o k body a o0 links
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links struct {

	// first
	First *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst `json:"first,omitempty"`

	// next
	Next *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext `json:"next,omitempty"`

	// previous
	Previous *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious `json:"previous,omitempty"`

	// self
	Self *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o0 links
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrevious(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(o.First) { // not required
		return nil
	}

	if o.First != nil {
		if err := o.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(o.Next) { // not required
		return nil
	}

	if o.Next != nil {
		if err := o.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) validatePrevious(formats strfmt.Registry) error {

	if swag.IsZero(o.Previous) { // not required
		return nil
	}

	if o.Previous != nil {
		if err := o.Previous.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_links" + "." + "previous")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishedProductsOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst get published products o k body get published products o k body a o0 links first
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst struct {

	// URI of the first page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o0 links first
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext get published products o k body get published products o k body a o0 links next
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext struct {

	// URI of the next page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o0 links next
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious get published products o k body get published products o k body a o0 links previous
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious struct {

	// URI of the previous page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o0 links previous
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksPrevious
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf get published products o k body get published products o k body a o0 links self
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf struct {

	// URI of the current page of resources
	Href string `json:"href,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o0 links self
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded get published products o k body get published products o k body a o1 embedded
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded struct {

	// items
	Items []*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0 `json:"items"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(o.Items) { // not required
		return nil
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPublishedProductsOK" + "." + "_embedded" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1Embedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0 get published products o k body get published products o k body a o1 embedded items items0
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0 struct {

	// links
	Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`

	// associations
	Associations *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations `json:"associations,omitempty"`

	// Codes of the categories in which the published product is classified
	Categories []string `json:"categories"`

	// Date of creation
	Created string `json:"created,omitempty"`

	// Whether the published product is enable
	Enabled *bool `json:"enabled,omitempty"`

	// Family code from which the published product inherits its attributes and attributes requirements
	Family *string `json:"family,omitempty"`

	// Codes of the groups to which the published product belong
	Groups []string `json:"groups"`

	// Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute
	// Required: true
	Identifier *string `json:"identifier"`

	// Date of the last update
	Updated string `json:"updated,omitempty"`

	// values
	Values *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	o.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		Associations *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations `json:"associations,omitempty"`

		Categories []string `json:"categories"`

		Created string `json:"created,omitempty"`

		Enabled *bool `json:"enabled,omitempty"`

		Family *string `json:"family,omitempty"`

		Groups []string `json:"groups"`

		Identifier *string `json:"identifier"`

		Updated string `json:"updated,omitempty"`

		Values *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.Associations = dataAO1.Associations

	o.Categories = dataAO1.Categories

	o.Created = dataAO1.Created

	o.Enabled = dataAO1.Enabled

	o.Family = dataAO1.Family

	o.Groups = dataAO1.Groups

	o.Identifier = dataAO1.Identifier

	o.Updated = dataAO1.Updated

	o.Values = dataAO1.Values

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = o.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		Associations *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations `json:"associations,omitempty"`

		Categories []string `json:"categories"`

		Created string `json:"created,omitempty"`

		Enabled *bool `json:"enabled,omitempty"`

		Family *string `json:"family,omitempty"`

		Groups []string `json:"groups"`

		Identifier *string `json:"identifier"`

		Updated string `json:"updated,omitempty"`

		Values *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values `json:"values,omitempty"`
	}

	dataAO1.Associations = o.Associations

	dataAO1.Categories = o.Categories

	dataAO1.Created = o.Created

	dataAO1.Enabled = o.Enabled

	dataAO1.Family = o.Family

	dataAO1.Groups = o.Groups

	dataAO1.Identifier = o.Identifier

	dataAO1.Updated = o.Updated

	dataAO1.Values = o.Values

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAssociations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) validateAssociations(formats strfmt.Registry) error {

	if swag.IsZero(o.Associations) { // not required
		return nil
	}

	if o.Associations != nil {
		if err := o.Associations.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associations")
			}
			return err
		}
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) validateIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("identifier", "body", o.Identifier); err != nil {
		return err
	}

	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links get published products o k body get published products o k body a o1 embedded items items0 a o0 links
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links struct {

	// self
	Self *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o0 links
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf get published products o k body get published products o k body a o1 embedded items items0 a o0 links self
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o0 links self
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations Several associations related to groups and/or other published products, grouped by association types
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations struct {

	// association type code
	AssociationTypeCode *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode `json:"associationTypeCode,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o1 associations
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssociationTypeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations) validateAssociationTypeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AssociationTypeCode) { // not required
		return nil
	}

	if o.AssociationTypeCode != nil {
		if err := o.AssociationTypeCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("associations" + "." + "associationTypeCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Associations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode get published products o k body get published products o k body a o1 embedded items items0 a o1 associations association type code
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode struct {

	// Array of groups codes with which the published product is in relation
	Groups []string `json:"groups"`

	// Array of product model codes with which the product is in relation (only available since the v2.1)
	ProductModels []string `json:"product_models"`

	// Array of published product identifiers with which the published product is in relation
	Products []string `json:"products"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o1 associations association type code
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1AssociationsAssociationTypeCode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values struct {

	// attribute code
	AttributeCode []*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o1 values
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1Values
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 get published products o k body get published products o k body a o1 embedded items items0 a o1 values attribute code items0
swagger:model GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0
*/
type GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0 struct {

	// Product value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the product value
	Locale string `json:"locale,omitempty"`

	// Channel code of the product value
	Scope string `json:"scope,omitempty"`
}

// Validate validates this get published products o k body get published products o k body a o1 embedded items items0 a o1 values attribute code items0
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsOKBodyGetPublishedProductsOKBodyAO1EmbeddedItemsItems0AO1ValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsUnauthorizedBody get published products unauthorized body
swagger:model GetPublishedProductsUnauthorizedBody
*/
type GetPublishedProductsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products unauthorized body
func (o *GetPublishedProductsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPublishedProductsUnprocessableEntityBody get published products unprocessable entity body
swagger:model GetPublishedProductsUnprocessableEntityBody
*/
type GetPublishedProductsUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get published products unprocessable entity body
func (o *GetPublishedProductsUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishedProductsUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishedProductsUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res GetPublishedProductsUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

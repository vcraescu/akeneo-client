// Code generated by go-swagger; DO NOT EDIT.

package reference_entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetReferenceEntitiesCodeReader is a Reader for the GetReferenceEntitiesCode structure.
type GetReferenceEntitiesCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferenceEntitiesCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferenceEntitiesCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReferenceEntitiesCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReferenceEntitiesCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetReferenceEntitiesCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferenceEntitiesCodeOK creates a GetReferenceEntitiesCodeOK with default headers values
func NewGetReferenceEntitiesCodeOK() *GetReferenceEntitiesCodeOK {
	return &GetReferenceEntitiesCodeOK{}
}

/*GetReferenceEntitiesCodeOK handles this case with default header values.

OK
*/
type GetReferenceEntitiesCodeOK struct {
	Payload *GetReferenceEntitiesCodeOKBody
}

func (o *GetReferenceEntitiesCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{code}][%d] getReferenceEntitiesCodeOK  %+v", 200, o.Payload)
}

func (o *GetReferenceEntitiesCodeOK) GetPayload() *GetReferenceEntitiesCodeOKBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntitiesCodeUnauthorized creates a GetReferenceEntitiesCodeUnauthorized with default headers values
func NewGetReferenceEntitiesCodeUnauthorized() *GetReferenceEntitiesCodeUnauthorized {
	return &GetReferenceEntitiesCodeUnauthorized{}
}

/*GetReferenceEntitiesCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetReferenceEntitiesCodeUnauthorized struct {
	Payload *GetReferenceEntitiesCodeUnauthorizedBody
}

func (o *GetReferenceEntitiesCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{code}][%d] getReferenceEntitiesCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReferenceEntitiesCodeUnauthorized) GetPayload() *GetReferenceEntitiesCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntitiesCodeNotFound creates a GetReferenceEntitiesCodeNotFound with default headers values
func NewGetReferenceEntitiesCodeNotFound() *GetReferenceEntitiesCodeNotFound {
	return &GetReferenceEntitiesCodeNotFound{}
}

/*GetReferenceEntitiesCodeNotFound handles this case with default header values.

Resource not found
*/
type GetReferenceEntitiesCodeNotFound struct {
	Payload *GetReferenceEntitiesCodeNotFoundBody
}

func (o *GetReferenceEntitiesCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{code}][%d] getReferenceEntitiesCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetReferenceEntitiesCodeNotFound) GetPayload() *GetReferenceEntitiesCodeNotFoundBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntitiesCodeNotAcceptable creates a GetReferenceEntitiesCodeNotAcceptable with default headers values
func NewGetReferenceEntitiesCodeNotAcceptable() *GetReferenceEntitiesCodeNotAcceptable {
	return &GetReferenceEntitiesCodeNotAcceptable{}
}

/*GetReferenceEntitiesCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetReferenceEntitiesCodeNotAcceptable struct {
	Payload *GetReferenceEntitiesCodeNotAcceptableBody
}

func (o *GetReferenceEntitiesCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{code}][%d] getReferenceEntitiesCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetReferenceEntitiesCodeNotAcceptable) GetPayload() *GetReferenceEntitiesCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReferenceEntitiesCodeNotAcceptableBody get reference entities code not acceptable body
swagger:model GetReferenceEntitiesCodeNotAcceptableBody
*/
type GetReferenceEntitiesCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entities code not acceptable body
func (o *GetReferenceEntitiesCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeNotFoundBody get reference entities code not found body
swagger:model GetReferenceEntitiesCodeNotFoundBody
*/
type GetReferenceEntitiesCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entities code not found body
func (o *GetReferenceEntitiesCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeOKBody get reference entities code o k body
swagger:model GetReferenceEntitiesCodeOKBody
*/
type GetReferenceEntitiesCodeOKBody struct {

	// links
	Links *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links `json:"_links,omitempty"`

	// Reference entity code
	// Required: true
	Code *string `json:"code"`

	// Code of the reference entity image
	Image string `json:"image,omitempty"`

	// labels
	Labels *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels `json:"labels,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetReferenceEntitiesCodeOKBody) UnmarshalJSON(raw []byte) error {
	// GetReferenceEntitiesCodeOKBodyAO0
	var dataGetReferenceEntitiesCodeOKBodyAO0 struct {
		Links *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetReferenceEntitiesCodeOKBodyAO0); err != nil {
		return err
	}

	o.Links = dataGetReferenceEntitiesCodeOKBodyAO0.Links

	// GetReferenceEntitiesCodeOKBodyAO1
	var dataGetReferenceEntitiesCodeOKBodyAO1 struct {
		Code *string `json:"code"`

		Image string `json:"image,omitempty"`

		Labels *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels `json:"labels,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetReferenceEntitiesCodeOKBodyAO1); err != nil {
		return err
	}

	o.Code = dataGetReferenceEntitiesCodeOKBodyAO1.Code

	o.Image = dataGetReferenceEntitiesCodeOKBodyAO1.Image

	o.Labels = dataGetReferenceEntitiesCodeOKBodyAO1.Labels

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetReferenceEntitiesCodeOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataGetReferenceEntitiesCodeOKBodyAO0 struct {
		Links *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links `json:"_links,omitempty"`
	}

	dataGetReferenceEntitiesCodeOKBodyAO0.Links = o.Links

	jsonDataGetReferenceEntitiesCodeOKBodyAO0, errGetReferenceEntitiesCodeOKBodyAO0 := swag.WriteJSON(dataGetReferenceEntitiesCodeOKBodyAO0)
	if errGetReferenceEntitiesCodeOKBodyAO0 != nil {
		return nil, errGetReferenceEntitiesCodeOKBodyAO0
	}
	_parts = append(_parts, jsonDataGetReferenceEntitiesCodeOKBodyAO0)
	var dataGetReferenceEntitiesCodeOKBodyAO1 struct {
		Code *string `json:"code"`

		Image string `json:"image,omitempty"`

		Labels *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels `json:"labels,omitempty"`
	}

	dataGetReferenceEntitiesCodeOKBodyAO1.Code = o.Code

	dataGetReferenceEntitiesCodeOKBodyAO1.Image = o.Image

	dataGetReferenceEntitiesCodeOKBodyAO1.Labels = o.Labels

	jsonDataGetReferenceEntitiesCodeOKBodyAO1, errGetReferenceEntitiesCodeOKBodyAO1 := swag.WriteJSON(dataGetReferenceEntitiesCodeOKBodyAO1)
	if errGetReferenceEntitiesCodeOKBodyAO1 != nil {
		return nil, errGetReferenceEntitiesCodeOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetReferenceEntitiesCodeOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get reference entities code o k body
func (o *GetReferenceEntitiesCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceEntitiesCodeOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceEntitiesCodeOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *GetReferenceEntitiesCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getReferenceEntitiesCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetReferenceEntitiesCodeOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceEntitiesCodeOK" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links get reference entities code o k body get reference entities code o k body a o0 links
swagger:model GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links
*/
type GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links struct {

	// image download
	ImageDownload *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload `json:"image_download,omitempty"`
}

// Validate validates this get reference entities code o k body get reference entities code o k body a o0 links
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateImageDownload(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links) validateImageDownload(formats strfmt.Registry) error {

	if swag.IsZero(o.ImageDownload) { // not required
		return nil
	}

	if o.ImageDownload != nil {
		if err := o.ImageDownload.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceEntitiesCodeOK" + "." + "_links" + "." + "image_download")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload get reference entities code o k body get reference entities code o k body a o0 links image download
swagger:model GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload
*/
type GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload struct {

	// URI to download the binaries of the reference entity image file
	Href string `json:"href,omitempty"`
}

// Validate validates this get reference entities code o k body get reference entities code o k body a o0 links image download
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO0LinksImageDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels Reference entity labels for each locale
swagger:model GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels
*/
type GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels struct {

	// Reference entity label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get reference entities code o k body get reference entities code o k body a o1 labels
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeOKBodyGetReferenceEntitiesCodeOKBodyAO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeUnauthorizedBody get reference entities code unauthorized body
swagger:model GetReferenceEntitiesCodeUnauthorizedBody
*/
type GetReferenceEntitiesCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entities code unauthorized body
func (o *GetReferenceEntitiesCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

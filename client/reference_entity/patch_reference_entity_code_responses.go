// Code generated by go-swagger; DO NOT EDIT.

package reference_entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchReferenceEntityCodeReader is a Reader for the PatchReferenceEntityCode structure.
type PatchReferenceEntityCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchReferenceEntityCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchReferenceEntityCodeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchReferenceEntityCodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchReferenceEntityCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchReferenceEntityCodeUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchReferenceEntityCodeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchReferenceEntityCodeCreated creates a PatchReferenceEntityCodeCreated with default headers values
func NewPatchReferenceEntityCodeCreated() *PatchReferenceEntityCodeCreated {
	return &PatchReferenceEntityCodeCreated{}
}

/*PatchReferenceEntityCodeCreated handles this case with default header values.

Created
*/
type PatchReferenceEntityCodeCreated struct {
	/*URI of the created resource
	 */
	Location string
}

func (o *PatchReferenceEntityCodeCreated) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{code}][%d] patchReferenceEntityCodeCreated ", 201)
}

func (o *PatchReferenceEntityCodeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchReferenceEntityCodeNoContent creates a PatchReferenceEntityCodeNoContent with default headers values
func NewPatchReferenceEntityCodeNoContent() *PatchReferenceEntityCodeNoContent {
	return &PatchReferenceEntityCodeNoContent{}
}

/*PatchReferenceEntityCodeNoContent handles this case with default header values.

No content to return
*/
type PatchReferenceEntityCodeNoContent struct {
	/*URI of the updated resource
	 */
	Location string
}

func (o *PatchReferenceEntityCodeNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{code}][%d] patchReferenceEntityCodeNoContent ", 204)
}

func (o *PatchReferenceEntityCodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPatchReferenceEntityCodeUnauthorized creates a PatchReferenceEntityCodeUnauthorized with default headers values
func NewPatchReferenceEntityCodeUnauthorized() *PatchReferenceEntityCodeUnauthorized {
	return &PatchReferenceEntityCodeUnauthorized{}
}

/*PatchReferenceEntityCodeUnauthorized handles this case with default header values.

Authentication required
*/
type PatchReferenceEntityCodeUnauthorized struct {
	Payload *PatchReferenceEntityCodeUnauthorizedBody
}

func (o *PatchReferenceEntityCodeUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{code}][%d] patchReferenceEntityCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchReferenceEntityCodeUnauthorized) GetPayload() *PatchReferenceEntityCodeUnauthorizedBody {
	return o.Payload
}

func (o *PatchReferenceEntityCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchReferenceEntityCodeUnsupportedMediaType creates a PatchReferenceEntityCodeUnsupportedMediaType with default headers values
func NewPatchReferenceEntityCodeUnsupportedMediaType() *PatchReferenceEntityCodeUnsupportedMediaType {
	return &PatchReferenceEntityCodeUnsupportedMediaType{}
}

/*PatchReferenceEntityCodeUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchReferenceEntityCodeUnsupportedMediaType struct {
	Payload *PatchReferenceEntityCodeUnsupportedMediaTypeBody
}

func (o *PatchReferenceEntityCodeUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{code}][%d] patchReferenceEntityCodeUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchReferenceEntityCodeUnsupportedMediaType) GetPayload() *PatchReferenceEntityCodeUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchReferenceEntityCodeUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityCodeUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchReferenceEntityCodeUnprocessableEntity creates a PatchReferenceEntityCodeUnprocessableEntity with default headers values
func NewPatchReferenceEntityCodeUnprocessableEntity() *PatchReferenceEntityCodeUnprocessableEntity {
	return &PatchReferenceEntityCodeUnprocessableEntity{}
}

/*PatchReferenceEntityCodeUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PatchReferenceEntityCodeUnprocessableEntity struct {
	Payload *PatchReferenceEntityCodeUnprocessableEntityBody
}

func (o *PatchReferenceEntityCodeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{code}][%d] patchReferenceEntityCodeUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchReferenceEntityCodeUnprocessableEntity) GetPayload() *PatchReferenceEntityCodeUnprocessableEntityBody {
	return o.Payload
}

func (o *PatchReferenceEntityCodeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityCodeUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchReferenceEntityCodeBody patch reference entity code body
swagger:model PatchReferenceEntityCodeBody
*/
type PatchReferenceEntityCodeBody struct {

	// Reference entity code
	// Required: true
	Code *string `json:"code"`

	// Code of the reference entity image
	Image string `json:"image,omitempty"`

	// labels
	Labels *PatchReferenceEntityCodeParamsBodyLabels `json:"labels,omitempty"`
}

// Validate validates this patch reference entity code body
func (o *PatchReferenceEntityCodeBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchReferenceEntityCodeBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchReferenceEntityCodeBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityCodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityCodeBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityCodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityCodeParamsBodyLabels Reference entity labels for each locale
swagger:model PatchReferenceEntityCodeParamsBodyLabels
*/
type PatchReferenceEntityCodeParamsBodyLabels struct {

	// Reference entity label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this patch reference entity code params body labels
func (o *PatchReferenceEntityCodeParamsBodyLabels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityCodeParamsBodyLabels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityCodeParamsBodyLabels) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityCodeParamsBodyLabels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityCodeUnauthorizedBody patch reference entity code unauthorized body
swagger:model PatchReferenceEntityCodeUnauthorizedBody
*/
type PatchReferenceEntityCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity code unauthorized body
func (o *PatchReferenceEntityCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityCodeUnprocessableEntityBody patch reference entity code unprocessable entity body
swagger:model PatchReferenceEntityCodeUnprocessableEntityBody
*/
type PatchReferenceEntityCodeUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity code unprocessable entity body
func (o *PatchReferenceEntityCodeUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityCodeUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityCodeUnsupportedMediaTypeBody patch reference entity code unsupported media type body
swagger:model PatchReferenceEntityCodeUnsupportedMediaTypeBody
*/
type PatchReferenceEntityCodeUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity code unsupported media type body
func (o *PatchReferenceEntityCodeUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityCodeUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityCodeUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

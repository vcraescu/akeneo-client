// Code generated by go-swagger; DO NOT EDIT.

package reference_entity_attribute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetReferenceEntitiesCodeAttributesReader is a Reader for the GetReferenceEntitiesCodeAttributes structure.
type GetReferenceEntitiesCodeAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferenceEntitiesCodeAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferenceEntitiesCodeAttributesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReferenceEntitiesCodeAttributesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetReferenceEntitiesCodeAttributesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferenceEntitiesCodeAttributesOK creates a GetReferenceEntitiesCodeAttributesOK with default headers values
func NewGetReferenceEntitiesCodeAttributesOK() *GetReferenceEntitiesCodeAttributesOK {
	return &GetReferenceEntitiesCodeAttributesOK{}
}

/*GetReferenceEntitiesCodeAttributesOK handles this case with default header values.

Return the attributes of the given reference entity
*/
type GetReferenceEntitiesCodeAttributesOK struct {
	Payload []*GetReferenceEntitiesCodeAttributesOKBodyItems0
}

func (o *GetReferenceEntitiesCodeAttributesOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/attributes][%d] getReferenceEntitiesCodeAttributesOK  %+v", 200, o.Payload)
}

func (o *GetReferenceEntitiesCodeAttributesOK) GetPayload() []*GetReferenceEntitiesCodeAttributesOKBodyItems0 {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeAttributesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntitiesCodeAttributesUnauthorized creates a GetReferenceEntitiesCodeAttributesUnauthorized with default headers values
func NewGetReferenceEntitiesCodeAttributesUnauthorized() *GetReferenceEntitiesCodeAttributesUnauthorized {
	return &GetReferenceEntitiesCodeAttributesUnauthorized{}
}

/*GetReferenceEntitiesCodeAttributesUnauthorized handles this case with default header values.

Authentication required
*/
type GetReferenceEntitiesCodeAttributesUnauthorized struct {
	Payload *GetReferenceEntitiesCodeAttributesUnauthorizedBody
}

func (o *GetReferenceEntitiesCodeAttributesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/attributes][%d] getReferenceEntitiesCodeAttributesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReferenceEntitiesCodeAttributesUnauthorized) GetPayload() *GetReferenceEntitiesCodeAttributesUnauthorizedBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeAttributesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeAttributesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntitiesCodeAttributesNotAcceptable creates a GetReferenceEntitiesCodeAttributesNotAcceptable with default headers values
func NewGetReferenceEntitiesCodeAttributesNotAcceptable() *GetReferenceEntitiesCodeAttributesNotAcceptable {
	return &GetReferenceEntitiesCodeAttributesNotAcceptable{}
}

/*GetReferenceEntitiesCodeAttributesNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetReferenceEntitiesCodeAttributesNotAcceptable struct {
	Payload *GetReferenceEntitiesCodeAttributesNotAcceptableBody
}

func (o *GetReferenceEntitiesCodeAttributesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/attributes][%d] getReferenceEntitiesCodeAttributesNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetReferenceEntitiesCodeAttributesNotAcceptable) GetPayload() *GetReferenceEntitiesCodeAttributesNotAcceptableBody {
	return o.Payload
}

func (o *GetReferenceEntitiesCodeAttributesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntitiesCodeAttributesNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReferenceEntitiesCodeAttributesNotAcceptableBody get reference entities code attributes not acceptable body
swagger:model GetReferenceEntitiesCodeAttributesNotAcceptableBody
*/
type GetReferenceEntitiesCodeAttributesNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entities code attributes not acceptable body
func (o *GetReferenceEntitiesCodeAttributesNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeAttributesNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeAttributesOKBodyItems0 get reference entities code attributes o k body items0
swagger:model GetReferenceEntitiesCodeAttributesOKBodyItems0
*/
type GetReferenceEntitiesCodeAttributesOKBodyItems0 struct {

	// Extensions allowed when the attribute type is `image`
	AllowedExtensions []string `json:"allowed_extensions"`

	// Attribute code
	// Required: true
	Code *string `json:"code"`

	// Whether decimals are allowed when the attribute type is `number`
	DecimalsAllowed *bool `json:"decimals_allowed,omitempty"`

	// Whether the attribute should be part of the record's completeness calculation
	IsRequiredForCompleteness *bool `json:"is_required_for_completeness,omitempty"`

	// Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`
	IsRichTextEditor bool `json:"is_rich_text_editor,omitempty"`

	// Whether the UI should display a text area instead of a simple field when the attribute type is `text`
	IsTextarea *bool `json:"is_textarea,omitempty"`

	// labels
	Labels *GetReferenceEntitiesCodeAttributesOKBodyItems0Labels `json:"labels,omitempty"`

	// Maximum number of characters allowed for the value of the attribute when the attribute type is `text`
	MaxCharacters int64 `json:"max_characters,omitempty"`

	// Max file size in MB when the attribute type is `image`
	MaxFileSize string `json:"max_file_size,omitempty"`

	// Maximum value allowed when the attribute type is `number`
	MaxValue string `json:"max_value,omitempty"`

	// Minimum value allowed when the attribute type is `number`
	MinValue string `json:"min_value,omitempty"`

	// Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`
	ReferenceEntityCode string `json:"reference_entity_code,omitempty"`

	// Attribute type
	// Required: true
	// Enum: [text image number single_option multiple_options reference_entity_single_link reference_entity_multiple_links]
	Type *string `json:"type"`

	// Regexp expression used to validate the attribute value when the attribute type is `text`
	ValidationRegexp string `json:"validation_regexp,omitempty"`

	// Validation rule type used to validate the attribute value when the attribute type is `text`
	// Enum: [email url regexp none]
	ValidationRule *string `json:"validation_rule,omitempty"`

	// Whether the attribute is scopable, i.e. can have one value by channel
	ValuePerChannel *bool `json:"value_per_channel,omitempty"`

	// Whether the attribute is localizable, i.e. can have one value by locale
	ValuePerLocale *bool `json:"value_per_locale,omitempty"`
}

// Validate validates this get reference entities code attributes o k body items0
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValidationRule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	if o.Labels != nil {
		if err := o.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

var getReferenceEntitiesCodeAttributesOKBodyItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["text","image","number","single_option","multiple_options","reference_entity_single_link","reference_entity_multiple_links"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getReferenceEntitiesCodeAttributesOKBodyItems0TypeTypePropEnum = append(getReferenceEntitiesCodeAttributesOKBodyItems0TypeTypePropEnum, v)
	}
}

const (

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeText captures enum value "text"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeText string = "text"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeImage captures enum value "image"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeImage string = "image"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeNumber captures enum value "number"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeNumber string = "number"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeSingleOption captures enum value "single_option"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeSingleOption string = "single_option"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeMultipleOptions captures enum value "multiple_options"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeMultipleOptions string = "multiple_options"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeReferenceEntitySingleLink captures enum value "reference_entity_single_link"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeReferenceEntitySingleLink string = "reference_entity_single_link"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0TypeReferenceEntityMultipleLinks captures enum value "reference_entity_multiple_links"
	GetReferenceEntitiesCodeAttributesOKBodyItems0TypeReferenceEntityMultipleLinks string = "reference_entity_multiple_links"
)

// prop value enum
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getReferenceEntitiesCodeAttributesOKBodyItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

var getReferenceEntitiesCodeAttributesOKBodyItems0TypeValidationRulePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["email","url","regexp","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getReferenceEntitiesCodeAttributesOKBodyItems0TypeValidationRulePropEnum = append(getReferenceEntitiesCodeAttributesOKBodyItems0TypeValidationRulePropEnum, v)
	}
}

const (

	// GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleEmail captures enum value "email"
	GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleEmail string = "email"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleURL captures enum value "url"
	GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleURL string = "url"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleRegexp captures enum value "regexp"
	GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleRegexp string = "regexp"

	// GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleNone captures enum value "none"
	GetReferenceEntitiesCodeAttributesOKBodyItems0ValidationRuleNone string = "none"
)

// prop value enum
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateValidationRuleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getReferenceEntitiesCodeAttributesOKBodyItems0TypeValidationRulePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) validateValidationRule(formats strfmt.Registry) error {

	if swag.IsZero(o.ValidationRule) { // not required
		return nil
	}

	// value enum
	if err := o.validateValidationRuleEnum("validation_rule", "body", *o.ValidationRule); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeAttributesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeAttributesOKBodyItems0Labels Attribute labels for each locale
swagger:model GetReferenceEntitiesCodeAttributesOKBodyItems0Labels
*/
type GetReferenceEntitiesCodeAttributesOKBodyItems0Labels struct {

	// Attribute label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this get reference entities code attributes o k body items0 labels
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0Labels) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesOKBodyItems0Labels) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeAttributesOKBodyItems0Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntitiesCodeAttributesUnauthorizedBody get reference entities code attributes unauthorized body
swagger:model GetReferenceEntitiesCodeAttributesUnauthorizedBody
*/
type GetReferenceEntitiesCodeAttributesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entities code attributes unauthorized body
func (o *GetReferenceEntitiesCodeAttributesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntitiesCodeAttributesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntitiesCodeAttributesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package reference_entity_media_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostReferenceEntityMediaFilesReader is a Reader for the PostReferenceEntityMediaFiles structure.
type PostReferenceEntityMediaFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReferenceEntityMediaFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostReferenceEntityMediaFilesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostReferenceEntityMediaFilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostReferenceEntityMediaFilesUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostReferenceEntityMediaFilesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostReferenceEntityMediaFilesCreated creates a PostReferenceEntityMediaFilesCreated with default headers values
func NewPostReferenceEntityMediaFilesCreated() *PostReferenceEntityMediaFilesCreated {
	return &PostReferenceEntityMediaFilesCreated{}
}

/*PostReferenceEntityMediaFilesCreated handles this case with default header values.

Created
*/
type PostReferenceEntityMediaFilesCreated struct {
	/*URI of the created resource
	 */
	Location string
	/*Code of the media file
	 */
	ReferenceEntitiesMediaFileCode string
}

func (o *PostReferenceEntityMediaFilesCreated) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/reference-entities-media-files][%d] postReferenceEntityMediaFilesCreated ", 201)
}

func (o *PostReferenceEntityMediaFilesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	// response header Reference-entities-media-file-code
	o.ReferenceEntitiesMediaFileCode = response.GetHeader("Reference-entities-media-file-code")

	return nil
}

// NewPostReferenceEntityMediaFilesUnauthorized creates a PostReferenceEntityMediaFilesUnauthorized with default headers values
func NewPostReferenceEntityMediaFilesUnauthorized() *PostReferenceEntityMediaFilesUnauthorized {
	return &PostReferenceEntityMediaFilesUnauthorized{}
}

/*PostReferenceEntityMediaFilesUnauthorized handles this case with default header values.

Authentication required
*/
type PostReferenceEntityMediaFilesUnauthorized struct {
	Payload *PostReferenceEntityMediaFilesUnauthorizedBody
}

func (o *PostReferenceEntityMediaFilesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/reference-entities-media-files][%d] postReferenceEntityMediaFilesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostReferenceEntityMediaFilesUnauthorized) GetPayload() *PostReferenceEntityMediaFilesUnauthorizedBody {
	return o.Payload
}

func (o *PostReferenceEntityMediaFilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceEntityMediaFilesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceEntityMediaFilesUnsupportedMediaType creates a PostReferenceEntityMediaFilesUnsupportedMediaType with default headers values
func NewPostReferenceEntityMediaFilesUnsupportedMediaType() *PostReferenceEntityMediaFilesUnsupportedMediaType {
	return &PostReferenceEntityMediaFilesUnsupportedMediaType{}
}

/*PostReferenceEntityMediaFilesUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PostReferenceEntityMediaFilesUnsupportedMediaType struct {
	Payload *PostReferenceEntityMediaFilesUnsupportedMediaTypeBody
}

func (o *PostReferenceEntityMediaFilesUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/reference-entities-media-files][%d] postReferenceEntityMediaFilesUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PostReferenceEntityMediaFilesUnsupportedMediaType) GetPayload() *PostReferenceEntityMediaFilesUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PostReferenceEntityMediaFilesUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceEntityMediaFilesUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReferenceEntityMediaFilesUnprocessableEntity creates a PostReferenceEntityMediaFilesUnprocessableEntity with default headers values
func NewPostReferenceEntityMediaFilesUnprocessableEntity() *PostReferenceEntityMediaFilesUnprocessableEntity {
	return &PostReferenceEntityMediaFilesUnprocessableEntity{}
}

/*PostReferenceEntityMediaFilesUnprocessableEntity handles this case with default header values.

Unprocessable entity
*/
type PostReferenceEntityMediaFilesUnprocessableEntity struct {
	Payload *PostReferenceEntityMediaFilesUnprocessableEntityBody
}

func (o *PostReferenceEntityMediaFilesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/rest/v1/reference-entities-media-files][%d] postReferenceEntityMediaFilesUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostReferenceEntityMediaFilesUnprocessableEntity) GetPayload() *PostReferenceEntityMediaFilesUnprocessableEntityBody {
	return o.Payload
}

func (o *PostReferenceEntityMediaFilesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostReferenceEntityMediaFilesUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostReferenceEntityMediaFilesBody post reference entity media files body
swagger:model PostReferenceEntityMediaFilesBody
*/
type PostReferenceEntityMediaFilesBody struct {

	// The binary of the media file
	// Required: true
	// Format: binary
	File io.ReadCloser `json:"file"`
}

// Validate validates this post reference entity media files body
func (o *PostReferenceEntityMediaFilesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostReferenceEntityMediaFilesBody) validateFile(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"file", "body", io.ReadCloser(o.File)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceEntityMediaFilesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceEntityMediaFilesUnauthorizedBody post reference entity media files unauthorized body
swagger:model PostReferenceEntityMediaFilesUnauthorizedBody
*/
type PostReferenceEntityMediaFilesUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference entity media files unauthorized body
func (o *PostReferenceEntityMediaFilesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceEntityMediaFilesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceEntityMediaFilesUnprocessableEntityBody post reference entity media files unprocessable entity body
swagger:model PostReferenceEntityMediaFilesUnprocessableEntityBody
*/
type PostReferenceEntityMediaFilesUnprocessableEntityBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference entity media files unprocessable entity body
func (o *PostReferenceEntityMediaFilesUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceEntityMediaFilesUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostReferenceEntityMediaFilesUnsupportedMediaTypeBody post reference entity media files unsupported media type body
swagger:model PostReferenceEntityMediaFilesUnsupportedMediaTypeBody
*/
type PostReferenceEntityMediaFilesUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this post reference entity media files unsupported media type body
func (o *PostReferenceEntityMediaFilesUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostReferenceEntityMediaFilesUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PostReferenceEntityMediaFilesUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

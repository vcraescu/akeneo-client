// Code generated by go-swagger; DO NOT EDIT.

package reference_entity_record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetReferenceEntityRecordsCodeReader is a Reader for the GetReferenceEntityRecordsCode structure.
type GetReferenceEntityRecordsCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferenceEntityRecordsCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferenceEntityRecordsCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReferenceEntityRecordsCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReferenceEntityRecordsCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetReferenceEntityRecordsCodeNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferenceEntityRecordsCodeOK creates a GetReferenceEntityRecordsCodeOK with default headers values
func NewGetReferenceEntityRecordsCodeOK() *GetReferenceEntityRecordsCodeOK {
	return &GetReferenceEntityRecordsCodeOK{}
}

/*GetReferenceEntityRecordsCodeOK handles this case with default header values.

OK
*/
type GetReferenceEntityRecordsCodeOK struct {
	Payload *GetReferenceEntityRecordsCodeOKBody
}

func (o *GetReferenceEntityRecordsCodeOK) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}][%d] getReferenceEntityRecordsCodeOK  %+v", 200, o.Payload)
}

func (o *GetReferenceEntityRecordsCodeOK) GetPayload() *GetReferenceEntityRecordsCodeOKBody {
	return o.Payload
}

func (o *GetReferenceEntityRecordsCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntityRecordsCodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntityRecordsCodeUnauthorized creates a GetReferenceEntityRecordsCodeUnauthorized with default headers values
func NewGetReferenceEntityRecordsCodeUnauthorized() *GetReferenceEntityRecordsCodeUnauthorized {
	return &GetReferenceEntityRecordsCodeUnauthorized{}
}

/*GetReferenceEntityRecordsCodeUnauthorized handles this case with default header values.

Authentication required
*/
type GetReferenceEntityRecordsCodeUnauthorized struct {
	Payload *GetReferenceEntityRecordsCodeUnauthorizedBody
}

func (o *GetReferenceEntityRecordsCodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}][%d] getReferenceEntityRecordsCodeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReferenceEntityRecordsCodeUnauthorized) GetPayload() *GetReferenceEntityRecordsCodeUnauthorizedBody {
	return o.Payload
}

func (o *GetReferenceEntityRecordsCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntityRecordsCodeUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntityRecordsCodeNotFound creates a GetReferenceEntityRecordsCodeNotFound with default headers values
func NewGetReferenceEntityRecordsCodeNotFound() *GetReferenceEntityRecordsCodeNotFound {
	return &GetReferenceEntityRecordsCodeNotFound{}
}

/*GetReferenceEntityRecordsCodeNotFound handles this case with default header values.

Resource not found
*/
type GetReferenceEntityRecordsCodeNotFound struct {
	Payload *GetReferenceEntityRecordsCodeNotFoundBody
}

func (o *GetReferenceEntityRecordsCodeNotFound) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}][%d] getReferenceEntityRecordsCodeNotFound  %+v", 404, o.Payload)
}

func (o *GetReferenceEntityRecordsCodeNotFound) GetPayload() *GetReferenceEntityRecordsCodeNotFoundBody {
	return o.Payload
}

func (o *GetReferenceEntityRecordsCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntityRecordsCodeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferenceEntityRecordsCodeNotAcceptable creates a GetReferenceEntityRecordsCodeNotAcceptable with default headers values
func NewGetReferenceEntityRecordsCodeNotAcceptable() *GetReferenceEntityRecordsCodeNotAcceptable {
	return &GetReferenceEntityRecordsCodeNotAcceptable{}
}

/*GetReferenceEntityRecordsCodeNotAcceptable handles this case with default header values.

Not Acceptable
*/
type GetReferenceEntityRecordsCodeNotAcceptable struct {
	Payload *GetReferenceEntityRecordsCodeNotAcceptableBody
}

func (o *GetReferenceEntityRecordsCodeNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}][%d] getReferenceEntityRecordsCodeNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetReferenceEntityRecordsCodeNotAcceptable) GetPayload() *GetReferenceEntityRecordsCodeNotAcceptableBody {
	return o.Payload
}

func (o *GetReferenceEntityRecordsCodeNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReferenceEntityRecordsCodeNotAcceptableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReferenceEntityRecordsCodeNotAcceptableBody get reference entity records code not acceptable body
swagger:model GetReferenceEntityRecordsCodeNotAcceptableBody
*/
type GetReferenceEntityRecordsCodeNotAcceptableBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entity records code not acceptable body
func (o *GetReferenceEntityRecordsCodeNotAcceptableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeNotAcceptableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeNotAcceptableBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeNotAcceptableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntityRecordsCodeNotFoundBody get reference entity records code not found body
swagger:model GetReferenceEntityRecordsCodeNotFoundBody
*/
type GetReferenceEntityRecordsCodeNotFoundBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entity records code not found body
func (o *GetReferenceEntityRecordsCodeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntityRecordsCodeOKBody get reference entity records code o k body
swagger:model GetReferenceEntityRecordsCodeOKBody
*/
type GetReferenceEntityRecordsCodeOKBody struct {

	// Code of the record
	// Required: true
	Code *string `json:"code"`

	// values
	Values *GetReferenceEntityRecordsCodeOKBodyValues `json:"values,omitempty"`
}

// Validate validates this get reference entity records code o k body
func (o *GetReferenceEntityRecordsCodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceEntityRecordsCodeOKBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("getReferenceEntityRecordsCodeOK"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *GetReferenceEntityRecordsCodeOKBody) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getReferenceEntityRecordsCodeOK" + "." + "values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntityRecordsCodeOKBodyValues Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details
swagger:model GetReferenceEntityRecordsCodeOKBodyValues
*/
type GetReferenceEntityRecordsCodeOKBodyValues struct {

	// attribute code
	AttributeCode []*GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this get reference entity records code o k body values
func (o *GetReferenceEntityRecordsCodeOKBodyValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReferenceEntityRecordsCodeOKBodyValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getReferenceEntityRecordsCodeOK" + "." + "values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBodyValues) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBodyValues) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeOKBodyValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0 get reference entity records code o k body values attribute code items0
swagger:model GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0
*/
type GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0 struct {

	// Channel code of the reference entity record value
	Channel string `json:"channel,omitempty"`

	// Reference entity record value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the reference entity record value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this get reference entity records code o k body values attribute code items0
func (o *GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeOKBodyValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReferenceEntityRecordsCodeUnauthorizedBody get reference entity records code unauthorized body
swagger:model GetReferenceEntityRecordsCodeUnauthorizedBody
*/
type GetReferenceEntityRecordsCodeUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this get reference entity records code unauthorized body
func (o *GetReferenceEntityRecordsCodeUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReferenceEntityRecordsCodeUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetReferenceEntityRecordsCodeUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

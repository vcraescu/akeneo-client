// Code generated by go-swagger; DO NOT EDIT.

package reference_entity_record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchReferenceEntityRecordsReader is a Reader for the PatchReferenceEntityRecords structure.
type PatchReferenceEntityRecordsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchReferenceEntityRecordsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchReferenceEntityRecordsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchReferenceEntityRecordsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewPatchReferenceEntityRecordsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPatchReferenceEntityRecordsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchReferenceEntityRecordsOK creates a PatchReferenceEntityRecordsOK with default headers values
func NewPatchReferenceEntityRecordsOK() *PatchReferenceEntityRecordsOK {
	return &PatchReferenceEntityRecordsOK{}
}

/*PatchReferenceEntityRecordsOK handles this case with default header values.

OK
*/
type PatchReferenceEntityRecordsOK struct {
	Payload []*PatchReferenceEntityRecordsOKBodyItems0
}

func (o *PatchReferenceEntityRecordsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{reference_entity_code}/records][%d] patchReferenceEntityRecordsOK  %+v", 200, o.Payload)
}

func (o *PatchReferenceEntityRecordsOK) GetPayload() []*PatchReferenceEntityRecordsOKBodyItems0 {
	return o.Payload
}

func (o *PatchReferenceEntityRecordsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchReferenceEntityRecordsUnauthorized creates a PatchReferenceEntityRecordsUnauthorized with default headers values
func NewPatchReferenceEntityRecordsUnauthorized() *PatchReferenceEntityRecordsUnauthorized {
	return &PatchReferenceEntityRecordsUnauthorized{}
}

/*PatchReferenceEntityRecordsUnauthorized handles this case with default header values.

Authentication required
*/
type PatchReferenceEntityRecordsUnauthorized struct {
	Payload *PatchReferenceEntityRecordsUnauthorizedBody
}

func (o *PatchReferenceEntityRecordsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{reference_entity_code}/records][%d] patchReferenceEntityRecordsUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchReferenceEntityRecordsUnauthorized) GetPayload() *PatchReferenceEntityRecordsUnauthorizedBody {
	return o.Payload
}

func (o *PatchReferenceEntityRecordsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityRecordsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchReferenceEntityRecordsRequestEntityTooLarge creates a PatchReferenceEntityRecordsRequestEntityTooLarge with default headers values
func NewPatchReferenceEntityRecordsRequestEntityTooLarge() *PatchReferenceEntityRecordsRequestEntityTooLarge {
	return &PatchReferenceEntityRecordsRequestEntityTooLarge{}
}

/*PatchReferenceEntityRecordsRequestEntityTooLarge handles this case with default header values.

Request Entity Too Large
*/
type PatchReferenceEntityRecordsRequestEntityTooLarge struct {
	Payload *PatchReferenceEntityRecordsRequestEntityTooLargeBody
}

func (o *PatchReferenceEntityRecordsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{reference_entity_code}/records][%d] patchReferenceEntityRecordsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *PatchReferenceEntityRecordsRequestEntityTooLarge) GetPayload() *PatchReferenceEntityRecordsRequestEntityTooLargeBody {
	return o.Payload
}

func (o *PatchReferenceEntityRecordsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityRecordsRequestEntityTooLargeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchReferenceEntityRecordsUnsupportedMediaType creates a PatchReferenceEntityRecordsUnsupportedMediaType with default headers values
func NewPatchReferenceEntityRecordsUnsupportedMediaType() *PatchReferenceEntityRecordsUnsupportedMediaType {
	return &PatchReferenceEntityRecordsUnsupportedMediaType{}
}

/*PatchReferenceEntityRecordsUnsupportedMediaType handles this case with default header values.

Unsupported Media type
*/
type PatchReferenceEntityRecordsUnsupportedMediaType struct {
	Payload *PatchReferenceEntityRecordsUnsupportedMediaTypeBody
}

func (o *PatchReferenceEntityRecordsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /api/rest/v1/reference-entities/{reference_entity_code}/records][%d] patchReferenceEntityRecordsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *PatchReferenceEntityRecordsUnsupportedMediaType) GetPayload() *PatchReferenceEntityRecordsUnsupportedMediaTypeBody {
	return o.Payload
}

func (o *PatchReferenceEntityRecordsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchReferenceEntityRecordsUnsupportedMediaTypeBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchReferenceEntityRecordsOKBodyItems0 patch reference entity records o k body items0
swagger:model PatchReferenceEntityRecordsOKBodyItems0
*/
type PatchReferenceEntityRecordsOKBodyItems0 struct {

	// Resource code
	Code string `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`

	// HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this patch reference entity records o k body items0
func (o *PatchReferenceEntityRecordsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsParamsBodyItems0 patch reference entity records params body items0
swagger:model PatchReferenceEntityRecordsParamsBodyItems0
*/
type PatchReferenceEntityRecordsParamsBodyItems0 struct {

	// Code of the record
	// Required: true
	Code *string `json:"code"`

	// values
	Values *PatchReferenceEntityRecordsParamsBodyItems0Values `json:"values,omitempty"`
}

// Validate validates this patch reference entity records params body items0
func (o *PatchReferenceEntityRecordsParamsBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchReferenceEntityRecordsParamsBodyItems0) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PatchReferenceEntityRecordsParamsBodyItems0) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	if o.Values != nil {
		if err := o.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsParamsBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsParamsBodyItems0Values Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details
swagger:model PatchReferenceEntityRecordsParamsBodyItems0Values
*/
type PatchReferenceEntityRecordsParamsBodyItems0Values struct {

	// attribute code
	AttributeCode []*PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this patch reference entity records params body items0 values
func (o *PatchReferenceEntityRecordsParamsBodyItems0Values) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchReferenceEntityRecordsParamsBodyItems0Values) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(o.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(o.AttributeCode); i++ {
		if swag.IsZero(o.AttributeCode[i]) { // not required
			continue
		}

		if o.AttributeCode[i] != nil {
			if err := o.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0Values) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0Values) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsParamsBodyItems0Values
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0 patch reference entity records params body items0 values attribute code items0
swagger:model PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0
*/
type PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0 struct {

	// Channel code of the reference entity record value
	Channel string `json:"channel,omitempty"`

	// Reference entity record value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the reference entity record value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this patch reference entity records params body items0 values attribute code items0
func (o *PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsParamsBodyItems0ValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsRequestEntityTooLargeBody patch reference entity records request entity too large body
swagger:model PatchReferenceEntityRecordsRequestEntityTooLargeBody
*/
type PatchReferenceEntityRecordsRequestEntityTooLargeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity records request entity too large body
func (o *PatchReferenceEntityRecordsRequestEntityTooLargeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsRequestEntityTooLargeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsRequestEntityTooLargeBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsRequestEntityTooLargeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsUnauthorizedBody patch reference entity records unauthorized body
swagger:model PatchReferenceEntityRecordsUnauthorizedBody
*/
type PatchReferenceEntityRecordsUnauthorizedBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity records unauthorized body
func (o *PatchReferenceEntityRecordsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchReferenceEntityRecordsUnsupportedMediaTypeBody patch reference entity records unsupported media type body
swagger:model PatchReferenceEntityRecordsUnsupportedMediaTypeBody
*/
type PatchReferenceEntityRecordsUnsupportedMediaTypeBody struct {

	// HTTP status code
	Code int64 `json:"code,omitempty"`

	// Message explaining the error
	Message string `json:"message,omitempty"`
}

// Validate validates this patch reference entity records unsupported media type body
func (o *PatchReferenceEntityRecordsUnsupportedMediaTypeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsUnsupportedMediaTypeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchReferenceEntityRecordsUnsupportedMediaTypeBody) UnmarshalBinary(b []byte) error {
	var res PatchReferenceEntityRecordsUnsupportedMediaTypeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

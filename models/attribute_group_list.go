// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AttributeGroupList attribute group list
//
// swagger:model AttributeGroupList
type AttributeGroupList struct {

	// links
	Links *AttributeGroupListAO0Links `json:"_links,omitempty"`

	// Attribute codes that compose the attribute group
	Attributes []string `json:"attributes"`

	// Attribute group code
	// Required: true
	Code *string `json:"code"`

	// labels
	Labels *AttributeGroupListAO1Labels `json:"labels,omitempty"`

	// Attribute group order among other attribute groups
	SortOrder int64 `json:"sort_order,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *AttributeGroupList) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Links *AttributeGroupListAO0Links `json:"_links,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Links = dataAO0.Links

	// AO1
	var dataAO1 struct {
		Attributes []string `json:"attributes"`

		Code *string `json:"code"`

		Labels *AttributeGroupListAO1Labels `json:"labels,omitempty"`

		SortOrder int64 `json:"sort_order,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Attributes = dataAO1.Attributes

	m.Code = dataAO1.Code

	m.Labels = dataAO1.Labels

	m.SortOrder = dataAO1.SortOrder

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m AttributeGroupList) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Links *AttributeGroupListAO0Links `json:"_links,omitempty"`
	}

	dataAO0.Links = m.Links

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		Attributes []string `json:"attributes"`

		Code *string `json:"code"`

		Labels *AttributeGroupListAO1Labels `json:"labels,omitempty"`

		SortOrder int64 `json:"sort_order,omitempty"`
	}

	dataAO1.Attributes = m.Attributes

	dataAO1.Code = m.Code

	dataAO1.Labels = m.Labels

	dataAO1.SortOrder = m.SortOrder

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this attribute group list
func (m *AttributeGroupList) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AttributeGroupList) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (m *AttributeGroupList) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", m.Code); err != nil {
		return err
	}

	return nil
}

func (m *AttributeGroupList) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(m.Labels) { // not required
		return nil
	}

	if m.Labels != nil {
		if err := m.Labels.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("labels")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AttributeGroupList) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AttributeGroupList) UnmarshalBinary(b []byte) error {
	var res AttributeGroupList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AttributeGroupListAO0Links attribute group list a o0 links
//
// swagger:model AttributeGroupListAO0Links
type AttributeGroupListAO0Links struct {

	// self
	Self *AttributeGroupListAO0LinksSelf `json:"self,omitempty"`
}

// Validate validates this attribute group list a o0 links
func (m *AttributeGroupListAO0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AttributeGroupListAO0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AttributeGroupListAO0Links) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AttributeGroupListAO0Links) UnmarshalBinary(b []byte) error {
	var res AttributeGroupListAO0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AttributeGroupListAO0LinksSelf attribute group list a o0 links self
//
// swagger:model AttributeGroupListAO0LinksSelf
type AttributeGroupListAO0LinksSelf struct {

	// URI of the resource
	Href string `json:"href,omitempty"`
}

// Validate validates this attribute group list a o0 links self
func (m *AttributeGroupListAO0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AttributeGroupListAO0LinksSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AttributeGroupListAO0LinksSelf) UnmarshalBinary(b []byte) error {
	var res AttributeGroupListAO0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AttributeGroupListAO1Labels Attribute group labels for each locale
//
// swagger:model AttributeGroupListAO1Labels
type AttributeGroupListAO1Labels struct {

	// Attribute group label for the locale `localeCode`
	LocaleCode string `json:"localeCode,omitempty"`
}

// Validate validates this attribute group list a o1 labels
func (m *AttributeGroupListAO1Labels) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AttributeGroupListAO1Labels) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AttributeGroupListAO1Labels) UnmarshalBinary(b []byte) error {
	var res AttributeGroupListAO1Labels
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

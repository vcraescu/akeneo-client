// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeprecatedAsset deprecated asset
//
// swagger:model DeprecatedAsset
type DeprecatedAsset struct {

	// Codes of the PAM asset categories in which the asset is classified
	Categories []string `json:"categories"`

	// PAM asset code
	// Required: true
	Code *string `json:"code"`

	// Description of the PAM asset
	Description string `json:"description,omitempty"`

	// Date on which the PAM asset expire
	EndOfUse string `json:"end_of_use,omitempty"`

	// Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale
	Localizable *bool `json:"localizable,omitempty"`

	// Reference files of the PAM asset
	ReferenceFiles []*DeprecatedAssetReferenceFilesItems0 `json:"reference_files"`

	// Tags of the PAM asset
	Tags []string `json:"tags"`

	// Variations of the PAM asset
	VariationFiles []*DeprecatedAssetVariationFilesItems0 `json:"variation_files"`
}

// Validate validates this deprecated asset
func (m *DeprecatedAsset) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReferenceFiles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVariationFiles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAsset) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", m.Code); err != nil {
		return err
	}

	return nil
}

func (m *DeprecatedAsset) validateReferenceFiles(formats strfmt.Registry) error {

	if swag.IsZero(m.ReferenceFiles) { // not required
		return nil
	}

	for i := 0; i < len(m.ReferenceFiles); i++ {
		if swag.IsZero(m.ReferenceFiles[i]) { // not required
			continue
		}

		if m.ReferenceFiles[i] != nil {
			if err := m.ReferenceFiles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("reference_files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DeprecatedAsset) validateVariationFiles(formats strfmt.Registry) error {

	if swag.IsZero(m.VariationFiles) { // not required
		return nil
	}

	for i := 0; i < len(m.VariationFiles); i++ {
		if swag.IsZero(m.VariationFiles[i]) { // not required
			continue
		}

		if m.VariationFiles[i] != nil {
			if err := m.VariationFiles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("variation_files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAsset) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAsset) UnmarshalBinary(b []byte) error {
	var res DeprecatedAsset
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetReferenceFilesItems0 deprecated asset reference files items0
//
// swagger:model DeprecatedAssetReferenceFilesItems0
type DeprecatedAssetReferenceFilesItems0 struct {

	// link
	Link *DeprecatedAssetReferenceFilesItems0Link `json:"_link,omitempty"`

	// Code of the reference file
	Code string `json:"code,omitempty"`

	// Locale code of the reference file
	Locale string `json:"locale,omitempty"`
}

// Validate validates this deprecated asset reference files items0
func (m *DeprecatedAssetReferenceFilesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetReferenceFilesItems0) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(m.Link) { // not required
		return nil
	}

	if m.Link != nil {
		if err := m.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetReferenceFilesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetReferenceFilesItems0Link Links to get and download the reference file
//
// swagger:model DeprecatedAssetReferenceFilesItems0Link
type DeprecatedAssetReferenceFilesItems0Link struct {

	// download
	Download *DeprecatedAssetReferenceFilesItems0LinkDownload `json:"download,omitempty"`

	// self
	Self *DeprecatedAssetReferenceFilesItems0LinkSelf `json:"self,omitempty"`
}

// Validate validates this deprecated asset reference files items0 link
func (m *DeprecatedAssetReferenceFilesItems0Link) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetReferenceFilesItems0Link) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(m.Download) { // not required
		return nil
	}

	if m.Download != nil {
		if err := m.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

func (m *DeprecatedAssetReferenceFilesItems0Link) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0Link) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0Link) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetReferenceFilesItems0Link
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetReferenceFilesItems0LinkDownload deprecated asset reference files items0 link download
//
// swagger:model DeprecatedAssetReferenceFilesItems0LinkDownload
type DeprecatedAssetReferenceFilesItems0LinkDownload struct {

	// URI to download the reference file
	Href string `json:"href,omitempty"`
}

// Validate validates this deprecated asset reference files items0 link download
func (m *DeprecatedAssetReferenceFilesItems0LinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0LinkDownload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0LinkDownload) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetReferenceFilesItems0LinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetReferenceFilesItems0LinkSelf deprecated asset reference files items0 link self
//
// swagger:model DeprecatedAssetReferenceFilesItems0LinkSelf
type DeprecatedAssetReferenceFilesItems0LinkSelf struct {

	// URI of the reference file entity
	Href string `json:"href,omitempty"`
}

// Validate validates this deprecated asset reference files items0 link self
func (m *DeprecatedAssetReferenceFilesItems0LinkSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0LinkSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetReferenceFilesItems0LinkSelf) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetReferenceFilesItems0LinkSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFilesItems0 deprecated asset variation files items0
//
// swagger:model DeprecatedAssetVariationFilesItems0
type DeprecatedAssetVariationFilesItems0 struct {

	// link
	Link *DeprecatedAssetVariationFilesItems0Link `json:"_link,omitempty"`

	// Code of the variation
	Code string `json:"code,omitempty"`

	// Locale code of the variation
	Locale string `json:"locale,omitempty"`

	// Channel code of the variation
	Scope string `json:"scope,omitempty"`
}

// Validate validates this deprecated asset variation files items0
func (m *DeprecatedAssetVariationFilesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetVariationFilesItems0) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(m.Link) { // not required
		return nil
	}

	if m.Link != nil {
		if err := m.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFilesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFilesItems0Link Links to get and download the variation file
//
// swagger:model DeprecatedAssetVariationFilesItems0Link
type DeprecatedAssetVariationFilesItems0Link struct {

	// download
	Download *DeprecatedAssetVariationFilesItems0LinkDownload `json:"download,omitempty"`

	// self
	Self *DeprecatedAssetVariationFilesItems0LinkSelf `json:"self,omitempty"`
}

// Validate validates this deprecated asset variation files items0 link
func (m *DeprecatedAssetVariationFilesItems0Link) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetVariationFilesItems0Link) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(m.Download) { // not required
		return nil
	}

	if m.Download != nil {
		if err := m.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

func (m *DeprecatedAssetVariationFilesItems0Link) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0Link) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0Link) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFilesItems0Link
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFilesItems0LinkDownload deprecated asset variation files items0 link download
//
// swagger:model DeprecatedAssetVariationFilesItems0LinkDownload
type DeprecatedAssetVariationFilesItems0LinkDownload struct {

	// URI to download the variation file
	Href string `json:"href,omitempty"`
}

// Validate validates this deprecated asset variation files items0 link download
func (m *DeprecatedAssetVariationFilesItems0LinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0LinkDownload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0LinkDownload) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFilesItems0LinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFilesItems0LinkSelf deprecated asset variation files items0 link self
//
// swagger:model DeprecatedAssetVariationFilesItems0LinkSelf
type DeprecatedAssetVariationFilesItems0LinkSelf struct {

	// URI of the variation entity
	Href string `json:"href,omitempty"`
}

// Validate validates this deprecated asset variation files items0 link self
func (m *DeprecatedAssetVariationFilesItems0LinkSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0LinkSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFilesItems0LinkSelf) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFilesItems0LinkSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeprecatedAssetVariationFile deprecated asset variation file
//
// swagger:model DeprecatedAssetVariationFile
type DeprecatedAssetVariationFile struct {

	// link
	Link *DeprecatedAssetVariationFileLink `json:"_link,omitempty"`

	// Code of the PAM asset variation file
	Code string `json:"code,omitempty"`

	// Locale of the PAM asset variation file, equal to `null` if the asset is not localizable
	Locale string `json:"locale,omitempty"`

	// Channel of the PAM asset variation file
	Scope string `json:"scope,omitempty"`
}

// Validate validates this deprecated asset variation file
func (m *DeprecatedAssetVariationFile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetVariationFile) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(m.Link) { // not required
		return nil
	}

	if m.Link != nil {
		if err := m.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFile) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFileLink Links to get and download the reference file
//
// swagger:model DeprecatedAssetVariationFileLink
type DeprecatedAssetVariationFileLink struct {

	// download
	Download *DeprecatedAssetVariationFileLinkDownload `json:"download,omitempty"`
}

// Validate validates this deprecated asset variation file link
func (m *DeprecatedAssetVariationFileLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDownload(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeprecatedAssetVariationFileLink) validateDownload(formats strfmt.Registry) error {

	if swag.IsZero(m.Download) { // not required
		return nil
	}

	if m.Download != nil {
		if err := m.Download.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_link" + "." + "download")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFileLink) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFileLink) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFileLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DeprecatedAssetVariationFileLinkDownload deprecated asset variation file link download
//
// swagger:model DeprecatedAssetVariationFileLinkDownload
type DeprecatedAssetVariationFileLinkDownload struct {

	// URI to download the variation file
	Href string `json:"href,omitempty"`
}

// Validate validates this deprecated asset variation file link download
func (m *DeprecatedAssetVariationFileLinkDownload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeprecatedAssetVariationFileLinkDownload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeprecatedAssetVariationFileLinkDownload) UnmarshalBinary(b []byte) error {
	var res DeprecatedAssetVariationFileLinkDownload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReferenceEntityRecord reference entity record
//
// swagger:model ReferenceEntityRecord
type ReferenceEntityRecord struct {

	// Code of the record
	// Required: true
	Code *string `json:"code"`

	// values
	Values *ReferenceEntityRecordValues `json:"values,omitempty"`
}

// Validate validates this reference entity record
func (m *ReferenceEntityRecord) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReferenceEntityRecord) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", m.Code); err != nil {
		return err
	}

	return nil
}

func (m *ReferenceEntityRecord) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(m.Values) { // not required
		return nil
	}

	if m.Values != nil {
		if err := m.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReferenceEntityRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReferenceEntityRecord) UnmarshalBinary(b []byte) error {
	var res ReferenceEntityRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ReferenceEntityRecordValues Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details
//
// swagger:model ReferenceEntityRecordValues
type ReferenceEntityRecordValues struct {

	// attribute code
	AttributeCode []*ReferenceEntityRecordValuesAttributeCodeItems0 `json:"attributeCode"`
}

// Validate validates this reference entity record values
func (m *ReferenceEntityRecordValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReferenceEntityRecordValues) validateAttributeCode(formats strfmt.Registry) error {

	if swag.IsZero(m.AttributeCode) { // not required
		return nil
	}

	for i := 0; i < len(m.AttributeCode); i++ {
		if swag.IsZero(m.AttributeCode[i]) { // not required
			continue
		}

		if m.AttributeCode[i] != nil {
			if err := m.AttributeCode[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + "attributeCode" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReferenceEntityRecordValues) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReferenceEntityRecordValues) UnmarshalBinary(b []byte) error {
	var res ReferenceEntityRecordValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ReferenceEntityRecordValuesAttributeCodeItems0 reference entity record values attribute code items0
//
// swagger:model ReferenceEntityRecordValuesAttributeCodeItems0
type ReferenceEntityRecordValuesAttributeCodeItems0 struct {

	// Channel code of the reference entity record value
	Channel string `json:"channel,omitempty"`

	// Reference entity record value
	Data interface{} `json:"data,omitempty"`

	// Locale code of the reference entity record value
	Locale string `json:"locale,omitempty"`
}

// Validate validates this reference entity record values attribute code items0
func (m *ReferenceEntityRecordValuesAttributeCodeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReferenceEntityRecordValuesAttributeCodeItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReferenceEntityRecordValuesAttributeCodeItems0) UnmarshalBinary(b []byte) error {
	var res ReferenceEntityRecordValuesAttributeCodeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
